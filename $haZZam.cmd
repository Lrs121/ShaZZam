::$-h-@-Z-Z-@-m! A native command shell Windows image deployment tool. ~ By Joshua Cline
::Build, administrate and backup your Windows in a native WinPE recovery environment.
@ECHO OFF&&SETLOCAL ENABLEDELAYEDEXPANSION&&SET "ORIG_CD=%CD%"&&CD /D %~DP0
FOR %%a in (1 2 3 4 5 6 7 8 9) DO (CALL SET ARG%%a=%%%%a)
Reg.exe query "HKU\S-1-5-19\Environment">NUL
IF NOT %ERRORLEVEL% EQU 0 ECHO Right-Click ^& Run As Administrator&&PAUSE&&GOTO:CLEAN_EXIT
FOR /F "tokens=*" %%a in ('ECHO %CD%') DO (SET PROG_FOLDER=%%a)
FOR %%G in (A B C D E F G H I J K L M N O P Q R S T U V W X Y Z) DO (CALL SET "PROG_FOLDER=%%PROG_FOLDER:%%G=%%G%%")
FOR /F "delims=" %%G in ('CMD.EXE /D /U /C ECHO %PROG_FOLDER%^| FIND /V ""') do (IF "%%G"==" " ECHO Remove the space from the Folder-Name, then launch again&&PAUSE&&GOTO:CLEAN_EXIT)
SET DRVTAR=%SYSTEMDRIVE%&&SET WINTAR=%WINDIR%&&SET USRTAR=%USERPROFILE%
SET HIVE_USER=HKCU&&SET HIVE_SOFTWARE=HKLM\SOFTWARE&&SET HIVE_SYSTEM=HKLM\SYSTEM
IF DEFINED ARG1 FOR %%G in (A B C D E F G H I J K L M N O P Q R S T U V W X Y Z) DO (CALL SET ARG1=%%ARG1:%%G=%%G%%&&CALL SET ARG2=%%ARG2:%%G=%%G%%&&CALL SET ARG3=%%ARG3:%%G=%%G%%&&CALL SET ARG4=%%ARG4:%%G=%%G%%&&CALL SET ARG5=%%ARG5:%%G=%%G%%&&CALL SET ARG6=%%ARG6:%%G=%%G%%&&CALL SET ARG7=%%ARG7:%%G=%%G%%&&CALL SET ARG8=%%ARG8:%%G=%%G%%&&CALL SET ARG9=%%ARG9:%%G=%%G%%)
IF DEFINED ARG1 SET PROG_MODE=COMMAND&&GOTO:COMMAND_MODE
IF "%PROG_FOLDER%"=="X:\$" IF "%SystemDrive%"=="X:" SET PROG_MODE=RAMDISK&&COLOR 0B&&CALL:TITLECARD
IF NOT "%PROG_FOLDER%"=="X:\$" SET PROG_MODE=PORTABLE&&COLOR 0A&&CALL:TITLECARD
IF "%PROG_MODE%"=="RAMDISK" REG.EXE DELETE "HKEY_LOCAL_MACHINE\SYSTEM\ControlSet001\Control\MiniNT" /f>NUL 2>&1
IF "%PROG_MODE%"=="RAMDISK" CALL:HOME_AUTO
REM PROG_MAIN_PROG_MAIN_PROG_MAIN_PROG_MAIN_PROG_MAIN_PROG_MAIN_PROG_MAIN_
:PROG_MAIN
REM PROG_MAIN_PROG_MAIN_PROG_MAIN_PROG_MAIN_PROG_MAIN_PROG_MAIN_PROG_MAIN_
IF "%PROG_MODE%"=="RAMDISK" IF "%PROG_SOURCE%"=="X:\$" CALL:HOME_AUTO
@ECHO OFF&&CALL:SETS_HANDLER&&CALL:FOLDER_LOCATE&&CALL:OBJ_EXIST&&CALL:IMAGE_EXIST
IF NOT DEFINED COLOR_SLOT SET CLRTMP=%RANDOM%%RANDOM%&&SET "CLRTMP=!CLRTMP:~5,5!"&&SET "CLRTMP=!CLRTMP:~1,1!"&&CALL COLOR %CLRTMP%
CLS&&TITLE  [%CD%\] $-h-@-Z-Z-@-m^^! A native command shell Windows image deployment tool.&&CALL:PAD_LINE&&IF DEFINED COLOR_SLOT COLOR %COLOR_SLOT%
IF NOT "%PROG_MODE%"=="RAMDISK" ECHO                  $-h-@-Z-Z-@-m^^! Image-Deploy Portable&&CALL:PAD_LINE
IF "%PROG_MODE%"=="RAMDISK" ECHO              $-h-@-Z-Z-@-m^^! Image-Deploy Boot-Environment&&CALL:PAD_LINE
ECHO                          ~ Main Dashboard ~ &&CALL:PAD_LINE
IF EXIST "%PROG_SOURCE%\DISK_TARGET" IF "%PROG_SOURCE%"=="%PROG_FOLDER%" ECHO   {@}Attempt Home-Remount  {@@}Attempt Home-Reassign
ECHO   {1}Image Management
ECHO   {2}Image Processor
ECHO   {3}Package Creator
ECHO   {4}File Management
ECHO   {5}Disk Management
ECHO   {6}Tasks
ECHO   {0}Settings                                         [MODE[%PROG_MODE%]&&CALL:PAD_LINE
IF DEFINED DISK_TARGET IF "%HOME_MOUNT%"=="YES" IF "%PROG_SOURCE%"=="S:\$" ECHO   [Disk[%DISK_NUMBER%] [ID[%DISK_TARGET%]&&CALL:PAD_LINE
IF "%MACRO_TOGGLE%"=="ENABLED" ECHO   {Q}uit {%HOTKEY_1%} {%HOTKEY_2%} {%HOTKEY_3%} {%HOTKEY_4%} {%HOTKEY_5%} {%HOTKEY_6%} {%HOTKEY_7%} {%HOTKEY_8%} {%HOTKEY_9%}&&CALL:PAD_LINE
IF NOT "%MACRO_TOGGLE%"=="ENABLED" ECHO   {Q}uit {?}Info&&CALL:PAD_LINE
::RAMDISK-PADFIX
IF DEFINED DISK_TARGET IF "%HOME_MOUNT%"=="YES" IF "%PROG_SOURCE%"=="S:\$" CALL:PAD_LINE >NUL
CALL:MENU_SELECT
IF "%SELECT%"=="~" SET&&PAUSE
IF "%SELECT%"=="Q" GOTO:QUIT
IF "%SELECT%"=="?" CALL:PROG_MAIN_HELP
IF "%SELECT%"=="RESTART" GOTO:RESTART
IF NOT DEFINED DISCLAIMER CALL:DISCLAIMER&&GOTO:PROG_MAIN
IF "%MACRO_TOGGLE%"=="ENABLED" CALL:MACRO_RUN
IF "%SELECT%"=="0" GOTO:$ETTINGS_START
IF "%SELECT%"=="2" GOTO:IMAGEPROC_START
IF "%SELECT%"=="1" GOTO:IMAGEMGR_START
IF "%SELECT%"=="3" GOTO:MAKER_START
IF "%SELECT%"=="4" GOTO:FILEMGR_START
IF "%SELECT%"=="5" GOTO:DISKMGR_START
IF "%SELECT%"=="6" SET EXAMPLE_MODE=INSTANT&&CALL:PACKEX_MENU_START
IF "%SELECT%"=="@" IF "%PROG_MODE%"=="RAMDISK" IF EXIST "%PROG_SOURCE%\DISK_TARGET" CALL:HOME_AUTO
IF "%SELECT%"=="TEST" CALL:TEST_SELECT
IF "%SELECT%"=="@@" CALL:HOME_MANUAL
GOTO:PROG_MAIN
:PROG_MAIN_HELP
CLS&&COLOR 0B
CALL:PAD_LINE&&ECHO;::                        ~ MAIN MENU HELP ~                        ::&&CALL:PAD_LINE
ECHO;::                                                                  ::
ECHO;:: {1}Image Management     [Perform image related tasks]            ::
ECHO;:: {2}Image Processor      [Convert/isolate WIM/VHDX images]        ::
ECHO;:: {3}Package Creator      [Create driver/scripted $PK packages]    ::
ECHO;:: {4}File Management      [Simple file manager, file-picker]       ::
ECHO;:: {5}Disk Management      [Basic disk partitioning]                ::
ECHO;::   *{$}Boot^^!             [Create bootable-deployment environment] ::
ECHO;:: {6}Tasks                [Admin tasks, instant-packs, etc]        ::
ECHO;:: {0}Settings             [Settings-backup, misc]                  ::
ECHO;::                                                                  ::
ECHO;::                                                                  ::
ECHO;::    *Appears once boot-media is imported via Image-Management     ::
CALL:PAD_LINE&&CALL:PAD_LINE
PAUSE
EXIT /B
:PAD_STYLE
IF NOT DEFINED PAD_SKIP SET /A PAD_CNT+=1
IF NOT DEFINED PAD_CNT SET PAD_CNT=1
IF "%PAD_CNT%"=="10" SET PAD_CNT=1
FOR %%a in (1 2 3 4 5 6 7) DO (IF "%PAD_CNT%"=="%%a" CALL SET "PAD_STYLE=%%a")
IF "%PAD_CNT%"=="8" SET PAD_STYLE=Rain
IF "%PAD_CNT%"=="9" SET PAD_STYLE=ChaCha
FOR %%a in (1 2 3 4 5 6 7) DO (IF "%PAD_STYLE%"=="%%a" CALL SET "PAD_CNT=%%a")
IF "%PAD_STYLE%"=="Rain" SET PAD_CNT=8
IF "%PAD_STYLE%"=="ChaCha" SET PAD_CNT=9
EXIT /B
:PAD_LINE
IF NOT DEFINED CHCP_OLD FOR /F "tokens=2 delims=:" %%a IN ('CHCP') DO SET CHCP_OLD=%%a
IF NOT DEFINED PAD_STYLE SET PAD_SKIP=1&&CALL:PAD_STYLE&&SET PAD_SKIP=
IF NOT DEFINED PAD_SIZE SET PAD_SIZE=7
FOR %%a in (1 2 3) DO (IF "%PAD_STYLE%"=="%%a" CHCP 65001 >NUL)
IF "%PAD_STYLE%"=="1" SET "PAD_CHNK=■■■■■■■■■■"
IF "%PAD_STYLE%"=="2" SET "PAD_CHNK=▒▒▒▒▒▒▒▒▒▒"
IF "%PAD_STYLE%"=="3" SET "PAD_CHNK=□□□□□□□□□□"
IF "%PAD_STYLE%"=="4" SET "PAD_CHNK=::::::::::"
IF "%PAD_STYLE%"=="5" SET "PAD_CHNK==========="
IF "%PAD_STYLE%"=="6" SET "PAD_CHNK=##########"
IF "%PAD_STYLE%"=="7" SET "PAD_CHNK=~~~~~~~~~~"
IF "%PAD_STYLE%"=="Rain" CALL:PAD_RAIN
IF "%PAD_STYLE%"=="ChaCha" CALL:PAD_CHA
IF "%PAD_SIZE%"=="10" ECHO;%PAD_CHNK%%PAD_CHNK%%PAD_CHNK%%PAD_CHNK%%PAD_CHNK%%PAD_CHNK%%PAD_CHNK%%PAD_CHNK%%PAD_CHNK%%PAD_CHNK%
IF "%PAD_SIZE%"=="7" ECHO;%PAD_CHNK%%PAD_CHNK%%PAD_CHNK%%PAD_CHNK%%PAD_CHNK%%PAD_CHNK%%PAD_CHNK%
IF "%PAD_SIZE%"=="4" ECHO;%PAD_CHNK%%PAD_CHNK%%PAD_CHNK%%PAD_CHNK%
IF "%PAD_SIZE%"=="2" ECHO;%PAD_CHNK%%PAD_CHNK%
FOR %%a in (1 2 3) DO (IF "%PAD_STYLE%"=="%%a" CHCP %CHCP_OLD% >NUL)
SET PAD_SIZE=
EXIT /B
:PAD_CHA
IF NOT DEFINED TRIPPY SET TRIPPY=1&&SET "PAD_CHNK=//////////"&&EXIT /B
IF DEFINED TRIPPY SET TRIPPY=&&SET "PAD_CHNK=\\\\\\\\\\"&&EXIT /B
EXIT /B
:PAD_RAIN
SET /A PAD_RAIN+=1
IF NOT DEFINED WIND_DIR SET WIND_DIR=5
SET FORECAST=%RANDOM%%RANDOM%&&SET "FORECAST=!FORECAST:~5,5!"&&SET "FORECAST=!FORECAST:~1,1!"
IF "%FORECAST%"=="%WIND_DIR%" CALL:RAIN_DIAL
IF "%PAD_RAIN%" GEQ "%WIND_DIR%" SET PAD_RAIN=0
IF "%PAD_RAIN%"=="0" SET PAD_CHNK=/~~~~~~~~~&EXIT /B
IF "%PAD_RAIN%"=="1" SET PAD_CHNK=~~/~~~~~~~&EXIT /B
IF "%PAD_RAIN%"=="2" SET PAD_CHNK=~~~~/~~~~~&EXIT /B
IF "%PAD_RAIN%"=="3" SET PAD_CHNK=~~~~~~/~~~&EXIT /B
IF "%PAD_RAIN%"=="4" SET PAD_CHNK=~~~~~~~~/~&EXIT /B
IF "%PAD_RAIN%"=="5" SET PAD_CHNK=~/~~~~~~~~&EXIT /B
IF "%PAD_RAIN%"=="6" SET PAD_CHNK=~~~/~~~~~~&EXIT /B
IF "%PAD_RAIN%"=="7" SET PAD_CHNK=~~~~~/~~~~&EXIT /B
IF "%PAD_RAIN%"=="8" SET PAD_CHNK=~~~~~~~/~~&EXIT /B
IF "%PAD_RAIN%"=="9" SET PAD_CHNK=~~~~~~~~~/&EXIT /B
EXIT /B
:RAIN_DIAL
SET RAIN_FLAG=
SET DOUBLER=%RANDOM%%RANDOM%&&SET "DOUBLER=!DOUBLER:~5,5!"&&SET "DOUBLER=!DOUBLER:~1,1!"
IF "%DOUBLER%"=="%WIND_DIR%" SET RAIN_FLAG=1
IF DEFINED RAIN_FLAG IF "%WIND_DIR%" GEQ "6" SET WIND_DIR=
IF DEFINED RAIN_FLAG IF "%WIND_DIR%"=="4" SET WIND_DIR=6
IF DEFINED RAIN_FLAG IF "%WIND_DIR%"=="5" SET WIND_DIR=4
IF DEFINED RAIN_FLAG IF NOT DEFINED WIND_DIR SET WIND_DIR=5
EXIT /B
:COMMAND_HELP
SET PAD_SIZE=10&&CALL:PAD_LINE&&ECHO                $HAZZAM COMMAND-LINE PARAMETERS:&&SET PAD_SIZE=10&&CALL:PAD_LINE
SET PAD_SIZE=10&&CALL:PAD_LINE&&ECHO      THIS SECTION IS INCOMPLETE AND SOME CMD'S MAY NOT WORK      &&SET PAD_SIZE=10&&CALL:PAD_LINE
SET PAD_SIZE=10&&CALL:PAD_LINE&&ECHO    NOTE: YOU CAN ADDRESS DISKS BY UNIQUE-DISK-ID OR BY DISK-#.&&SET PAD_SIZE=10&&CALL:PAD_LINE
ECHO    -help                                                 (This Menu)
ECHO    -listmgr -install -list {NAME.LST}                    (Live-Install Package-List)
SET PAD_SIZE=10&&CALL:PAD_LINE
ECHO     The specified boot-media must be in the main program folder or the operation will fail.
ECHO    -bootmaker -create -disk {#} / -diskid {ID} -src {BOOT123.WIM}   (Erase + Create Boot-Media on Specified Disk)
ECHO  Examples:
ECHO    -bootmaker -create -disk 0 -src BOOT123.WIM
ECHO    -bootmaker -create -diskid 12345678-1234-1234-1234-123456781234 -src BOOT-MEDIA.SAV
SET PAD_SIZE=10&&CALL:PAD_LINE
ECHO    -diskmgr -list                                           (Condensed list of Disks)
ECHO    -diskmgr -getdisk -disk {#} /or/ -diskid {ID}            (Query Disk # / Disk ID)
ECHO    -diskmgr -inspect -disk {#} /or/ -diskid {ID}            (Full DiskPart Inquiry on Specified Disk)
ECHO    -diskmgr -erase -disk {#} /or/ -diskid {ID}              (Delete All Partitions on Specified Disk)
ECHO    -diskmgr -changeid -disk {#} /or/ -diskid {ID} {NEW ID}  (Change Disk ID of Specified Disk)
ECHO    -diskmgr -create -disk {#} /or/ -diskid {ID} -size {MB}  (Create NTFS Partition on Specified Disk)
ECHO    -diskmgr -format -disk {#} /or/ -diskid {ID} -part {#}   (Format Partition w/NTFS on Specified Disk)
ECHO    -diskmgr -delete -disk {#} /or/ -diskid {ID} -part {#}   (Delete Partition on Specified Disk)
ECHO    -diskmgr -lock -disk {#} /or/ -diskid {ID} -part {#}     (Mark Partition GUID as "Do Not Mount")
ECHO    -diskmgr -unmount -letter {LTR}                          (Remove Drive Letter)
ECHO    -diskmgr -mount -disk {#} /or/ -diskid {ID} -part {#} -letter {LTR} (Assign Drive Letter + unlock)
ECHO  Examples:
ECHO    -diskmgr -create -disk 0 -size 25600
ECHO    -diskmgr -mount -disk 0 -part 1 -letter e
ECHO    -diskmgr -mount -diskid 12345678-1234-1234-1234-123456781234 -part 1 -letter e
SET PAD_SIZE=10&&CALL:PAD_LINE&&ECHO                                            END OF CMD HELP&&SET PAD_SIZE=10&&CALL:PAD_LINE
EXIT /B
REM COMMAND_MODE_COMMAND_MODE_COMMAND_MODE_COMMAND_MODE_COMMAND_MODE
REM COMMAND_MODE_COMMAND_MODE_COMMAND_MODE_COMMAND_MODE_COMMAND_MODE
:COMMAND_MODE
REM COMMAND_MODE_COMMAND_MODE_COMMAND_MODE_COMMAND_MODE_COMMAND_MODE
REM COMMAND_MODE_COMMAND_MODE_COMMAND_MODE_COMMAND_MODE_COMMAND_MODE
SET "CAME_FROM=COMMAND"&&SET "PROG_SOURCE=%PROG_FOLDER%"&&SET "PROG_TARGET=%PROG_FOLDER%"&&CALL:FOLDER_LOCATE
SET EXIT_FLAG=&&CALL:COMMAND_ERROR
IF "%EXIT_FLAG%"=="1" GOTO:CLEAN_EXIT
IF NOT DEFINED EXEC_TIME SET EXEC_TIME=PACKMGR
IF "%ARG1%"=="-HELP" CALL:COMMAND_HELP
IF "%ARG4%"=="SETUPCOMPLETE.LST" SET LIVE_APPLY=1
IF "%ARG4%"=="RUNONCE.LST" SET LIVE_APPLY=1
REM UID TO DISK # CONVERSION
IF "%ARG1%"=="-BOOTMAKER" IF DEFINED ARG2 IF "%ARG3%"=="-DISKID" IF DEFINED ARG4 SET "DISK_TARGET=%ARG4%"&&CALL:DISK_QUERY>NUL
IF "%ARG1%"=="-BOOTMAKER" IF DEFINED ARG2 IF "%ARG3%"=="-DISKID" IF DEFINED ARG4 SET "ARG3=-DISK"&&SET "ARG4=%DISK_NUMBER%"
IF "%ARG1%"=="-DISKMGR" IF DEFINED ARG2 IF "%ARG3%"=="-DISKID" IF DEFINED ARG4 SET "DISK_TARGET=%ARG4%"&&CALL:DISK_QUERY>NUL
IF "%ARG1%"=="-DISKMGR" IF DEFINED ARG2 IF "%ARG3%"=="-DISKID" IF DEFINED ARG4 SET "ARG3=-DISK"&&SET "ARG4=%DISK_NUMBER%"
IF "%ARG1%"=="-LISTMGR" IF "%ARG2%"=="-INSTALL" IF "%ARG3%"=="-PACK" IF DEFINED ARG4 SET "PROG_OPER=INSTALL"&&CALL SET "IMAGEFILE_PACK=%PACK_FOLDER%\%ARG4%"&&CALL:PACK_INSTALL
IF "%ARG1%"=="-LISTMGR" IF "%ARG2%"=="-INSTALL" IF "%ARG3%"=="-LIST" FOR /F "TOKENS=1 SKIP=1 DELIMS={}" %%1 in (%CACHE_FOLDER%\%ARG4%) DO (CALL SET LIVE_APPLY=1&&CALL SET "IMAGEFILE_PACK=%PACK_FOLDER%\%%1"&&CALL:PACK_INSTALL)
IF "%ARG1%"=="-BOOTMAKER" IF "%ARG2%"=="-CREATE" IF "%ARG3%"=="-DISK" IF DEFINED ARG4 IF "%ARG5%"=="-SRC" IF DEFINED ARG6 IF EXIST "%PROG_SOURCE%\%ARG6%" SET "DISK_NUMBER=%ARG4%"&&CALL:DISK_QUERY>NUL 2>&1
IF "%ARG1%"=="-BOOTMAKER" IF "%ARG2%"=="-CREATE" IF "%ARG3%"=="-DISK" IF DEFINED ARG4 IF "%ARG5%"=="-SRC" IF DEFINED ARG6 IF EXIST "%PROG_SOURCE%\%ARG6%" SET "DISK_NUMBER=%ARG4%"&&FOR %%a in (0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15) DO (IF "%ARG4%"=="%%a" CALL SET "DISK_TARGET=%%DISKID_%%a%%"&&CALL ECHO.%%DISKID_%%a%%>"%TEMP%\DISK_TARGET")
IF "%ARG1%"=="-BOOTMAKER" IF "%ARG2%"=="-CREATE" IF "%ARG3%"=="-DISK" IF DEFINED ARG4 IF "%ARG5%"=="-SRC" IF DEFINED ARG6 IF EXIST "%PROG_SOURCE%\%ARG6%" SET "BOOT_IMAGE=%PROG_SOURCE%\%ARG6%"&&CALL:BOOT_MAKER
IF "%ARG1%"=="-DISKMGR" IF "%ARG2%"=="-LIST" CALL:DISK_QUERY
IF "%ARG1%"=="-DISKMGR" IF "%ARG2%"=="-INSPECT" IF "%ARG3%"=="-DISK" IF DEFINED ARG4 SET "DISK_NUMBER=%ARG4%"&&CALL:DISKMGR_INSPECT
IF "%ARG1%"=="-DISKMGR" IF "%ARG2%"=="-GETDISK" IF "%ARG3%"=="-DISK" IF DEFINED ARG4 SET "DISK_NUMBER=%ARG4%"&&CALL:DISK_QUERY>NUL
IF "%ARG1%"=="-DISKMGR" IF "%ARG2%"=="-GETDISK" IF "%ARG3%"=="-DISK" IF DEFINED DISKID_%DISK_NUMBER% CALL ECHO [DISK [%DISK_NUMBER%] [DISK ID[%%DISKID_%DISK_NUMBER%%%]
IF "%ARG1%"=="-DISKMGR" IF "%ARG2%"=="-GETDISK" IF "%ARG3%"=="-DISK" IF NOT DEFINED DISKID_%DISK_NUMBER% CALL ECHO DISK #/ID DOES NOT EXIST
IF "%ARG1%"=="-DISKMGR" IF "%ARG2%"=="-ERASE" IF "%ARG3%"=="-DISK" IF DEFINED ARG4 CALL:DISK_QUERY>NUL
IF "%ARG1%"=="-DISKMGR" IF "%ARG2%"=="-ERASE" IF "%ARG3%"=="-DISK" IF DEFINED ARG4 SET "DISK_NUMBER=%ARG4%"&&FOR %%a in (0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15) DO (IF "%ARG4%"=="%%a" CALL SET "DISK_TARGET=%%DISKID_%%a%%"&&CALL:DISKMGR_ERASE)
IF "%ARG1%"=="-DISKMGR" IF "%ARG2%"=="-CHANGEID" IF "%ARG3%"=="-DISK" IF DEFINED ARG4 SET "DISK_NUMBER=%ARG4%"&&SET "GET_DISK_ID=%ARG5%"&&CALL:DISKMGR_CHANGEID
IF "%ARG1%"=="-DISKMGR" IF "%ARG2%"=="-CREATE" IF "%ARG3%"=="-DISK" IF DEFINED ARG4 SET "DISK_NUMBER=%ARG4%"&&IF "%ARG5%"=="-SIZE"  SET "PART_SIZE=%ARG6%"&&CALL:DISKMGR_CREATE
IF "%ARG1%"=="-DISKMGR" IF "%ARG2%"=="-FORMAT" IF "%ARG3%"=="-DISK" IF DEFINED ARG4 SET "DISK_NUMBER=%ARG4%"&&IF "%ARG5%"=="-PART" SET "PART_NUMBER=%ARG6%"&&CALL:DISKMGR_FORMAT
IF "%ARG1%"=="-DISKMGR" IF "%ARG2%"=="-DELETE" IF "%ARG3%"=="-DISK" IF DEFINED ARG4 SET "DISK_NUMBER=%ARG4%"&&IF "%ARG5%"=="-PART" SET "PART_NUMBER=%ARG6%"&&CALL:DISKMGR_DELETE
IF "%ARG1%"=="-DISKMGR" IF "%ARG2%"=="-LOCK" IF "%ARG3%"=="-DISK" IF DEFINED ARG4 SET "DISK_NUMBER=%ARG4%"&&IF "%ARG5%"=="-PART" SET "PART_NUMBER=%ARG6%"&&CALL:DISKMGR_LOCK
IF "%ARG1%"=="-DISKMGR" IF "%ARG2%"=="-MOUNT" IF "%ARG3%"=="-DISK" IF DEFINED ARG4 SET "DISK_NUMBER=%ARG4%"&&IF "%ARG5%"=="-PART" SET "PART_NUMBER=%ARG6%"&&IF "%ARG7%"=="-LETTER" SET "DISK_LETTER=%ARG8%"&&CALL:DISKMGR_MOUNT
IF "%ARG1%"=="-DISKMGR" IF "%ARG2%"=="-UNMOUNT" IF "%ARG3%"=="-LETTER" IF DEFINED ARG4 SET "DISK_LETTER=%ARG4%"&&CALL:DISKMGR_UNMOUNT
IF EXIST "%PROG_SOURCE%\ScratchPack" RD /S /Q "\\?\%PROG_SOURCE%\ScratchPack">NUL 2>&1
IF EXIST "%PROG_SOURCE%\SCRATCH" RD /S /Q "\\?\%PROG_SOURCE%\SCRATCH">NUL 2>&1
GOTO:CLEAN_EXIT
:COMMAND_ERROR
IF DEFINED ARG1 IF NOT "%ARG1%"=="-HELP" IF NOT "%ARG1%"=="-BOOTMAKER" IF NOT "%ARG1%"=="-DISKMGR" IF NOT "%ARG1%"=="-FILEMGR" IF NOT "%ARG1%"=="-IMAGEPROC" IF NOT "%ARG1%"=="-LISTMGR" ECHO TYPE $HAZZAM.CMD -HELP&&SET EXIT_FLAG=1
IF "%ARG1%"=="-BOOTMAKER" IF "%ARG2%"=="-CREATE" IF DEFINED ARG6 IF NOT EXIST "%PROG_SOURCE%\%ARG6%" ECHO BOOT-MEDIA %PROG_SOURCE%\%ARG6% IS MISSING&&SET EXIT_FLAG=1
IF "%ARG1%"=="-LISTMGR" IF "%ARG2%"=="-INSTALL" IF "%ARG3%"=="-PACK" IF DEFINED ARG4 IF NOT EXIST "%PACK_FOLDER%\%ARG4%" ECHO PACKAGE %PACK_FOLDER%\%ARG4% IS MISSING&&SET EXIT_FLAG=1
IF "%ARG1%"=="-IMAGEMGR" IF "%ARG2%"=="-MOUNT" IF "%ARG3%"=="-ISO" IF DEFINED ARG4 IF NOT EXIST "%IMAGE_FOLDER%\%ARG4%" ECHO PACKAGE %IMAGE_FOLDER%\%ARG4% IS MISSING&&SET EXIT_FLAG=1
EXIT /B
:MENU_HEAD_GENERIC
CALL:PAD_LINE&&ECHO                      $-h-@-Z-Z-@-m^^! Image-Deploy&&CALL:PAD_LINE
EXIT /B
:DISCLAIMER
CLS&&ECHO &&COLOR 0C
ECHO.
ECHO  ----------------------- DISCLAIMER -------------------------
ECHO                   THIS PROGRAM IS DANGEROUS
ECHO         DO NOT PROCEED UNLESS YOUR DATA IS BACKED UP.
ECHO     DO NOT PROCEED UNLESS YOU HAVE AN ALTERNATIVE METHOD
ECHO    TO RESTORE YOUR DATA IN THE EVENT SOMETHING GOES WRONG.
ECHO       By using this tool, you accept full liability for 
ECHO   any loss that occurs resulting from or relating to the use
ECHO  of this tool. So no guarantees, anything can happen, anytime.
ECHO  ------------------------------------------------------------
ECHO                         Kapeesh? (Y/N)&&ECHO.&&CALL:MENU_SELECT
IF "%SELECT%"=="Y" SET DISCLAIMER=ACCEPTED&&SET SELECT=
EXIT /B
REM MENU_SELECT_MENU_SELECT_MENU_SELECT_MENU_SELECT_MENU_SELECT
:MENU_SELECT
REM MENU_SELECT_MENU_SELECT_MENU_SELECT_MENU_SELECT_MENU_SELECT
SET SELECT=&&SET /P "SELECT=$>>"&&FOR %%G in (A B C D E F G H I J K L M N O P Q R S T U V W X Y Z) DO (CALL SET "SELECT=%%SELECT:%%G=%%G%%")
EXIT /B
:MENU_SELECT_ANY
SET SELECT=&&SET /P "SELECT=$>>"
EXIT /B
:PROMPT_SET_UPPER
SET PROMPT_VAR=&&SET /P "PROMPT_VAR=$>>"&&FOR %%G in (A B C D E F G H I J K L M N O P Q R S T U V W X Y Z) DO (CALL SET "PROMPT_VAR=%%PROMPT_VAR:%%G=%%G%%")
CALL SET "%PROMPT_SET%=%PROMPT_VAR%"&&SET PROMPT_SET=&&SET PROMPT_VAR=
EXIT /B
:PROMPT_SET_LOWER
SET PROMPT_VAR=&&SET /P "PROMPT_VAR=$>>"&&FOR %%G in (a b c d e f g h i j k l m n o p q r s t u v w x y z) DO (CALL SET "PROMPT_VAR=%%PROMPT_VAR:%%G=%%G%%")
CALL SET "%PROMPT_SET%=%PROMPT_VAR%"&&SET PROMPT_SET=&&SET PROMPT_VAR=
EXIT /B
:PROMPT_SET_ANY
SET PROMPT_VAR=&&SET /P "PROMPT_VAR=$>>"
CALL SET "%PROMPT_SET%=%PROMPT_VAR%"&&SET PROMPT_SET=&&SET PROMPT_VAR=
EXIT /B
:PROMPT_SET
ECHO.&&SET PROMPT_VAR=&&SET /P "PROMPT_VAR=$>>"&&FOR %%G in (A B C D E F G H I J K L M N O P Q R S T U V W X Y Z) DO (CALL SET "PROMPT_VAR=%%PROMPT_VAR:%%G=%%G%%")
CALL SET "%PROMPT_SET%=%PROMPT_VAR%"&&SET PROMPT_SET=&&SET PROMPT_VAR=
EXIT /B
:FILE_LIST
ECHO.&&IF "%LIST_FMT%"=="PLAIN" FOR %%a in (1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25) DO (IF DEFINED TEMP_NAME%%a SET TEMP_NAME%%a=)
IF DEFINED LIST_PAD0 CALL:PAD_LINE&&ECHO.
IF DEFINED LIST_INSERTA ECHO %LIST_INSERTA%&&IF DEFINED LIST_INSERTB ECHO %LIST_INSERTB%&&IF DEFINED LIST_INSERTC ECHO %LIST_INSERTC%&&IF DEFINED LIST_INSERTD ECHO %LIST_INSERTD%&&IF DEFINED LIST_INSERTE ECHO %LIST_INSERTE%&&IF DEFINED LIST_INSERTF ECHO %LIST_INSERTF%
IF DEFINED LIST_PAD1 ECHO.&&CALL:PAD_LINE&&ECHO.
IF DEFINED LIST_INSERTJ ECHO %LIST_INSERTJ%&&IF DEFINED LIST_INSERTK ECHO %LIST_INSERTK%&&IF DEFINED LIST_INSERTL ECHO %LIST_INSERTL%&&IF DEFINED LIST_INSERTM ECHO %LIST_INSERTM%
IF DEFINED LIST_DIR IF EXIST "%LIST_DIR%" SET LIST_CNT=0&&DIR "%LIST_DIR%" /A: /B /O:GN>%TEMP%\$HZ.TXT&&FOR /F "TOKENS=*" %%a in (%TEMP%\$HZ.TXT) DO (CALL SET /A LIST_CNT+=1&&CALL SET "OBJ_NAME=%%a"&&CALL:FILE_LIST_OUTSIDE)
IF EXIST "%TEMP%\$HZ.TXT" DEL /F "%TEMP%\$HZ.TXT">NUL 2>&1
IF DEFINED LIST_PAD2 ECHO.&&CALL:PAD_LINE&&ECHO.
IF DEFINED LIST_DIR IF NOT EXIST "%LIST_DIR%" ECHO  [CRICKETS..]
IF DEFINED LIST_TXT IF NOT EXIST "%LIST_TXT%" ECHO  [CRICKETS..]
IF DEFINED LIST_PAD3 ECHO.&&CALL:PAD_LINE&&ECHO.
IF DEFINED LIST_INSERTX ECHO %LIST_INSERTX%&&IF DEFINED LIST_INSERTY ECHO %LIST_INSERTY%&&IF DEFINED LIST_INSERTZ ECHO %LIST_INSERTZ%
IF DEFINED LIST_PAD4 ECHO.&&CALL:PAD_LINE
ECHO.&&SET LIST_DIR=&&SET LIST_TXT=&&SET LIST_FMT=&&SET LIST_INSERTA=&&SET LIST_INSERTB=&&SET LIST_INSERTC=&&SET LIST_INSERTD=&&SET LIST_INSERTE=&&SET LIST_INSERTF=&&SET LIST_INSERTX=&&SET LIST_INSERTY=&&SET LIST_INSERTZ=&&SET LIST_INSERTJ=&&SET LIST_INSERTK=&&SET LIST_INSERTL=&&SET LIST_INSERTM=&&SET LIST_PAD0=&&SET LIST_PAD1=&&SET LIST_PAD2=&&SET LIST_PAD3=&&SET LIST_PAD4=&&SET FILE_LIST_EXT=
IF "%SELECT%"=="\" CALL:MENU_SELECT&&EXIT /B
IF "%SELECT%"=="/" CALL:MENU_SELECT&&EXIT /B
CALL SET "SELECT=%%TEMP_NAME%SELECT%%%"
CALL SET "LIST_OUTPUT=%%TEMP_NAME%SELECT%%%"
EXIT /B
:FILE_LIST_OUTSIDE
CALL SET "TEMP_NAME%LIST_CNT%=%OBJ_NAME%"
IF "%LIST_FMT%"=="NUMERAL" ECHO  [ %LIST_CNT% ]\[%OBJ_NAME%]
IF "%LIST_FMT%"=="PLAIN" ECHO  [SRC]\[%OBJ_NAME%]
EXIT /B
REM SETS_CREATE_SETS_CREATE_SETS_CREATE_SETS_CREATE_SETS_CREATE_SETS_CREATE  
:SETS_CREATE
REM SETS_CREATE_SETS_CREATE_SETS_CREATE_SETS_CREATE_SETS_CREATE_SETS_CREATE 
(
ECHO.$haZZam^^! Configuration File&&ECHO.VHDX_SOURCE_$ETUP=&&ECHO.WIM_SOURCE_IMAGE=&&ECHO.WIM_TARGET_IMAGE=&&ECHO.VHDX_SOURCE_IMAGE=&&ECHO.VHDX_TARGET_IMAGE=1.VHDX&&ECHO.VHDX_SIZE_IMAGE=25600&&ECHO.WIM_DESC_IMAGE=NULL&&ECHO.WIM_DESC_$ETUP=NULL&&ECHO.WIM_INDEX_IMAGE=NULL&&ECHO.WIM_INDEX_$ETUP=NULL&&ECHO.NEWUSER1=&&ECHO.NEWUSER2=&&ECHO.WIM_COMPRESS=FAST&&ECHO.PACK_COMPRESS=FAST&&ECHO.COLOR_SLOT=&&ECHO.PAD_STYLE=&&ECHO.SOURCE_SLOT_IMAGE=&&ECHO.SOURCE_SLOT_$ETUP=&&ECHO.TARGET_SLOT_IMAGE=&&ECHO.TARGET_SLOT_$ETUP=&&ECHO.OBJ_IMAGEMGR=&&ECHO.DISCLAIMER=&&ECHO.MAKER_SLOT=&&ECHO.$PK_SLOT=&&ECHO.CAB_SLOT=&&ECHO.MSU_SLOT=&&ECHO.MACRO_TOGGLE=&&ECHO.MACRO_1=START CMD.EXE&&ECHO.MACRO_2=START NOTEPAD.EXE&&ECHO.MACRO_3=START REGEDIT.EXE&&ECHO.MACRO_4=&&ECHO.MACRO_5=&&ECHO.MACRO_6=&&ECHO.MACRO_7=&&ECHO.MACRO_8=&&ECHO.MACRO_9=&&ECHO.HOTKEY_1=CMD&&ECHO.HOTKEY_2=NOTE&&ECHO.HOTKEY_3=REG&&ECHO.HOTKEY_4=&&ECHO.HOTKEY_5=&&ECHO.HOTKEY_6=&&ECHO.HOTKEY_7=&&ECHO.HOTKEY_8=&&ECHO.HOTKEY_9=&&ECHO.$ETTINGS=LOADED
)>"%PROG_SOURCE%\$ETTINGS.PRO"&&CALL:SETS_LOAD>NUL 2>&1
::DONT STORE FOLDER-MODE IN SETTINGS!
EXIT /B
:SETS_SAVE
MOVE /Y "%FILEBAY_SOURCE%\$ETTINGS.PRO" "%TEMP%\0001"&&FOR /F "eol=- TOKENS=1-2 delims==" %%a in (%TEMP%\0001) DO (CALL ECHO %%a=%%%%a%%>>"%FILEBAY_SOURCE%\$ETTINGS.PRO")
EXIT /B
:SETS_LOAD
COPY /Y "%PROG_SOURCE%\$ETTINGS.PRO" "%TEMP%\0001">NUL 2>&1
FOR /F "eol=- TOKENS=1-2 delims==" %%a in (%TEMP%\0001) DO (IF NOT "%%a"=="   " SET "%%a=%%b")
DEL /Q /F "%TEMP%\0001">NUL 2>&1
EXIT /B
:SETS_HANDLER
IF NOT EXIST "%PROG_SOURCE%" SET "PROG_SOURCE=%PROG_FOLDER%"
IF NOT EXIST "%PROG_TARGET%" SET "PROG_TARGET=%PROG_FOLDER%"
IF NOT EXIST "%PROG_SOURCE%\$ETTINGS.PRO" IF EXIST "%PROG_SOURCE%\$haZZam.CMD" CALL:SETS_CREATE
MOVE /Y "%PROG_SOURCE%\$ETTINGS.PRO" "%TEMP%\0001">NUL 2>&1
IF NOT "%$ETTINGS%"=="LOADED" FOR /F "eol=- TOKENS=1-2 delims==" %%a in (%TEMP%\0001) DO (IF NOT "%%a"=="   " SET "%%a=%%b")
FOR /F "eol=- TOKENS=1-2 delims==" %%a in (%TEMP%\0001) DO (CALL ECHO %%a=%%%%a%%>>"%PROG_SOURCE%\$ETTINGS.PRO")
DEL /Q /F "%TEMP%\0001">NUL 2>&1
EXIT /B
:OBJ_EXIST
FOR %%a in (VHDX_SOURCE_$ETUP VHDX_SOURCE_IMAGE WIM_SOURCE_IMAGE) DO (SET "OBJ_FLD=%IMAGE_FOLDER%"&&CALL SET "OBJ_CHK=%%a"&&CALL:OBJ_CLEAR)
FOR %%a in (VHDX_SOURCE_$ETUP VHDX_SOURCE_IMAGE WIM_SOURCE_IMAGE WIM_TARGET_IMAGE VHDX_TARGET_IMAGE) DO (IF NOT DEFINED %%a SET "%%a=-SELECT-")
EXIT /B
:OBJ_CLEAR
CALL SET ABC_CHK=%%%OBJ_CHK%%%
IF NOT EXIST "%OBJ_FLD%\%ABC_CHK%" CALL SET %OBJ_CHK%=-SELECT-
EXIT /B
:FOLDER_LOCATE
IF NOT DEFINED MAKER_SLOT SET MAKER_SLOT=1
SET "MAKER_FOLDER=%PROG_SOURCE%\Project%MAKER_SLOT%"
IF "%FOLDER_MODE%"=="ISOLATED" IF NOT EXIST "%PROG_SOURCE%\PACK" MD "%PROG_SOURCE%\PACK">NUL 2>&1
IF "%FOLDER_MODE%"=="ISOLATED" IF NOT EXIST "%PROG_SOURCE%\IMAGE" MD "%PROG_SOURCE%\IMAGE">NUL 2>&1
IF "%FOLDER_MODE%"=="ISOLATED" IF NOT EXIST "%PROG_SOURCE%\CACHE" MD "%PROG_SOURCE%\CACHE">NUL 2>&1
IF "%FOLDER_MODE%"=="UNIFIED" SET "PACK_FOLDER=%PROG_SOURCE%"&&SET "IMAGE_FOLDER=%PROG_SOURCE%"&&SET "CACHE_FOLDER=%PROG_SOURCE%"
SET FOLDER_MODE=UNIFIED&&IF EXIST "%PROG_SOURCE%\IMAGE" IF EXIST "%PROG_SOURCE%\PACK" IF EXIST "%PROG_SOURCE%\CACHE" SET FOLDER_MODE=ISOLATED
IF "%FOLDER_MODE%"=="UNIFIED" SET "PACK_FOLDER=%PROG_SOURCE%"&&SET "IMAGE_FOLDER=%PROG_SOURCE%"&&SET "CACHE_FOLDER=%PROG_SOURCE%"
IF "%FOLDER_MODE%"=="ISOLATED" SET "PACK_FOLDER=%PROG_SOURCE%\PACK"&&SET "IMAGE_FOLDER=%PROG_SOURCE%\IMAGE"&&SET "CACHE_FOLDER=%PROG_SOURCE%\CACHE"
EXIT /B
:IMAGE_EXIST
SET SOURCE_LOCATION=&&FOR %%a in (A B C D E F G H I J K L N O P Q R S T U V W Y) DO (IF EXIST "%%a:\sources" SET SOURCE_LOCATION=%%a:\sources)
IF "%WIM_SOURCE_IMAGE%"=="-SELECT-" SET WIM_DESC_IMAGE=NULL&&SET WIM_INDEX_IMAGE=NULL
IF "%WIM_SOURCE_$ETUP%"=="-SELECT-" SET WIM_DESC_$ETUP=NULL&&SET WIM_INDEX_$ETUP=NULL
IF NOT "%WIM_SOURCE_$ETUP%"=="-SELECT-" IF "%WIM_INDEX_$ETUP%"=="NULL" SET WIM_INDEX_$ETUP=1
IF NOT "%WIM_SOURCE_IMAGE%"=="-SELECT-" IF "%WIM_INDEX_IMAGE%"=="NULL" SET WIM_INDEX_IMAGE=1
IF NOT "%PROG_MODE%"=="RAMDISK" IF NOT EXIST "%PROG_SOURCE%\BOOT-MEDIA.SAV" SET BOOT_IMAGE=NONE
IF NOT "%PROG_MODE%"=="RAMDISK" IF EXIST "%PROG_SOURCE%\BOOT-MEDIA.SAV" SET BOOT_IMAGE=%PROG_SOURCE%\BOOT-MEDIA.SAV
IF "%PROG_MODE%"=="RAMDISK" SET BOOT_IMAGE=Q:\BOOT.WIM
EXIT /B
:FOLDER_MODE
ECHO.THE FILE/FOLDER STRUCTURE WILL BE REARRANGED&&ECHO.IF A FILE IS OPEN/MOUNTED AND CANNOT BE MOVED, YOU MIGHT LOSE THAT DATA&&ECHO.CLI FOLDER-CHECK(CACHE/PACK/IMAGE)WILL ALSO BE AFFECTED BY THIS&&ECHO.ARE YOU SURE?&&ECHO.PRESS{Z}TO PROCEED&&CALL:MENU_SELECT
IF NOT "%SELECT%"=="Z" EXIT /B
IF "%FOLDER_MODE%"=="UNIFIED" SET FOLDER_MODE=ISOLATED&&GOTO:FOLDER_ISOLATED
IF "%FOLDER_MODE%"=="ISOLATED" SET FOLDER_MODE=UNIFIED&&GOTO:FOLDER_UNIFIED
:FOLDER_UNIFIED
IF EXIST "%PROG_SOURCE%\IMAGE" MOVE /Y "%PROG_SOURCE%\IMAGE\*.*" "%PROG_SOURCE%">NUL 2>&1
IF EXIST "%PROG_SOURCE%\PACK" MOVE /Y "%PROG_SOURCE%\PACK\*.*" "%PROG_SOURCE%">NUL 2>&1
IF EXIST "%PROG_SOURCE%\CACHE" MOVE /Y "%PROG_SOURCE%\CACHE\*.*" "%PROG_SOURCE%">NUL 2>&1
IF EXIST "%PROG_SOURCE%\IMAGE" XCOPY /S /C /Y "%PROG_SOURCE%\IMAGE" "%PROG_SOURCE%">NUL 2>&1
IF EXIST "%PROG_SOURCE%\PACK" XCOPY /S /C /Y "%PROG_SOURCE%\PACK" "%PROG_SOURCE%">NUL 2>&1
IF EXIST "%PROG_SOURCE%\CACHE" XCOPY /S /C /Y "%PROG_SOURCE%\CACHE" "%PROG_SOURCE%">NUL 2>&1
IF EXIST "%PROG_SOURCE%\IMAGE" RD /Q /S "\\?\%PROG_SOURCE%\IMAGE">NUL 2>&1
IF EXIST "%PROG_SOURCE%\PACK" RD /Q /S "\\?\%PROG_SOURCE%\PACK">NUL 2>&1
IF EXIST "%PROG_SOURCE%\CACHE" RD /Q /S "\\?\%PROG_SOURCE%\CACHE">NUL 2>&1
EXIT /B
:FOLDER_ISOLATED
IF NOT EXIST "%PROG_SOURCE%\IMAGE" MD "%PROG_SOURCE%\IMAGE">NUL 2>&1
IF NOT EXIST "%PROG_SOURCE%\PACK" MD "%PROG_SOURCE%\PACK">NUL 2>&1
IF NOT EXIST "%PROG_SOURCE%\CACHE" MD "%PROG_SOURCE%\CACHE">NUL 2>&1
IF EXIST "%PROG_SOURCE%\*.$PK" MOVE /Y "%PROG_SOURCE%\*.$PK" "%PROG_SOURCE%\PACK">NUL 2>&1
IF EXIST "%PROG_SOURCE%\*.CAB" MOVE /Y "%PROG_SOURCE%\*.CAB" "%PROG_SOURCE%\PACK">NUL 2>&1
IF EXIST "%PROG_SOURCE%\*.MSU" MOVE /Y "%PROG_SOURCE%\*.MSU" "%PROG_SOURCE%\PACK">NUL 2>&1
IF EXIST "%PROG_SOURCE%\*.ISO" MOVE /Y "%PROG_SOURCE%\*.ISO" "%PROG_SOURCE%\IMAGE">NUL 2>&1
IF EXIST "%PROG_SOURCE%\*.VHDX" MOVE /Y "%PROG_SOURCE%\*.VHDX" "%PROG_SOURCE%\IMAGE">NUL 2>&1
IF EXIST "%PROG_SOURCE%\*.WIM" MOVE /Y "%PROG_SOURCE%\*.WIM" "%PROG_SOURCE%\IMAGE">NUL 2>&1
IF EXIST "%PROG_SOURCE%\*.LST" MOVE /Y "%PROG_SOURCE%\*.LST" "%PROG_SOURCE%\CACHE">NUL 2>&1
IF EXIST "%PROG_SOURCE%\*.MST" MOVE /Y "%PROG_SOURCE%\*.MST" "%PROG_SOURCE%\CACHE">NUL 2>&1
IF EXIST "%PROG_SOURCE%\*.$BK" MOVE /Y "%PROG_SOURCE%\*.$BK" "%PROG_SOURCE%\CACHE">NUL 2>&1
EXIT /B
:EMPTY_TRASH
ICACLS "S:\$Recycle.Bin" /grant %username%:(D,WDAC)>NUL 2>&1
TAKEOWN /f "S:\$Recycle.Bin" /r /d y>NUL 2>&1
ICACLS "Z:\$Recycle.Bin" /grant %username%:(D,WDAC)>NUL 2>&1
TAKEOWN /f "Z:\$Recycle.Bin" /r /d y>NUL 2>&1
DEL /Q /F "S:\$Recycle.Bin\*.*">NUL 2>&1
RD /Q /S "S:\$Recycle.Bin">NUL 2>&1
DEL /Q /F "Z:\$Recycle.Bin\*.*">NUL 2>&1
RD /Q /S "Z:\$Recycle.Bin">NUL 2>&1
EXIT /B
:RESTART
CALL:SETS_HANDLER>NUL 2>&1
IF EXIST "Q:\EFI" CALL:EFI_UNMOUNT>NUL 2>&1
IF EXIST "Z:\" CALL:VDISK_DETACH>NUL 2>&1
"shutdown.exe" -r -f -t 0
:QUIT
CALL:SETS_HANDLER>NUL 2>&1
IF EXIST "Q:\EFI" CALL:EFI_UNMOUNT>NUL 2>&1
IF EXIST "Z:\" CALL:VDISK_DETACH>NUL 2>&1
GOTO:CLEAN_EXIT
REM TEST_SELECT_TEST_SELECT_TEST_SELECT_TEST_SELECT_TEST_SELECT
:TEST_SELECT
REM TEST_SELECT_TEST_SELECT_TEST_SELECT_TEST_SELECT_TEST_SELECT
ECHO TEST
ECHO (0) TO EXIT&&SET COMMAND99=&&SET /P "COMMAND99=$>>"
IF "%COMMAND99%"=="0" EXIT /B
%COMMAND99%
GOTO TEST_SELECT
:TITLECARD
IF "%PROG_MODE%"=="PORTABLE" CALL:TITLECARD_NML
IF "%PROG_MODE%"=="RAMDISK" CALL:TITLECARD_RAM
EXIT /B
:TITLECARD_NML
SET TITLE=%RANDOM%%RANDOM%&&SET "TITLE=!TITLE:~5,5!"&&SET "TITLE=!TITLE:~1,1!"
IF "%TITLE%"=="1" TITLE  $-h-@-Z-Z-@-m^^! A native command shell Windows image deployment tool.
IF "%TITLE%"=="2" TITLE  Export/import all current drivers, combine them into a driver-pack.
IF "%TITLE%"=="3" TITLE  Only download from github.com/joshuacline
IF "%TITLE%"=="4" TITLE  Build, administrate and backup your Windows in a native WinPE recovery environment.
IF "%TITLE%"=="5" TITLE  Bootable VHDX Slot's 0-9 are available for redundancy.
IF "%TITLE%"=="6" TITLE  Only download from github.com/joshuacline
IF "%TITLE%"=="0" TITLE  $-h-@-Z-Z-@-m^^! The Mighty Batch           ~By Joshua Cline
IF "%TITLE%"=="8" TITLE  Boot-media can be imported in Image Management.
IF "%TITLE%"=="9" TITLE  DISM can thrash disks pretty hard, some USB drives can freeze up.
IF "%TITLE%"=="0" TITLE  $-h-@-Z-Z-@-m^^! The Mighty Batch           ~By Joshua Cline
EXIT /B
:TITLECARD_RAM
SET TITLE=%RANDOM%%RANDOM%&&SET "TITLE=!TITLE:~5,5!"&&SET "TITLE=!TITLE:~1,1!"
IF "%TITLE%"=="1" TITLE  $-h-@-Z-Z-@-m^^! A native command shell Windows image deployment tool.
IF "%TITLE%"=="2" TITLE  Build, administrate and backup your Windows in a native WinPE recovery environment.
IF "%TITLE%"=="6" TITLE  Only download from github.com/joshuacline
IF "%TITLE%"=="4" TITLE  When locking the VHDX-Host-Partition, windows gets quirky with the pagefile. 
IF "%TITLE%"=="5" TITLE  $-h-@-Z-Z-@-m^^! The Mighty Batch           ~By Joshua Cline
IF "%TITLE%"=="6" TITLE  $-h-@-Z-Z-@-m^^! A native command shell Windows image deployment tool.
IF "%TITLE%"=="7" TITLE  VHDX's named between 0.VHDX and 9.VHDX are detected at boot.
IF "%TITLE%"=="8" TITLE  Only download from github.com/joshuacline
IF "%TITLE%"=="9" TITLE  $-h-@-Z-Z-@-m^^! The Mighty Batch           ~By Joshua Cline
IF "%TITLE%"=="0" TITLE  VHDX boot detection spans across bootable drives.
EXIT /B
::_TAG
REM $ETTINGS_$ETTINGS_$ETTINGS_$ETTINGS_$ETTINGS_$ETTINGS_$ETTINGS_$ETTINGS
:$ETTINGS_START
REM $ETTINGS_$ETTINGS_$ETTINGS_$ETTINGS_$ETTINGS_$ETTINGS_$ETTINGS_$ETTINGS
@ECHO OFF&&CALL:SETS_HANDLER&&CALL:FOLDER_LOCATE&&CALL:OBJ_EXIST&&CALL:IMAGE_EXIST
IF NOT DEFINED COLOR_SLOT SET CLRTMP=%RANDOM%%RANDOM%&&SET "CLRTMP=!CLRTMP:~5,5!"&&SET "CLRTMP=!CLRTMP:~1,1!"&&CALL COLOR %CLRTMP%
CLS&&TITLE  [%CD%\] $-h-@-Z-Z-@-m^^! A native command shell Windows image deployment tool.&&IF DEFINED COLOR_SLOT COLOR %COLOR_SLOT%
IF DEFINED PROG_OPER CALL:TITLECARD_NML
CALL:PAD_LINE&&ECHO                         Settings Configuration&&CALL:PAD_LINE
IF NOT DEFINED MACRO_SLOT SET MACRO_SLOT=1
IF NOT DEFINED MACRO_TOGGLE SET MACRO_TOGGLE=DISABLED
IF NOT DEFINED PROG_OPER ECHO.
IF NOT DEFINED PROG_OPER IF NOT DEFINED COLOR_SLOT ECHO     {?}Color[Shuffle]
IF NOT DEFINED PROG_OPER IF DEFINED COLOR_SLOT ECHO     {?}Color[%COLOR_SLOT%]
IF NOT DEFINED PROG_OPER ECHO     {P}adding-Style[%PAD_STYLE%]
IF NOT DEFINED PROG_OPER ECHO     {F}older Layout[%FOLDER_MODE%]
IF NOT DEFINED PROG_OPER IF "%MACRO_TOGGLE%"=="DISABLED" ECHO     {M}acros[%MACRO_TOGGLE%]
IF NOT DEFINED PROG_OPER IF NOT "%MACRO_TOGGLE%"=="DISABLED" CALL ECHO     {M}acros[%MACRO_TOGGLE%] {X}Slot[%MACRO_SLOT%] {A}ssign [%%MACRO_%MACRO_SLOT%%%] {H}otKey [%%HOTKEY_%MACRO_SLOT%%%]
IF NOT DEFINED PROG_OPER ECHO.
IF "%PROG_OPER%"=="RESTORE_PRO" SET LIST_FMT=NUMERAL&&SET "LIST_DIR=%CACHE_FOLDER%\*.$BK"
IF DEFINED PROG_OPER CALL:FILE_LIST
IF NOT DEFINED PROG_OPER CALL:PAD_LINE&&ECHO  [Profile]   {C}reate {R}estore {Z1}Clear-Settings {Z2}Clear-Macros
IF DEFINED PROG_OPER CALL:PAD_LINE&&ECHO                       Enter File # {/}Type
CALL:PAD_LINE&&ECHO                Press (Enter) to Return to Previous Menu&&ECHO.
CALL:MENU_SELECT&&IF DEFINED PROG_OPER CALL:FILE_LIST>NUL
IF NOT DEFINED PROG_OPER IF NOT DEFINED SELECT GOTO:PROG_MAIN
IF DEFINED PROG_OPER IF NOT DEFINED SELECT SET PROG_OPER=
IF "%SELECT%"=="?" SET PROG_OPER=COLOR_SLOT
IF "%SELECT%"=="F" CALL:FOLDER_MODE&&GOTO:$ETTINGS_START
IF "%SELECT%"=="A" SET PROG_OPER=ASSIGN_MACRO
IF "%SELECT%"=="C" SET PROG_OPER=CREATE_PRO
IF "%SELECT%"=="R" SET PROG_OPER=RESTORE_PRO&&GOTO:$ETTINGS_START
IF "%SELECT%"=="H" SET PROG_OPER=ASSIGN_HOTKEY
IF "%SELECT%"=="P" CALL:PAD_STYLE&&GOTO:$ETTINGS_START
IF "%SELECT%"=="Z1" CALL:SETS_CREATE&&GOTO:$ETTINGS_START
IF "%SELECT%"=="Z2" CALL:MACRO_CLEAR&&GOTO:$ETTINGS_START
IF "%SELECT%"=="X" CALL:MACRO_SLOT&&GOTO:$ETTINGS_START
IF "%SELECT%"=="M" CALL:MACRO_TOGGLE&&GOTO:$ETTINGS_START
IF "%PROG_OPER%"=="RESTORE_PRO" IF NOT DEFINED SELECT SET PROG_OPER=&&GOTO:$ETTINGS_START
IF "%PROG_OPER%"=="RESTORE_PRO" IF NOT EXIST "%CACHE_FOLDER%\%SELECT%" GOTO:$ETTINGS_START
IF "%PROG_OPER%"=="COLOR_SLOT" SET /A COLOR_SLOT+=1&&COLOR %COLOR_SLOT%&&IF "%COLOR_SLOT%"=="7" SET COLOR_SLOT=
IF "%PROG_OPER%"=="ASSIGN_HOTKEY" ECHO Type 2+ Digit Hotkey&&SET PROMPT_SET=HOTKEY_%MACRO_SLOT%&&CALL:PROMPT_SET
IF "%PROG_OPER%"=="ASSIGN_MACRO" ECHO. Set Macro With&&ECHO. {1}File Manager&&ECHO. {2}Command&&CALL:MENU_SELECT
IF "%PROG_OPER%"=="ASSIGN_MACRO" IF "%SELECT%"=="1" GOTO:FILEMGR_START&&GOTO:$ETTINGS_START
IF "%PROG_OPER%"=="ASSIGN_MACRO" IF "%SELECT%"=="2" SET PROMPT_SET=MACRO_%MACRO_SLOT%&&ECHO Type Command&&CALL:PROMPT_SET
IF "%PROG_OPER%"=="CREATE_PRO" ECHO.&&ECHO New Profile-Name?&&SET PROMPT_SET=NEW_NAME&&CALL:PROMPT_SET
IF "%PROG_OPER%"=="CREATE_PRO" IF NOT DEFINED NEW_NAME SET PROG_OPER=&&GOTO:$ETTINGS_START
IF "%PROG_OPER%"=="CREATE_PRO" CALL:SETS_HANDLER>NUL 2>&1
IF "%PROG_OPER%"=="CREATE_PRO" RD /Q /S "\\?\%TEMP%\SETTINGS_SAVE">NUL 2>&1
IF "%PROG_OPER%"=="CREATE_PRO" MD "%TEMP%\SETTINGS_SAVE\CACHE">NUL 2>&1
IF "%PROG_OPER%"=="CREATE_PRO" COPY /Y "%PROG_SOURCE%\$ETTINGS.PRO" "%TEMP%\SETTINGS_SAVE">NUL 2>&1
IF "%PROG_OPER%"=="CREATE_PRO" IF EXIST "%CACHE_FOLDER%\*.MST" COPY /Y "%CACHE_FOLDER%\*.MST" "%TEMP%\SETTINGS_SAVE\CACHE">NUL 2>&1
IF "%PROG_OPER%"=="CREATE_PRO" IF EXIST "%CACHE_FOLDER%\*.LST" COPY /Y "%CACHE_FOLDER%\*.LST" "%TEMP%\SETTINGS_SAVE\CACHE">NUL 2>&1
IF "%PROG_OPER%"=="CREATE_PRO" DISM /CAPTURE-IMAGE /CAPTUREDIR:"%TEMP%\SETTINGS_SAVE" /IMAGEFILE:"%CACHE_FOLDER%\%NEW_NAME%.$BK" /COMPRESS:FAST /NAME:"%NEW_NAME%" /CheckIntegrity /Verify>NUL 2>&1
IF "%PROG_OPER%"=="CREATE_PRO" RD /Q /S "\\?\%TEMP%\SETTINGS_SAVE">NUL 2>&1
IF "%PROG_OPER%"=="RESTORE_PRO" DISM /APPLY-IMAGE /IMAGEFILE:"%CACHE_FOLDER%\%SELECT%" /INDEX:1 /APPLYDIR:"%PROG_SOURCE%">NUL 2>&1
IF "%PROG_OPER%"=="RESTORE_PRO" IF DEFINED SELECT CALL:SETS_LOAD>NUL 2>&1
IF DEFINED PROG_OPER SET PROG_OPER=
GOTO:$ETTINGS_START
:LIST_COPIER_$ETTINGS
SET FILE_HEADER_TMP=&&FOR /F "TOKENS=1-9 DELIMS={}" %%1  IN ("%READER_QUERY%") DO (IF EXIST "%CACHE_FOLDER%\%%1" IF NOT "%%1"=="" COPY /Y "%CACHE_FOLDER%\%%1" "%TEMP%\SETTINGS_SAVE\CACHE">NUL 2>&1)
EXIT /B
:MACRO_CLEAR
SET MACRO_TOGGLE=DISABLED&&FOR %%a in (1 2 3 4 5 6 7 8 9) DO (SET HOTKEY_%%a=&&SET MACRO_%%a=)
EXIT /B
:MACRO_SLOT
IF NOT DEFINED MACRO_SLOT SET MACRO_SLOT=1
SET SELECT=&&SET /A MACRO_SLOT+=1
IF "%MACRO_SLOT%"=="10" SET MACRO_SLOT=1
EXIT /B
:MACRO_TOGGLE
IF "%MACRO_TOGGLE%"=="DISABLED" IF NOT DEFINED MACRO_1 IF NOT DEFINED MACRO_2 IF NOT DEFINED MACRO_3 ECHO MACRO'S CAN GET BUGGY, CLEAR MACROS IF YOU HAVE ISSUES&&PAUSE
IF "%MACRO_TOGGLE%"=="DISABLED" SET MACRO_TOGGLE=ENABLED&&EXIT /B
IF "%MACRO_TOGGLE%"=="ENABLED" SET MACRO_TOGGLE=DISABLED&&EXIT /B
EXIT /B
:MACRO_RUN
SET MACRO_RUN=
IF NOT DEFINED SELECT EXIT /B
IF "%SELECT%"=="%HOTKEY_1%" SET MACRO_RUN=%MACRO_1%
IF "%SELECT%"=="%HOTKEY_2%" SET MACRO_RUN=%MACRO_2%
IF "%SELECT%"=="%HOTKEY_3%" SET MACRO_RUN=%MACRO_3%
IF "%SELECT%"=="%HOTKEY_4%" SET MACRO_RUN=%MACRO_4%
IF "%SELECT%"=="%HOTKEY_5%" SET MACRO_RUN=%MACRO_5%
IF "%SELECT%"=="%HOTKEY_6%" SET MACRO_RUN=%MACRO_6%
IF "%SELECT%"=="%HOTKEY_7%" SET MACRO_RUN=%MACRO_7%
IF "%SELECT%"=="%HOTKEY_8%" SET MACRO_RUN=%MACRO_8%
IF "%SELECT%"=="%HOTKEY_9%" SET MACRO_RUN=%MACRO_9%
ECHO;@ECHO OFF >OUTER.BAT
ECHO;SET CRASHED=>>OUTER.BAT
ECHO;CMD /C INNER.BAT >>OUTER.BAT
ECHO;IF EXIST INNER.BAT SET CRASHED=1 >>OUTER.BAT
ECHO;IF EXIST INNER.BAT $HAZZAM.CMD >>OUTER.BAT
ECHO;@ECHO OFF >INNER.BAT
ECHO;%MACRO_RUN% >>INNER.BAT
ECHO;DEL /Q /F %%0 >>INNER.BAT
CMD /C OUTER.BAT>NUL 2>&1
DEL /Q /F OUTER.BAT>NUL 2>&1
EXIT /B
::_TAG
REM IMAGEMGR_IMAGEMGR_IMAGEMGR_IMAGEMGR_IMAGEMGR_IMAGEMGR_IMAGEMGR_
REM IMAGEMGR_IMAGEMGR_IMAGEMGR_IMAGEMGR_IMAGEMGR_IMAGEMGR_IMAGEMGR_
:IMAGEMGR_START
REM IMAGEMGR_IMAGEMGR_IMAGEMGR_IMAGEMGR_IMAGEMGR_IMAGEMGR_IMAGEMGR_
REM IMAGEMGR_IMAGEMGR_IMAGEMGR_IMAGEMGR_IMAGEMGR_IMAGEMGR_IMAGEMGR_
@ECHO OFF&&CALL:SETS_HANDLER&&CALL:FOLDER_LOCATE&&CALL:OBJ_EXIST&&CALL:IMAGE_EXIST
IF NOT DEFINED COLOR_SLOT SET CLRTMP=%RANDOM%%RANDOM%&&SET "CLRTMP=!CLRTMP:~5,5!"&&SET "CLRTMP=!CLRTMP:~1,1!"&&CALL COLOR %CLRTMP%
CLS&&TITLE  [%CD%\] $-h-@-Z-Z-@-m^^! A native command shell Windows image deployment tool.&&IF DEFINED COLOR_SLOT COLOR %COLOR_SLOT%
IF DEFINED PROG_OPER CALL:TITLECARD_NML
CALL:PAD_LINE&&ECHO                          %OBJ_IMAGEMGR% Image-Management&&CALL:PAD_LINE
IF NOT DEFINED OBJ_IMAGEMGR SET OBJ_IMAGEMGR=WIM
IF "%OBJ_IMAGEMGR%"=="WIM" IF DEFINED SOURCE_LOCATION IF EXIST "%SOURCE_LOCATION%\INSTALL.WIM" ECHO                 {WINDOWS INSTALLATION-MEDIA DETECTED}&&CALL:PAD_LINE
IF "%OBJ_IMAGEMGR%"=="WIM" IF NOT DEFINED SOURCE_LOCATION ECHO    Insert a Windows Disc/ISO/USB to Import Installation/Boot-Media&&CALL:PAD_LINE
IF NOT DEFINED PROG_OPER SET "LIST_DIR=%IMAGE_FOLDER%\*.%OBJ_IMAGEMGR%"&&SET LIST_FMT=PLAIN&&ECHO   AVAILABLE %OBJ_IMAGEMGR%'S:&&CALL:FILE_LIST&&CALL:PAD_LINE
IF DEFINED PROG_OPER IF NOT "%PROG_OPER%"=="VIEW" SET "LIST_DIR=%IMAGE_FOLDER%\*.%OBJ_IMAGEMGR%"&&SET LIST_FMT=NUMERAL&&ECHO   AVAILABLE %OBJ_IMAGEMGR%'S:&&CALL:FILE_LIST&&CALL:PAD_LINE
IF DEFINED PROG_OPER IF "%PROG_OPER%"=="VIEW" SET "LIST_DIR=%CACHE_FOLDER%\*.LST"&&SET LIST_FMT=NUMERAL&&ECHO   AVAILABLE LST'S:&&CALL:FILE_LIST&&CALL:PAD_LINE
IF NOT DEFINED PROG_OPER IF "%OBJ_IMAGEMGR%"=="WIM" ECHO   {X}WIM]  [LIST{C}reate {R}un {V}iew]  {D}ISM  {I}nspect  {N}ew&&CALL:PAD_LINE
IF NOT DEFINED PROG_OPER IF "%OBJ_IMAGEMGR%"=="VHDX" ECHO   {X}VHDX][LIST{C}reate {R}un {V}iew] {D}ISM {I}nspect {M}ount {N}ew&&CALL:PAD_LINE
IF NOT DEFINED PROG_OPER IF "%OBJ_IMAGEMGR%"=="ISO" ECHO   {X}ISO]  {M}ount {U}nmount&&CALL:PAD_LINE
IF NOT DEFINED PROG_OPER IF "%OBJ_IMAGEMGR%"=="WIM" IF EXIST "%SOURCE_LOCATION%" IF EXIST "%SOURCE_LOCATION%\INSTALL.WIM" ECHO   {+}Import Windows-Installation-Media          {-}Import Boot-Media&&CALL:PAD_LINE
IF DEFINED PROG_OPER ECHO                    Enter File # To [%PROG_OPER%] {/}Type&&CALL:PAD_LINE
ECHO                Press (Enter) to Return to Previous Menu
CALL:MENU_SELECT&&IF DEFINED PROG_OPER CALL:FILE_LIST>NUL
IF NOT DEFINED PROG_OPER IF NOT DEFINED SELECT GOTO:PROG_MAIN
IF DEFINED PROG_OPER IF NOT DEFINED SELECT SET PROG_OPER=
IF "%SELECT%"=="+" CALL:SOURCE_IMPORT
IF "%SELECT%"=="-" CALL:BOOT_IMPORT
IF "%OBJ_IMAGEMGR%"=="ISO" IF "%SELECT%"=="D" SET OBJ_IMAGEMGR=WIM
IF "%OBJ_IMAGEMGR%"=="ISO" IF "%SELECT%"=="C" SET OBJ_IMAGEMGR=WIM
IF "%OBJ_IMAGEMGR%"=="ISO" IF "%SELECT%"=="R" SET OBJ_IMAGEMGR=WIM
IF "%OBJ_IMAGEMGR%"=="ISO" IF "%SELECT%"=="I" SET OBJ_IMAGEMGR=WIM
IF "%OBJ_IMAGEMGR%"=="VHDX" IF "%SELECT%"=="S" SET PROG_OPER=COMPACT
IF "%SELECT%"=="D" SET PROG_OPER=DISM_OPER
IF "%SELECT%"=="C" CALL:IMAGEMGR_LIST_MAIN
IF "%SELECT%"=="R" CALL:IMAGEMGR_RUN_LIST
IF "%SELECT%"=="I" CALL:IMAGEMGR_INSPECT
IF "%SELECT%"=="V" SET PROG_OPER=VIEW
IF "%SELECT%"=="M" SET PROG_OPER=PICK
IF "%SELECT%"=="U" SET PROG_OPER=UNMOUNT
IF "%SELECT%"=="N" IF NOT "%OBJ_IMAGEMGR%"=="ISO" SET PROG_OPER=NEW
IF "%SELECT%"=="X" CALL:IMAGEMGR_SLOT
IF "%PROG_OPER%"=="DISM_OPER" CALL:IMAGEMGR_DISM_MENU
IF "%PROG_OPER%"=="PICK" IF NOT DEFINED SELECT SET PROG_OPER=&&GOTO:IMAGEMGR_START
IF "%PROG_OPER%"=="PICK" IF NOT EXIST "%IMAGE_FOLDER%\%SELECT%" GOTO:IMAGEMGR_START
IF "%PROG_OPER%"=="VIEW" IF NOT DEFINED SELECT SET PROG_OPER=&&GOTO:IMAGEMGR_START
IF "%PROG_OPER%"=="VIEW" IF NOT EXIST "%CACHE_FOLDER%\%SELECT%" GOTO:IMAGEMGR_START
IF "%PROG_OPER%"=="COMPACT" IF NOT DEFINED SELECT SET PROG_OPER=&&GOTO:IMAGEMGR_START
IF "%PROG_OPER%"=="COMPACT" IF NOT EXIST "%IMAGE_FOLDER%\%SELECT%" GOTO:IMAGEMGR_START
IF "%OBJ_IMAGEMGR%"=="ISO" IF "%PROG_OPER%"=="UNMOUNT" "%IMAGE_FOLDER%\%SELECT%"
IF "%OBJ_IMAGEMGR%"=="ISO" IF "%PROG_OPER%"=="PICK" "%IMAGE_FOLDER%\%SELECT%"
IF "%OBJ_IMAGEMGR%"=="VHDX" IF "%PROG_OPER%"=="PICK" IF EXIST "Z:\" CALL:VDISK_DETACH&&SET PROG_OPER=&&GOTO:IMAGEMGR_START
IF "%OBJ_IMAGEMGR%"=="VHDX" IF "%PROG_OPER%"=="PICK" SET "VDISK=%IMAGE_FOLDER%\%SELECT%"&&CALL:VDISK_ATTACH
IF NOT "%OBJ_IMAGEMGR%"=="ISO" IF "%PROG_OPER%"=="VIEW" START NOTEPAD "%CACHE_FOLDER%\%SELECT%"
IF "%OBJ_IMAGEMGR%"=="VHDX" IF "%PROG_OPER%"=="COMPACT" SET "VDISK=%IMAGE_FOLDER%\%SELECT%"&&CALL:VDISK_COMPACT&&PAUSE
IF "%OBJ_IMAGEMGR%"=="ISO" IF "%PROG_OPER%"=="INSPECT" CAN'T INSPECT ISO&&PAUSE&&EXIT /B
IF "%OBJ_IMAGEMGR%"=="WIM" IF "%PROG_OPER%"=="NEW" SET PROMPT_SET=NEW_NAME&&ECHO.&&ECHO New WIM-Name?&&CALL:PROMPT_SET_ANY
IF "%OBJ_IMAGEMGR%"=="WIM" IF "%PROG_OPER%"=="NEW" IF DEFINED NEW_NAME IF EXIST "%TEMP%\WIMTEMP" RD /S /Q "%TEMP%\WIMTEMP">NUL 2>&1
IF "%OBJ_IMAGEMGR%"=="WIM" IF "%PROG_OPER%"=="NEW" IF DEFINED NEW_NAME IF NOT EXIST "%TEMP%\WIMTEMP" MD "%TEMP%\WIMTEMP">NUL 2>&1
IF "%OBJ_IMAGEMGR%"=="WIM" IF "%PROG_OPER%"=="NEW" IF DEFINED NEW_NAME DISM /CAPTURE-IMAGE /CAPTUREDIR:"%TEMP%\WIMTEMP" /IMAGEFILE:"%IMAGE_FOLDER%\%NEW_NAME%.WIM" /NAME:NAME /CheckIntegrity /Verify&&ECHO 
IF "%OBJ_IMAGEMGR%"=="WIM" IF "%PROG_OPER%"=="NEW" IF DEFINED NEW_VDISK IF EXIST "%TEMP%\WIMTEMP" RD /S /Q "%TEMP%\WIMTEMP">NUL 2>&1
IF "%OBJ_IMAGEMGR%"=="VHDX" IF "%PROG_OPER%"=="NEW" SET PROMPT_SET=NEW_VDISK&&ECHO.&&ECHO New VHDX-Name?&&CALL:PROMPT_SET_ANY
IF "%OBJ_IMAGEMGR%"=="VHDX" IF "%PROG_OPER%"=="NEW" SET PROMPT_SET=VHDX_SIZE&&ECHO.&&ECHO VHDX SIZE?&&CALL:PROMPT_SET
IF "%OBJ_IMAGEMGR%"=="VHDX" IF "%PROG_OPER%"=="NEW" IF DEFINED NEW_VDISK SET "VDISK=%IMAGE_FOLDER%\%NEW_VDISK%.VHDX"&&SET VHDX_LABEL=%NEW_VDISK%
IF "%OBJ_IMAGEMGR%"=="VHDX" IF "%PROG_OPER%"=="NEW" IF DEFINED NEW_VDISK IF DEFINED VHDX_SIZE CALL:VDISK_CREATE
IF "%OBJ_IMAGEMGR%"=="VHDX" IF "%PROG_OPER%"=="NEW" IF DEFINED NEW_VDISK IF DEFINED VHDX_SIZE CALL:VDISK_DETACH&&ECHO 
IF "%CAME_FROM%"=="IMAGEMGR" SET CAME_FROM=
IF DEFINED PROG_OPER SET PROG_OPER=
GOTO:IMAGEMGR_START
:LIST_LOL_CREATE
CLS&&CALL:PAD_LINE&&ECHO                      $-h-@-Z-Z-@-m^^! File Picker&&CALL:PAD_LINE&&SET LIST_FMT=NUMERAL&&SET "LIST_DIR=%CACHE_FOLDER%\*.LST"&&ECHO   AVAILABLE LST'S:&&CALL:FILE_LIST&&CALL:PAD_LINE&&ECHO           Enter File # To Build List, Multiples OK(1 2 3)&&CALL:PAD_LINE&&ECHO                Press (Enter) to Return to Previous Menu&&ECHO.&&CALL:MENU_SELECT
CALL:PAD_LINE&&ECHO                          Name of the List?&&CALL:PAD_LINE&&ECHO.&&SET PROMPT_SET=NEW_NAME&&CALL:PROMPT_SET_ANY
IF NOT DEFINED NEW_NAME EXIT /B
ECHO LIST-OF-LISTS>"%CACHE_FOLDER%\%NEW_NAME%.LST"
IF "%SELECT%"=="" DEL /F "%CACHE_FOLDER%\%NEW_NAME%.LST">NUL 2>&1
CLS&&CALL:PAD_LINE&&ECHO                  The List Contains The Following Lists: &&CALL:PAD_LINE&&CALL:TITLECARD
SET PARSE_CNT=0&&FOR %%a in (%SELECT%) DO (CALL SET TEMPTARGET=%%TEMP_NAME%%a%%&&CALL:LIST_LOL_CREATE_OUTSIDE)
CALL:PAD_LINE&&ECHO                        End of List Creation&&CALL:PAD_LINE&&CALL:TITLECARD
PAUSE&&PAUSE
EXIT /B
:LIST_LOL_CREATE_OUTSIDE
IF NOT DEFINED TEMPTARGET EXIT /B
IF NOT EXIST "%CACHE_FOLDER%\%TEMPTARGET%" EXIT /B
SET "HEADER_TGT=%CACHE_FOLDER%\%TEMPTARGET%"&&CALL:HEADER_PARSE
IF "%FILE_HEADER%"=="LIST-OF-LISTS" ECHO  [%TEMPTARGET%] [ERROR]List-of-Lists cannot contain another Lists-of-Lists^^!&&EXIT /B
IF NOT DEFINED RUNFLAG ECHO The list header [%FILE_HEADER%] of [%TEMPTARGET%] is malformed&&EXIT /B
CALL ECHO  {%TEMPTARGET%} Added&&CALL ECHO {%TEMPTARGET%}>>"%CACHE_FOLDER%\%NEW_NAME%.LST"
EXIT /B
:IMAGEMGR_LIST_MAIN
CLS&&CALL:PAD_LINE&&ECHO                      $-h-@-Z-Z-@-m^^! List Creator&&CALL:PAD_LINE&&SET LIST_FMT=NUMERAL&&SET "LIST_INSERTA= [ # ]\[List-of-Lists]"&&SET "LIST_INSERTJ= [ * ]\[MST List-Base]"&&SET "LIST_DIR=%CACHE_FOLDER%\*.MST"&&SET "LIST_INSERTB= [ U ]\[MSU Updates]"&&SET "LIST_INSERTC= [ C ]\[CAB Packages]"&&SET "LIST_INSERTD= [ P ]\[$PK Packages]"&&SET "LIST_INSERTE= [ S ]\[SetupComplete]"&&SET "LIST_INSERTF= [ R ]\[RunOnce]"&&SET "LIST_PAD1=1"&&CALL:FILE_LIST&&CALL:PAD_LINE&&ECHO                    Select a {#} To Start a New List&&CALL:PAD_LINE&&ECHO                Press (Enter) to Return to Previous Menu&&CALL:MENU_SELECT
IF "%SELECT%"=="*" GOTO:LIST_BASE_CREATE
IF "%SELECT%"=="C" SET PACK_TYPE=CAB&&GOTO:LIST_PACK_CREATE
IF "%SELECT%"=="U" SET PACK_TYPE=MSU&&GOTO:LIST_PACK_CREATE
IF "%SELECT%"=="P" SET PACK_TYPE=$PK&&GOTO:LIST_PACK_CREATE
IF "%SELECT%"=="#" SET PACK_TYPE=$PK&&GOTO:LIST_LOL_CREATE
IF "%SELECT%"=="S" SET SETUPCOMPLETE_LIST=1&&SET PACK_TYPE=$PK&&GOTO:LIST_PACK_CREATE
IF "%SELECT%"=="R" SET RUNONCE_LIST=1&&SET PACK_TYPE=$PK&&GOTO:LIST_PACK_CREATE
IF NOT EXIST "%CACHE_FOLDER%\%SELECT%" CALL:FILE_LIST >NUL
IF NOT DEFINED SELECT EXIT /B
IF NOT EXIST "%CACHE_FOLDER%\%SELECT%" EXIT /B
IF EXIST "%CACHE_FOLDER%\%SELECT%" SET "MAST_NAME=%SELECT%"&&CALL:IMAGEMGR_LIST_CREATE
EXIT /B
:LIST_BASE_CREATE
SET LIVE_APPLY=
IF NOT DEFINED OBJ_IMAGEMGR SET OBJ_IMAGEMGR=WIM
CLS&&CALL:PAD_LINE&&ECHO                      $-h-@-Z-Z-@-m^^! File Picker&&CALL:PAD_LINE&&SET LIST_FMT=NUMERAL&&SET "LIST_DIR=%IMAGE_FOLDER%\*.%OBJ_IMAGEMGR%"&&SET "LIST_INSERTA= [ 0 ]\[Current-Environment]"&&ECHO   AVAILABLE %OBJ_IMAGEMGR%'S:&&CALL:FILE_LIST&&CALL:PAD_LINE&&ECHO                 Enter # To Use As Source For List-Base&&CALL:PAD_LINE&&ECHO               Press (Enter) to Return to Previous Menu&&CALL:MENU_SELECT
IF NOT DEFINED SELECT EXIT /B
CALL:PAD_LINE&&ECHO                          Name of the List?&&CALL:PAD_LINE&&ECHO.&&SET PROMPT_SET=NEW_NAME&&CALL:PROMPT_SET_ANY
IF NOT DEFINED NEW_NAME EXIT /B
IF "%SELECT%"=="0" SET LIVE_APPLY=1&&GOTO:LIVE_APPLY_BASE_SKIP
IF NOT EXIST "%IMAGE_FOLDER%\%SELECT%" CALL:FILE_LIST >NUL
IF NOT DEFINED SELECT EXIT /B
IF NOT EXIST "%IMAGE_FOLDER%\%SELECT%" EXIT /B
IF "%OBJ_IMAGEMGR%"=="WIM" DISM /GET-IMAGEINFO /IMAGEFILE:"%IMAGE_FOLDER%\%SELECT%"
IF "%OBJ_IMAGEMGR%"=="WIM" CALL:PAD_LINE&&ECHO                              INDEX {#}?&&CALL:PAD_LINE&&CALL:TITLECARD&&SET PROMPT_SET=INDEX_TEMP&&CALL:PROMPT_SET
IF "%OBJ_IMAGEMGR%"=="WIM" SET RUNFLAG=&&FOR %%a in (1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20) DO (IF "%INDEX_TEMP%"=="%%a" SET RUNFLAG=1)
IF "%OBJ_IMAGEMGR%"=="WIM" IF NOT DEFINED RUNFLAG EXIT /B
IF "%OBJ_IMAGEMGR%"=="WIM" CALL:SCRATCHDIR_CREATE
IF "%OBJ_IMAGEMGR%"=="WIM" SET "VDISK=%SCRATCHDIR%\SCRATCH.VHDX"&&SET "VHDX_SIZE=15000"
IF "%OBJ_IMAGEMGR%"=="WIM" CLS&&CALL:PAD_LINE&&ECHO                          Extracting Image....&&CALL:PAD_LINE&&CALL:TITLECARD&&CALL:VDISK_CREATE
IF "%OBJ_IMAGEMGR%"=="WIM" DISM /APPLY-IMAGE /IMAGEFILE:"%IMAGE_FOLDER%\%SELECT%" /INDEX:%INDEX_TEMP% /APPLYDIR:"Z:"
IF "%OBJ_IMAGEMGR%"=="VHDX" SET INDEX_TEMP=1&&SET "VDISK=%IMAGE_FOLDER%\%SELECT%"&&CALL:VDISK_ATTACH
:LIVE_APPLY_BASE_SKIP
ECHO.APPX-MASTER>"%CACHE_FOLDER%\%NEW_NAME%_AppX.MST"
ECHO.FEATURES-MASTER>"%CACHE_FOLDER%\%NEW_NAME%_Features.MST"
ECHO.PACKAGES-MASTER>"%CACHE_FOLDER%\%NEW_NAME%_Components.MST"
ECHO.SERVICES-MASTER>"%CACHE_FOLDER%\%NEW_NAME%_Services.MST"
ECHO.TASKS-MASTER>"%CACHE_FOLDER%\%NEW_NAME%_Tasks.MST"
IF DEFINED LIVE_APPLY CALL:MOUNT_INT
IF NOT DEFINED LIVE_APPLY CALL:MOUNT_MIX
DISM /%APPLY_TARGET% /GET-Provisionedappxpackages>>"%CACHE_FOLDER%\%NEW_NAME%_AppX.MST"
DISM /%APPLY_TARGET% /GET-FEATURES>>"%CACHE_FOLDER%\%NEW_NAME%_Features.MST"
DISM /%APPLY_TARGET% /GET-PACKAGES>>"%CACHE_FOLDER%\%NEW_NAME%_Components.MST"
IF DEFINED LIVE_APPLY CALL:MOUNT_INT
IF NOT DEFINED LIVE_APPLY CALL:MOUNT_EXT
REG QUERY "%HIVE_SYSTEM%\ControlSet001\Services" /f Type /c /e /s>>"%CACHE_FOLDER%\%NEW_NAME%_Services.MST"
REG QUERY "%HIVE_SOFTWARE%\Microsoft\Windows NT\CurrentVersion\Schedule\TaskCache\Tasks" /f Path /c /e /s>>"%CACHE_FOLDER%\%NEW_NAME%_Tasks.MST"
CALL:MOUNT_INT&&CALL:VDISK_DETACH&&CALL:SCRATCHDIR_DELETE
CLS&&CALL:PAD_LINE&&ECHO          The Following List-Base Extracts(.MST) Were Created: &&CALL:PAD_LINE&&CALL:TITLECARD
ECHO   %NEW_NAME%_AppX.MST
ECHO   %NEW_NAME%_Features.MST
ECHO   %NEW_NAME%_Components.MST
ECHO   %NEW_NAME%_Services.MST
ECHO   %NEW_NAME%_Tasks.MST
CALL:PAD_LINE&&ECHO                       End of List-Base Creation&&CALL:PAD_LINE&&CALL:TITLECARD
PAUSE&&PAUSE
EXIT /B
:IMAGEMGR_LIST_CREATE
SET HEADER_TGT=%CACHE_FOLDER%\%MAST_NAME%&&CALL:HEADER_PARSE
IF NOT DEFINED RUNFLAG ECHO The List-Base header is malformed&&PAUSE&&EXIT /B
IF "%BASE_TYPE%"=="APPX" CLS&&CALL:PAD_LINE&&ECHO                    Which type of list?&&CALL:PAD_LINE&&ECHO {1}Delete AppX Package&&SET PROMPT_SET=BAT_SELECT&&CALL:PROMPT_SET
IF "%BASE_TYPE%"=="SERVICES" CLS&&CALL:PAD_LINE&&ECHO                    Which type of list?&&CALL:PAD_LINE&&ECHO {1}Service-Start Auto&&ECHO {2}Service-Start Manual&&ECHO {3}Disable Service&&ECHO {4}Delete Service&&ECHO {5}Start Service&&ECHO {6}Stop Service&&SET PROMPT_SET=BAT_SELECT&&CALL:PROMPT_SET
IF "%BASE_TYPE%"=="TASKS" CLS&&CALL:PAD_LINE&&ECHO                    Which type of list?&&CALL:PAD_LINE&&ECHO {1}Delete Task&&SET PROMPT_SET=BAT_SELECT&&CALL:PROMPT_SET
IF "%BASE_TYPE%"=="FEATURES" CLS&&CALL:PAD_LINE&&ECHO                    Which type of list?&&CALL:PAD_LINE&&ECHO {1}Enable %BASE_TYPE%&&ECHO {2}Disable %BASE_TYPE%&&SET PROMPT_SET=BAT_SELECT&&CALL:PROMPT_SET
IF "%BASE_TYPE%"=="PACKAGES" CLS&&CALL:PAD_LINE&&ECHO                    Which type of list?&&CALL:PAD_LINE&&ECHO {1}Delete %BASE_TYPE%&&SET PROMPT_SET=BAT_SELECT&&CALL:PROMPT_SET
IF NOT DEFINED BAT_SELECT EXIT /B
SET FILE_HEADER=
IF "%BASE_TYPE%"=="APPX" IF "%BAT_SELECT%"=="1" SET FILE_HEADER=APPX-DELETE
IF "%BASE_TYPE%"=="FEATURES" IF "%BAT_SELECT%"=="1" SET FILE_HEADER=FEATURES-ENABLE
IF "%BASE_TYPE%"=="FEATURES" IF "%BAT_SELECT%"=="2" SET FILE_HEADER=FEATURES-DISABLE
IF "%BASE_TYPE%"=="PACKAGES" IF "%BAT_SELECT%"=="1" SET FILE_HEADER=PACKAGES-DELETE
IF "%BASE_TYPE%"=="SERVICES" IF "%BAT_SELECT%"=="1" SET FILE_HEADER=SERVICES-AUTO
IF "%BASE_TYPE%"=="SERVICES" IF "%BAT_SELECT%"=="2" SET FILE_HEADER=SERVICES-MANUAL
IF "%BASE_TYPE%"=="SERVICES" IF "%BAT_SELECT%"=="3" SET FILE_HEADER=SERVICES-DISABLE
IF "%BASE_TYPE%"=="SERVICES" IF "%BAT_SELECT%"=="4" SET FILE_HEADER=SERVICES-DELETE
IF "%BASE_TYPE%"=="SERVICES" IF "%BAT_SELECT%"=="5" SET FILE_HEADER=SERVICES-START
IF "%BASE_TYPE%"=="SERVICES" IF "%BAT_SELECT%"=="6" SET FILE_HEADER=SERVICES-STOP
::IF "%BASE_TYPE%"=="TASKS" IF "%BAT_SELECT%"=="1" SET FILE_HEADER=TASKS-ENABLE
::IF "%BASE_TYPE%"=="TASKS" IF "%BAT_SELECT%"=="2" SET FILE_HEADER=TASKS-DISABLE
IF "%BASE_TYPE%"=="TASKS" IF "%BAT_SELECT%"=="1" SET FILE_HEADER=TASKS-DELETE
IF NOT DEFINED FILE_HEADER EXIT /B
CALL:PAD_LINE&&ECHO                          Name of the List?&&CALL:PAD_LINE&&ECHO.&&SET PROMPT_SET=LIST_NAME&&CALL:PROMPT_SET_ANY
IF NOT DEFINED LIST_NAME EXIT /B
CALL:PAD_LINE&&ECHO                     %FILE_HEADER% List Creation&&CALL:PAD_LINE&&CALL:TITLECARD
SET PackType=SCRIPTED&&SET PackName=%FILE_HEADER%&&SET PackDesc=%FILE_HEADER%
COPY /Y "%CACHE_FOLDER%\%MAST_NAME%" "%TEMP%\LIST_TMP.TXT">NUL 2>&1
IF "%BASE_TYPE%"=="APPX" SET PARSE_CNT=&&FOR /F "TOKENS=1-9 DELIMS=: " %%a in (%TEMP%\LIST_TMP.TXT) DO (IF "%%a"=="PackageName" SET %BASE_TYPE%_NAME=%%b%%c%%d%%e%%f%%g%%h%%i&&CALL:PARSE_QUERY)
IF "%BASE_TYPE%"=="FEATURES" SET PARSE_CNT=&&FOR /F "TOKENS=1-9 DELIMS=: " %%a in (%TEMP%\LIST_TMP.TXT) DO (IF "%%a %%b"=="Feature Name" SET %BASE_TYPE%_NAME=%%c%%d%%e%%f%%g%%h%%i&&CALL:PARSE_QUERY)
IF "%BASE_TYPE%"=="PACKAGES" SET PARSE_CNT=&&FOR /F "TOKENS=1-9 DELIMS=: " %%a in (%TEMP%\LIST_TMP.TXT) DO (IF "%%a %%b"=="Package Identity" SET %BASE_TYPE%_NAME=%%c%%d%%e%%f%%g%%h%%i&&CALL:PARSE_QUERY)
IF "%BASE_TYPE%"=="TASKS" SET PARSE_CNT=&&FOR /F "TOKENS=1* DELIMS=\" %%a in (%TEMP%\LIST_TMP.TXT) DO (IF "%%a"=="    Path    REG_SZ    " SET %BASE_TYPE%_NAME=%%b&&CALL:PARSE_QUERY)
IF "%BASE_TYPE%"=="SERVICES" SET PARSE_CNT=&&FOR /F "TOKENS=1-9 DELIMS=\ " %%a in (%TEMP%\LIST_TMP.TXT) DO (
IF "%%a"=="HKEY_LOCAL_MACHINE" IF NOT "%%e"=="" CALL SET %BASE_TYPE%_NAME=%%e%%f%%g%%h%%i
IF "%%a"=="Type" IF "%%c"=="0x10" CALL:PARSE_QUERY
IF "%%a"=="Type" IF "%%c"=="0x20" CALL:PARSE_QUERY)
IF EXIST "%TEMP%\LIST_TMP.TXT" DEL /F "%TEMP%\LIST_TMP.TXT">NUL 2>&1
CALL:PAD_LINE&&ECHO                    Which %BASE_TYPE%? Multiples OK(1 2 3)&&CALL:PAD_LINE&&CALL:TITLECARD
ECHO.&&CALL:MENU_SELECT
CLS&&CALL:PAD_LINE&&ECHO                     The Following %BASE_TYPE% Were Added: &&CALL:PAD_LINE&&CALL:TITLECARD
ECHO %FILE_HEADER%>"%CACHE_FOLDER%\%LIST_NAME%.LST"
SET PARSE_CNT=&&FOR %%a in (%SELECT%) DO (CALL SET "PARSE_CLEAN=%%%BASE_TYPE%_%%a%%"&&CALL:PARSE_CLEAN_LIST_CREATE)
SET BASE_TYPE=
CALL:PAD_LINE&&ECHO                          End of List Creation&&CALL:PAD_LINE&&CALL:TITLECARD&&PAUSE&&PAUSE
EXIT /B
:PARSE_CLEAN_LIST_CREATE
IF NOT "%PARSE_CLEAN%"=="" CALL ECHO  {%PARSE_CLEAN%}&&CALL ECHO {%PARSE_CLEAN%}>>"%CACHE_FOLDER%\%LIST_NAME%.LST"
EXIT /B
:PARSE_QUERY
CALL SET /A PARSE_CNT+=1
CALL ECHO  {%PARSE_CNT%} %%%BASE_TYPE%_NAME%%&&CALL SET "%BASE_TYPE%_%PARSE_CNT%=%%%BASE_TYPE%_NAME%%"
EXIT /B
:LIST_PACK_CREATE
CLS&&CALL:PAD_LINE&&ECHO                      $-h-@-Z-Z-@-m^^! File Picker&&CALL:PAD_LINE&&SET LIST_FMT=NUMERAL&&SET "LIST_DIR=%PACK_FOLDER%\*.%PACK_TYPE%"&&ECHO   AVAILABLE %PACK_TYPE%'S:&&CALL:FILE_LIST&&CALL:PAD_LINE&&ECHO           Enter File # To Build List, Multiples OK(1 2 3)&&CALL:PAD_LINE&&ECHO                Press (Enter) to Return to Previous Menu&&ECHO.&&CALL:MENU_SELECT
CALL:PAD_LINE&&ECHO                          Name of the List?&&CALL:PAD_LINE&&ECHO.&&SET PROMPT_SET=NEW_NAME&&CALL:PROMPT_SET_ANY
IF NOT DEFINED NEW_NAME SET PROG_OPER=&&EXIT /B
IF DEFINED RUNONCE_LIST ECHO RUN-ONCE>"%CACHE_FOLDER%\%NEW_NAME%.LST"
IF DEFINED SETUPCOMPLETE_LIST ECHO SETUP-COMPLETE>"%CACHE_FOLDER%\%NEW_NAME%.LST"
IF NOT DEFINED SETUPCOMPLETE_LIST IF NOT DEFINED RUNONCE_LIST ECHO PACKAGES-INSTALL>"%CACHE_FOLDER%\%NEW_NAME%.LST"
SET SETUPCOMPLETE_LIST=&&SET RUNONCE_LIST=
IF "%SELECT%"=="" DEL /F "%CACHE_FOLDER%\%NEW_NAME%.LST">NUL 2>&1
CLS&&CALL:PAD_LINE&&ECHO               The List Contains The Following Packages: &&CALL:PAD_LINE&&CALL:TITLECARD
SET PARSE_CNT=0&&FOR %%a in (%SELECT%) DO (CALL SET TEMPTARGET=%%TEMP_NAME%%a%%&&CALL:LIST_PACK_CREATE_OUTSIDE)
CALL:PAD_LINE&&ECHO                       *End of List Creation*&&CALL:PAD_LINE&&CALL:TITLECARD&&PAUSE
EXIT /B
:LIST_PACK_CREATE_OUTSIDE
IF DEFINED TEMPTARGET CALL ECHO   {%TEMPTARGET%}&&CALL ECHO {%TEMPTARGET%}>>"%CACHE_FOLDER%\%NEW_NAME%.LST"
EXIT /B
:HEADER_PARSE
SET RUNFLAG=&&SET /P FILE_HEADER=<"%HEADER_TGT%"
IF "%FILE_HEADER%"=="RUN-ONCE" SET RUNFLAG=1
IF "%FILE_HEADER%"=="SETUP-COMPLETE" SET RUNFLAG=1
IF "%FILE_HEADER%"=="APPX-DELETE" SET RUNFLAG=1
IF "%FILE_HEADER%"=="FEATURES-DISABLE" SET RUNFLAG=1
IF "%FILE_HEADER%"=="FEATURES-ENABLE" SET RUNFLAG=1
IF "%FILE_HEADER%"=="PACKAGES-DELETE" SET RUNFLAG=1
IF "%FILE_HEADER%"=="PACKAGES-INSTALL" SET RUNFLAG=1
IF "%FILE_HEADER%"=="SERVICES-START" SET RUNFLAG=1
IF "%FILE_HEADER%"=="SERVICES-STOP" SET RUNFLAG=1
IF "%FILE_HEADER%"=="SERVICES-AUTO" SET RUNFLAG=1
IF "%FILE_HEADER%"=="SERVICES-MANUAL" SET RUNFLAG=1
IF "%FILE_HEADER%"=="SERVICES-DISABLE" SET RUNFLAG=1
IF "%FILE_HEADER%"=="SERVICES-DELETE" SET RUNFLAG=1
IF "%FILE_HEADER%"=="TASKS-DELETE" SET RUNFLAG=1
IF "%FILE_HEADER%"=="LIST-OF-LISTS" SET RUNFLAG=1
IF "%FILE_HEADER%"=="FEATURES-MASTER" SET BASE_TYPE=FEATURES&&SET RUNFLAG=1
IF "%FILE_HEADER%"=="PACKAGES-MASTER" SET BASE_TYPE=PACKAGES&&SET RUNFLAG=1
IF "%FILE_HEADER%"=="SERVICES-MASTER" SET BASE_TYPE=SERVICES&&SET RUNFLAG=1
IF "%FILE_HEADER%"=="TASKS-MASTER" SET BASE_TYPE=TASKS&&SET RUNFLAG=1
IF "%FILE_HEADER%"=="APPX-MASTER" SET BASE_TYPE=APPX&&SET RUNFLAG=1
EXIT /B
:IMAGEMGR_RUN_LIST
SET "LIVE_APPLY="&&SET "IMAGE_TYPE_CREATE="&&SET "FILE_HEADER="&&CLS&&CALL:PAD_LINE&&ECHO                      $-h-@-Z-Z-@-m^^! File Picker&&CALL:PAD_LINE&&SET LIST_FMT=NUMERAL&&SET "LIST_DIR=%CACHE_FOLDER%\*.LST"&&ECHO   AVAILABLE LST'S:&&CALL:FILE_LIST&&CALL:PAD_LINE&&ECHO                     Enter File # To Select A List&&CALL:PAD_LINE&&ECHO                Press (Enter) to Return to Previous Menu&&CALL:MENU_SELECT
IF NOT DEFINED SELECT EXIT /B
IF NOT EXIST "%CACHE_FOLDER%\%SELECT%" CALL:FILE_LIST >NUL
IF NOT DEFINED SELECT EXIT /B
IF DEFINED SELECT SET HEADER_TGT=%CACHE_FOLDER%\%SELECT%&&CALL:HEADER_PARSE
CLS&&CALL:PAD_LINE&&ECHO                      $-h-@-Z-Z-@-m^^! File Picker&&CALL:PAD_LINE
SET LIST_FMT=NUMERAL&&SET "LIST_DIR=%IMAGE_FOLDER%\*.%OBJ_IMAGEMGR%"&&SET "LIST_INSERTA= [ 0 ]\[Current-Environment]"&&ECHO   AVAILABLE %OBJ_IMAGEMGR%'S:&&CALL:FILE_LIST&&CALL:PAD_LINE&&ECHO                      Enter File # To Select Target&&CALL:PAD_LINE&&ECHO                Press (Enter) to Return to Previous Menu&&ECHO.&&CALL:MENU_SELECT
IF NOT DEFINED SELECT EXIT /B
IF "%SELECT%"=="0" SET LIVE_APPLY=1
IF NOT EXIST "%IMAGE_FOLDER%\%SELECT%" CALL:FILE_LIST >NUL
IF DEFINED LIVE_APPLY GOTO:THE_ACTION
IF NOT DEFINED SELECT EXIT /B
IF "%OBJ_IMAGEMGR%"=="WIM" CLS&&CALL:PAD_LINE&&ECHO                    $-h-@-Z-Z-@-m^^! Picker an Edition&&CALL:PAD_LINE&&DISM /GET-IMAGEINFO /IMAGEFILE:"%IMAGE_FOLDER%\%SELECT%"
IF "%OBJ_IMAGEMGR%"=="WIM" CALL:PAD_LINE&&ECHO                              INDEX {#}?&&CALL:PAD_LINE&&CALL:TITLECARD&&SET PROMPT_SET=INDEX_TEMP&&CALL:PROMPT_SET
IF "%OBJ_IMAGEMGR%"=="WIM" SET RUNFLAG=&&FOR %%a in (1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20) DO (IF "%INDEX_TEMP%"=="%%a" SET RUNFLAG=1)
IF "%OBJ_IMAGEMGR%"=="WIM" IF NOT DEFINED RUNFLAG EXIT /B
CLS&&CALL:PAD_LINE&&ECHO                      $-h-@-Z-Z-@-m^^! File Picker&&CALL:PAD_LINE&&ECHO  {1}VHDX&&ECHO  {2}WIM&&CALL:PAD_LINE&&ECHO                  Which type of image file to create?&&CALL:PAD_LINE&&CALL:TITLECARD&&SET PROMPT_SET=IMAGE_TYPE_CREATE&&CALL:PROMPT_SET
IF NOT "%IMAGE_TYPE_CREATE%"=="1" IF NOT "%IMAGE_TYPE_CREATE%"=="2" EXIT /B
IF "%IMAGE_TYPE_CREATE%"=="1" SET IMAGE_TYPE_CREATE=VHDX
IF "%IMAGE_TYPE_CREATE%"=="2" SET IMAGE_TYPE_CREATE=WIM
IF "%OBJ_IMAGEMGR%"=="WIM" IF "%IMAGE_TYPE_CREATE%"=="VHDX" CLS&&CALL:PAD_LINE&&ECHO                         Size of the %IMAGE_TYPE_CREATE% in MB?&&CALL:PAD_LINE&&SET PROMPT_SET=VHDX_SIZE&&CALL:PROMPT_SET
IF "%OBJ_IMAGEMGR%"=="WIM" IF "%IMAGE_TYPE_CREATE%"=="VHDX" IF NOT DEFINED VHDX_SIZE EXIT /B
CLS
IF "%OBJ_IMAGEMGR%"=="VHDX" IF "%IMAGE_TYPE_CREATE%"=="VHDX" GOTO:IMAGE_NAME_SKIP
IF "%OBJ_IMAGEMGR%"=="VHDX" IF "%IMAGE_TYPE_CREATE%"=="WIM" CALL:PAD_LINE&&ECHO                           Name for the %IMAGE_TYPE_CREATE%?&&CALL:PAD_LINE&&SET PROMPT_SET=IMAGE_NAME_CREATE&&CALL:PROMPT_SET_ANY
IF "%OBJ_IMAGEMGR%"=="WIM" IF "%IMAGE_TYPE_CREATE%"=="VHDX" CALL:PAD_LINE&&ECHO                           Name for the %IMAGE_TYPE_CREATE%?&&CALL:PAD_LINE&&SET PROMPT_SET=IMAGE_NAME_CREATE&&CALL:PROMPT_SET_ANY
IF "%OBJ_IMAGEMGR%"=="WIM" IF "%IMAGE_TYPE_CREATE%"=="WIM" CALL:PAD_LINE&&ECHO                           Name for the %IMAGE_TYPE_CREATE%?&&CALL:PAD_LINE&&SET PROMPT_SET=IMAGE_NAME_CREATE&&CALL:PROMPT_SET_ANY
IF NOT DEFINED IMAGE_NAME_CREATE EXIT /B
:IMAGE_NAME_SKIP
IF "%OBJ_IMAGEMGR%"=="WIM" CALL:SCRATCHDIR_CREATE
IF "%OBJ_IMAGEMGR%"=="WIM" SET "VDISK=%SCRATCHDIR%\SCRATCH.VHDX"&&SET "VHDX_SIZE=%VHDX_SIZE%"
IF "%OBJ_IMAGEMGR%"=="WIM" CLS&&CALL:PAD_LINE&&ECHO                           Extracting image....&&CALL:PAD_LINE&&CALL:TITLECARD&&CALL:VDISK_CREATE
IF "%OBJ_IMAGEMGR%"=="WIM" DISM /APPLY-IMAGE /IMAGEFILE:"%IMAGE_FOLDER%\%SELECT%" /INDEX:%INDEX_TEMP% /APPLYDIR:"Z:"
IF "%OBJ_IMAGEMGR%"=="VHDX" SET INDEX_TEMP=1&&SET "VDISK=%IMAGE_FOLDER%\%SELECT%"&&CALL:VDISK_ATTACH
:THE_ACTION
IF NOT DEFINED LIVE_APPLY CALL:MOUNT_EXT
IF DEFINED LIVE_APPLY CALL:MOUNT_INT
SET LIST_TARGET=%HEADER_TGT%&&IF DEFINED RUNFLAG IF NOT "%FILE_HEADER%"=="LIST-OF-LISTS" CALL:IMAGEMGR_LIST_OPER
SET LIST_TARGET=%HEADER_TGT%&&IF "%FILE_HEADER%"=="LIST-OF-LISTS" CALL:LOL_RUNNER
IF NOT DEFINED LIVE_APPLY CALL:MOUNT_EXT
IF NOT DEFINED LIVE_APPLY IF "%IMAGE_TYPE_CREATE%"=="WIM" CALL:PAD_LINE&&ECHO                      Committing Changes to Image...&&CALL:PAD_LINE&&CALL:TITLECARD&&SET /A TEXTCOLOR+=1&&CALL:TEXTCOLOR
::HIVES NEED TO DETACH UNDER ALL CIRCUMSTANCES OR THE CAPTURE FAILS
CALL:MOUNT_INT
::HIVES NEED TO DETACH UNDER ALL CIRCUMSTANCES OR THE CAPTURE FAILS
IF NOT DEFINED LIVE_APPLY IF "%IMAGE_TYPE_CREATE%"=="WIM" DISM /CAPTURE-IMAGE /CAPTUREDIR:"Z:" /IMAGEFILE:"%IMAGE_FOLDER%\%IMAGE_NAME_CREATE%.WIM" /COMPRESS:FAST /NAME:$HAZZAM^^!
IF NOT DEFINED LIVE_APPLY CALL:VDISK_DETACH
IF NOT DEFINED LIVE_APPLY IF "%IMAGE_TYPE_CREATE%"=="VHDX" IF "%OBJ_IMAGEMGR%"=="WIM" MOVE /Y "%SCRATCHDIR%\SCRATCH.VHDX" "%IMAGE_FOLDER%\%IMAGE_NAME_CREATE%.VHDX">NUL 2>&1
IF NOT DEFINED LIVE_APPLY CALL:SCRATCHDIR_DELETE
IF NOT DEFINED LIVE_APPLY IF "%OBJ_IMAGEMGR%"=="WIM" CALL:PAD_LINE&&ECHO                      Imaging operations complete&&CALL:PAD_LINE&&CALL:TITLECARD&&SET /A TEXTCOLOR+=1&&CALL:TEXTCOLOR
PAUSE&&PAUSE
EXIT /B
:LOL_RUNNER
FOR /F "TOKENS=1 SKIP=1 DELIMS={}" %%a in (%LIST_TARGET%) DO (CALL SET "HEADER_TGT=%CACHE_FOLDER%\%%a"&&CALL:HEADER_PARSE_TMP)
EXIT /B
:HEADER_PARSE_TMP
SET RUNFLAG=&&SET /P FILE_HEADER=<"%HEADER_TGT%"
IF DEFINED FILE_HEADER CALL SET FILE_HEADER=%FILE_HEADER%
IF "%FILE_HEADER%"=="RUN-ONCE" IF NOT DEFINED LIVE_APPLY SET RUNFLAG=1
IF "%FILE_HEADER%"=="SETUP-COMPLETE" IF NOT DEFINED LIVE_APPLY SET RUNFLAG=1
IF "%FILE_HEADER%"=="APPX-DELETE" SET RUNFLAG=1
IF "%FILE_HEADER%"=="FEATURES-DISABLE" SET RUNFLAG=1
IF "%FILE_HEADER%"=="FEATURES-ENABLE" SET RUNFLAG=1
IF "%FILE_HEADER%"=="PACKAGES-DELETE" SET RUNFLAG=1
IF "%FILE_HEADER%"=="PACKAGES-INSTALL" SET RUNFLAG=1
IF "%FILE_HEADER%"=="SERVICES-START" SET RUNFLAG=1
IF "%FILE_HEADER%"=="SERVICES-STOP" SET RUNFLAG=1
IF "%FILE_HEADER%"=="SERVICES-AUTO" SET RUNFLAG=1
IF "%FILE_HEADER%"=="SERVICES-MANUAL" SET RUNFLAG=1
IF "%FILE_HEADER%"=="SERVICES-DISABLE" SET RUNFLAG=1
IF "%FILE_HEADER%"=="SERVICES-DELETE" SET RUNFLAG=1
IF "%FILE_HEADER%"=="TASKS-DELETE" SET RUNFLAG=1
IF "%FILE_HEADER%"=="LIST-OF-LISTS" SET RUNFLAG=1
IF "%FILE_HEADER%"=="FEATURES-MASTER" SET BASE_TYPE=FEATURES&&SET RUNFLAG=1
IF "%FILE_HEADER%"=="PACKAGES-MASTER" SET BASE_TYPE=PACKAGES&&SET RUNFLAG=1
IF "%FILE_HEADER%"=="SERVICES-MASTER" SET BASE_TYPE=SERVICES&&SET RUNFLAG=1
IF "%FILE_HEADER%"=="TASKS-MASTER" SET BASE_TYPE=TASKS&&SET RUNFLAG=1
IF "%FILE_HEADER%"=="APPX-MASTER" SET BASE_TYPE=APPX&&SET RUNFLAG=1
IF DEFINED RUNFLAG CALL:IMAGEMGR_LIST_OPER
EXIT /B
:IMAGEMGR_LIST_OPER
IF DEFINED LIVE_APPLY CALL:MOUNT_INT
IF NOT DEFINED LIVE_APPLY IF "%FILE_HEADER%"=="SERVICES-START" ECHO NULL
IF NOT DEFINED LIVE_APPLY IF "%FILE_HEADER%"=="SERVICES-STOP" ECHO NULL
IF NOT DEFINED LIVE_APPLY IF "%FILE_HEADER%"=="RUN-ONCE" CALL:RUNONCE_CREATE
IF NOT DEFINED LIVE_APPLY IF "%FILE_HEADER%"=="SETUP-COMPLETE" CALL:SETUPCOMPLETE_CREATE
IF NOT DEFINED LIVE_APPLY IF "%FILE_HEADER%"=="SERVICES-AUTO" CALL:MOUNT_EXT
IF NOT DEFINED LIVE_APPLY IF "%FILE_HEADER%"=="SERVICES-MANUAL" CALL:MOUNT_EXT
IF NOT DEFINED LIVE_APPLY IF "%FILE_HEADER%"=="SERVICES-DISABLE" CALL:MOUNT_EXT
IF NOT DEFINED LIVE_APPLY IF "%FILE_HEADER%"=="SERVICES-DELETE" CALL:MOUNT_EXT
IF NOT DEFINED LIVE_APPLY IF "%FILE_HEADER%"=="TASKS-DELETE" CALL:MOUNT_EXT
IF NOT DEFINED LIVE_APPLY IF "%FILE_HEADER%"=="FEATURES-DISABLE" CALL:MOUNT_MIX
IF NOT DEFINED LIVE_APPLY IF "%FILE_HEADER%"=="FEATURES-ENABLE" CALL:MOUNT_MIX
IF NOT DEFINED LIVE_APPLY IF "%FILE_HEADER%"=="PACKAGES-DELETE" CALL:MOUNT_MIX
IF NOT DEFINED LIVE_APPLY IF "%FILE_HEADER%"=="APPX-DELETE" CALL:MOUNT_MIX
COPY /Y "%HEADER_TGT%" "%TEMP%\%FILE_HEADER%.TXT">NUL 2>&1
IF "%FILE_HEADER%"=="RUN-ONCE" FOR /F "TOKENS=1 SKIP=1 DELIMS={}" %%1 in (%TEMP%\%FILE_HEADER%.TXT) DO (CALL:PAD_LINE&&ECHO *Copying Package [%%1] for RunOnce Prep...&&CALL:PAD_LINE&&COPY /Y "%PACK_FOLDER%\%%1" "%APPLYDIR_MASTER%\$">NUL)
IF "%FILE_HEADER%"=="SETUP-COMPLETE" FOR /F "TOKENS=1 SKIP=1 DELIMS={}" %%1 in (%TEMP%\%FILE_HEADER%.TXT) DO (CALL:PAD_LINE&&ECHO *Copying Package [%%1] for SetupComplete Prep...&&CALL:PAD_LINE&&COPY /Y "%PACK_FOLDER%\%%1" "%APPLYDIR_MASTER%\$">NUL)
IF "%FILE_HEADER%"=="SERVICES-START" FOR /F "TOKENS=1 SKIP=1 DELIMS={}" %%1 in (%TEMP%\%FILE_HEADER%.TXT) DO (SC START "%%1")
IF "%FILE_HEADER%"=="SERVICES-STOP" FOR /F "TOKENS=1 SKIP=1 DELIMS={}" %%1 in (%TEMP%\%FILE_HEADER%.TXT) DO (SC STOP "%%1")
IF "%FILE_HEADER%"=="SERVICES-AUTO" FOR /F "TOKENS=1 SKIP=1 DELIMS={}" %%1 in (%TEMP%\%FILE_HEADER%.TXT) DO (CALL:PAD_LINE&&ECHO *Changing Start to Auto for Service [%%1] ...&&CALL:PAD_LINE&&REG ADD "%HIVE_SYSTEM%\ControlSet001\Services\%%1" /V "Start" /T REG_DWORD /D "2" /F)
IF "%FILE_HEADER%"=="SERVICES-MANUAL" FOR /F "TOKENS=1 SKIP=1 DELIMS={}" %%1 in (%TEMP%\%FILE_HEADER%.TXT) DO (CALL:PAD_LINE&&ECHO *Changing Start to Manual for Service [%%1] ...&&CALL:PAD_LINE&&REG ADD "%HIVE_SYSTEM%\ControlSet001\Services\%%1" /V "Start" /T REG_DWORD /D "3" /F)
IF "%FILE_HEADER%"=="SERVICES-DISABLE" FOR /F "TOKENS=1 SKIP=1 DELIMS={}" %%1 in (%TEMP%\%FILE_HEADER%.TXT) DO (CALL:PAD_LINE&&ECHO *Disabling Service [%%1] ...&&CALL:PAD_LINE&&REG ADD "%HIVE_SYSTEM%\ControlSet001\Services\%%1" /V "Start" /T REG_DWORD /D "4" /F)
IF "%FILE_HEADER%"=="SERVICES-DELETE" FOR /F "TOKENS=1 SKIP=1 DELIMS={}" %%1 in (%TEMP%\%FILE_HEADER%.TXT) DO (CALL:PAD_LINE&&ECHO *Deleting Service [%%1] ...&&CALL:PAD_LINE&&REG DELETE "%HIVE_SYSTEM%\ControlSet001\Services\%%1" /F&&REG ADD "%HIVE_SYSTEM%\ControlSet001\Services\%%1" /V "ImagePath" /T REG_EXPAND_SZ /D "NUL" /F>NUL 2>&1)
IF "%FILE_HEADER%"=="TASKS-DELETE" FOR /F "TOKENS=1 SKIP=1 DELIMS={}" %%1 in (%TEMP%\%FILE_HEADER%.TXT) DO (FOR /F "TOKENS=1-9 DELIMS={}" %%a in ('REG QUERY "%HIVE_SOFTWARE%\Microsoft\Windows NT\CurrentVersion\Schedule\TaskCache\Tree\%%1" /F Id /c /e /s') DO (IF "%%a"=="    Id    REG_SZ    " REG DELETE "%HIVE_SOFTWARE%\Microsoft\Windows NT\CurrentVersion\Schedule\TaskCache\Tasks\{%%b}" /F>NUL 2>&1))
IF "%FILE_HEADER%"=="TASKS-DELETE" FOR /F "TOKENS=1 SKIP=1 DELIMS={}" %%1 in (%TEMP%\%FILE_HEADER%.TXT) DO (CALL:PAD_LINE&&ECHO *Deleting Task [%%1] ...&&CALL:PAD_LINE&&REG DELETE "%HIVE_SOFTWARE%\Microsoft\Windows NT\CurrentVersion\Schedule\TaskCache\Tree\%%1" /F)
IF "%FILE_HEADER%"=="FEATURES-DISABLE" FOR /F "TOKENS=1 SKIP=1 DELIMS={}" %%1 in (%TEMP%\%FILE_HEADER%.TXT) DO (CALL:PAD_LINE&&ECHO *Disabling Feature [%%1] ...&&CALL:PAD_LINE&&DISM /%APPLY_TARGET% /DISABLE-FEATURE /FEATURENAME:"%%1" /REMOVE)
IF "%FILE_HEADER%"=="FEATURES-ENABLE" FOR /F "TOKENS=1 SKIP=1 DELIMS={}" %%1 in (%TEMP%\%FILE_HEADER%.TXT) DO (DISM /%APPLY_TARGET% /ENABLE-FEATURE /PACKAGENAME:"%%1" /ALL)
IF "%FILE_HEADER%"=="PACKAGES-DELETE" FOR /F "TOKENS=1 SKIP=1 DELIMS={}" %%1 in (%TEMP%\%FILE_HEADER%.TXT) DO (CALL:PAD_LINE&&ECHO *Removing Component [%%1] ...&&CALL:PAD_LINE&&DISM /%APPLY_TARGET% /REMOVE-PACKAGE /PACKAGENAME:"%%1")
IF "%FILE_HEADER%"=="APPX-DELETE" FOR /F "TOKENS=1 SKIP=1 DELIMS={}" %%1 in (%TEMP%\%FILE_HEADER%.TXT) DO (CALL:PAD_LINE&&ECHO *Removing AppX Package [%%1] ...&&CALL:PAD_LINE&&DISM /%APPLY_TARGET% /REMOVE-Provisionedappxpackage /PACKAGENAME:"%%1")
IF DEFINED LIVE_APPLY IF "%FILE_HEADER%"=="PACKAGES-INSTALL" FOR /F "TOKENS=1 SKIP=1 DELIMS={}" %%1 in (%TEMP%\%FILE_HEADER%.TXT) DO (CALL SET CAME_FROM=PACKMGR&&CALL SET "IMAGEFILE_PACK=%PACK_FOLDER%\%%1"&&CALL:PACK_INSTALL)
IF NOT DEFINED LIVE_APPLY IF "%FILE_HEADER%"=="PACKAGES-INSTALL" FOR /F "TOKENS=1 SKIP=1 DELIMS={}" %%1 in (%TEMP%\%FILE_HEADER%.TXT) DO (CALL SET EXEC_TIME=IMAGEAPPLY&&CALL SET CAME_FROM=$ETUP&&CALL SET "IMAGEFILE_PACK=%PACK_FOLDER%\%%1"&&CALL:PACK_INSTALL)
IF EXIST "%PROG_SOURCE%\ScratchPack" DISM /cleanup-MountPoints>NUL 2>&1
IF EXIST "%PROG_SOURCE%\ScratchPack" ATTRIB -R -S -H "%PROG_SOURCE%\ScratchPack" /S /D /L>NUL 2>&1
IF EXIST "%PROG_SOURCE%\ScratchPack" RD /S /Q "\\?\%PROG_SOURCE%\ScratchPack">NUL 2>&1
IF EXIST "%TEMP%\%FILE_HEADER%.TXT" DEL /F "%TEMP%\%FILE_HEADER%.TXT">NUL 2>&1
SET FILE_HEADER=&&SET HEADER_TGT=&&SET CAME_FROM=
CALL:MOUNT_INT
EXIT /B
:SETUPCOMPLETE_CREATE
CALL:MOUNT_EXT
IF NOT EXIST "%APPLYDIR_MASTER%\$" MD "%APPLYDIR_MASTER%\$">NUL 2>&1
COPY /Y "%PROG_FOLDER%\$HAZZAM.CMD" "%APPLYDIR_MASTER%\$">NUL 2>&1
COPY /Y "%HEADER_TGT%" "%APPLYDIR_MASTER%\$\SETUPCOMPLETE.LST">NUL 2>&1
IF NOT EXIST "%APPLYDIR_MASTER%\WINDOWS\Setup\Scripts" MD "%WINTAR%\Setup\Scripts">NUL 2>&1
ECHO;%%SYSTEMDRIVE%%\$\$HAZZAM.CMD -LISTMGR -INSTALL -LIST SetupComplete.LST>"%WINTAR%\Setup\Scripts\SetupComplete.CMD"
ECHO;EXIT 0 >>"%WINTAR%\Setup\Scripts\SetupComplete.CMD"
CALL:PAD_LINE&&ECHO                   Setup-Complete Preparation Finish&&CALL:PAD_LINE
EXIT /B
:RUNONCE_CREATE
CALL:MOUNT_EXT
IF NOT EXIST "%APPLYDIR_MASTER%\$" MD "%APPLYDIR_MASTER%\$">NUL 2>&1
COPY /Y "%PROG_FOLDER%\$HAZZAM.CMD" "%APPLYDIR_MASTER%\$">NUL 2>&1
COPY /Y "%HEADER_TGT%" "%APPLYDIR_MASTER%\$\RUNONCE.LST">NUL 2>&1
Reg.exe add "%HIVE_SOFTWARE%\Microsoft\Windows\CurrentVersion\RunOnce" /v "Runonce" /t REG_EXPAND_SZ /d "%%WINDIR%%\Setup\Scripts\Runonce.CMD" /f>NUL 2>&1
IF NOT EXIST "%APPLYDIR_MASTER%\WINDOWS\Setup\Scripts" MD "%WINTAR%\Setup\Scripts">NUL 2>&1
ECHO;%%SYSTEMDRIVE%%\$\$HAZZAM.CMD -LISTMGR -INSTALL -LIST RunOnce.LST>"%WINTAR%\Setup\Scripts\Runonce.CMD"
ECHO;EXIT 0 >>"%WINTAR%\Setup\Scripts\RUNONCE.CMD"
CALL:PAD_LINE&&ECHO                      Run-Once Preparation Finish&&CALL:PAD_LINE
EXIT /B
:PACK_INSTALL
CALL:PAD_LINE&&ECHO.                         Package-Manager Start&&CALL:PAD_LINE
SET "SCRATCHDIR_PACK=%PROG_SOURCE%\ScratchPack"
IF EXIST "%SCRATCHDIR_PACK%" DISM /cleanup-MountPoints>NUL 2>&1
IF EXIST "%SCRATCHDIR_PACK%" RD /S /Q "%SCRATCHDIR_PACK%">NUL 2>&1
IF NOT EXIST "%SCRATCHDIR_PACK%" MD "%SCRATCHDIR_PACK%">NUL 2>&1
FOR %%a in (PackName PackType PackDesc PackTag REG_KEY REG_VAL RUN_MOD REG_DAT) DO (CALL SET "%%a=")
For %%G in ("%IMAGEFILE_PACK%") DO SET PackExt=%%~xG
FOR %%G in (M A B U S C) DO (CALL SET "PackExt=%%PackExt:%%G=%%G%%")
IF NOT "%PackExt%"==".$PK" GOTO:PACK_JUMP
DISM /APPLY-IMAGE /IMAGEFILE:"%IMAGEFILE_PACK%" /INDEX:2 /APPLYDIR:"%SCRATCHDIR_PACK%" >NUL 2>&1
FOR /F "eol=- TOKENS=1-2 delims==" %%a in (%SCRATCHDIR_PACK%\PACKAGE.$HZ) DO (IF NOT "%%a"=="   " SET "%%a=%%b")
CALL:PACK_PERM
IF DEFINED PACK_PERM IF NOT DEFINED PACK_PASS GOTO:PACK_INSTALL_FINISH
IF "%GET_WIM_INFO%"=="1" GOTO:PACK_INSTALL_FINISH
ECHO.                          Extracting Package..
DISM /APPLY-IMAGE /IMAGEFILE:"%IMAGEFILE_PACK%" /INDEX:1 /APPLYDIR:"%SCRATCHDIR_PACK%"&&CALL:TITLECARD
:PACK_JUMP
IF DEFINED LIVE_APPLY IF "%PackType%"=="DRIVER" CALL:MOUNT_INT
IF DEFINED LIVE_APPLY IF "%PackType%"=="SCRIPTED" CALL:MOUNT_INT
IF NOT DEFINED LIVE_APPLY IF "%PackType%"=="DRIVER" CALL:MOUNT_MIX
IF NOT DEFINED LIVE_APPLY IF "%PackType%"=="SCRIPTED" CALL:MOUNT_EXT
CALL:PAD_LINE&&ECHO  Running...{NAME{- %PackName% -} {EXT{- %PackExt% -} {DESC{- %PackDesc% -}&&CALL:PAD_LINE
IF "%PackExt%"==".CAB" SET PackType=DRIVER&&EXPAND "%IMAGEFILE_PACK%" -F:* "%SCRATCHDIR_PACK%"
IF "%PackExt%"==".MSU" IF DEFINED LIVE_APPLY DISM /ONLINE /ADD-PACKAGE /PACKAGEPATH:"%IMAGEFILE_PACK%"&&GOTO:PACK_INSTALL_FINISH
IF "%PackExt%"==".MSU" IF NOT DEFINED LIVE_APPLY CALL:HIVES_DETACH&&DISM /IMAGE:"%APPLYDIR_MASTER%" /ADD-PACKAGE /PACKAGEPATH:"%IMAGEFILE_PACK%"&& GOTO:PACK_INSTALL_FINISH
IF "%PackType%"=="SCRIPTED" CD /D "%SCRATCHDIR_PACK%"&&CMD /C "%SCRATCHDIR_PACK%\PACKAGE.CMD"
IF "%PackType%"=="SCRIPTED" CD /D "%~DP0"
IF "%PackType%"=="DRIVER" FOR /F "tokens=*" %%a in ('DIR/S/B "%SCRATCHDIR_PACK%\*.INF"') DO (
SET /A TEXTCOLOR+=1&&CALL:TEXTCOLOR&&CALL:TITLECARD
CALL:PAD_LINE&&ECHO  Installing...{NAME{- %PackName% -} {TYPE{- %PackType% -} {DESC{- %PackDesc% -}&&CALL:PAD_LINE
IF NOT DEFINED LIVE_APPLY DISM /IMAGE:"%APPLYDIR_MASTER%" /ADD-DRIVER /DRIVER:"%%a" /ForceUnsigned
IF DEFINED LIVE_APPLY pnputil.exe /add-driver "%%a" /install)
:PACK_INSTALL_FINISH
CALL:MOUNT_INT>NUL 2>&1
IF EXIST "%SCRATCHDIR_PACK%" DISM /cleanup-MountPoints>NUL 2>&1
IF EXIST "%SCRATCHDIR_PACK%" RD /S /Q "%SCRATCHDIR_PACK%">NUL 2>&1
SET GET_WIM_INFO=
CALL:PAD_LINE&&ECHO.                          Package-Manager End&&CALL:PAD_LINE
EXIT /B
:PACK_PERM
SET PACK_PERM=
IF NOT "%REG_KEY%"=="NULL" IF NOT "%REG_VAL%"=="NULL" IF NOT "%RUN_MOD%"=="NULL" IF NOT "%REG_DAT%"=="NULL" IF DEFINED REG_KEY IF DEFINED REG_VAL IF DEFINED RUN_MOD IF DEFINED REG_DAT SET PACK_PERM=1
IF NOT DEFINED PACK_PERM EXIT /B
IF DEFINED RUN_MOD IF NOT "%RUN_MOD%"=="NULL" IF NOT "%RUN_MOD%"=="EQU" IF NOT "%RUN_MOD%"=="NEQ" EXIT /B
CALL:MOUNT_INT>NUL 2>&1
IF DEFINED PACK_PERM CALL REG QUERY "%REG_KEY%" /V "%REG_VAL%" >$HZ.TXT
SET COL1=&&IF DEFINED PACK_PERM IF EXIST $HZ.TXT FOR /F "TOKENS=* DELIMS=" %%1 in ($HZ.TXT) DO (SET COL1=%%1)
IF DEFINED PACK_PERM IF EXIST $HZ.TXT DEL $HZ.TXT>NUL 2>&1
::NEEDED TO PREVENT CRASH::
IF "%RUN_MOD%"=="NULL" SET RUN_MOD=EQU
IF NOT DEFINED RUN_MOD SET RUN_MOD=EQU
::NEEDED TO PREVENT CRASH::
SET PACK_PASS=&&IF DEFINED PACK_PERM FOR %%a in (REG_SZ REG_DWORD REG_BINARY REG_EXPAND_SZ REG_MULTI_SZ REG_NONE) DO (IF "%COL1%" %RUN_MOD% "    %REG_VAL%    %%a    %REG_DAT%" SET PACK_PASS=1)
EXIT /B
:TEXTCOLOR
COLOR %TEXTCOLOR%&&IF "%TEXTCOLOR%" GEQ "50" SET TEXTCOLOR=1
EXIT /B
:IMAGEMGR_DISM_MENU
SET LIVE_APPLY=&&SET DISM_OPER=
CLS&&CALL:PAD_LINE&&ECHO                        DISM Image Maintainence&&CALL:PAD_LINE&&ECHO  {1}RESTOREHEALTH&&ECHO  {2}CLEANUP&&ECHO  {3}RESETBASE&&SET PROMPT_SET=DISM_MENU&&CALL:PAD_LINE&&CALL:PROMPT_SET
IF "%DISM_MENU%"=="1" SET DISM_OPER=RESTOREHEALTH
IF "%DISM_MENU%"=="2" SET DISM_OPER=CLEANUP
IF "%DISM_MENU%"=="3" SET DISM_OPER=RESETBASE
IF NOT DEFINED DISM_MENU EXIT /B
SET "FILE_HEADER="
CLS&&CALL:PAD_LINE&&ECHO                      $-h-@-Z-Z-@-m^^! File Picker&&CALL:PAD_LINE
SET LIST_FMT=NUMERAL&&SET "LIST_DIR=%IMAGE_FOLDER%\*.%OBJ_IMAGEMGR%"&&SET "LIST_INSERTA= [ 0 ]\[Current-Environment]"&&ECHO   AVAILABLE %OBJ_IMAGEMGR%'S:&&CALL:FILE_LIST&&CALL:PAD_LINE&&ECHO                       Enter File # To Build List&&CALL:PAD_LINE
ECHO                Press (Enter) to Return to Previous Menu&&ECHO.
CALL:MENU_SELECT
IF NOT DEFINED SELECT EXIT /B
IF "%SELECT%"=="0" SET LIVE_APPLY=1&&GOTO:IMAGEMGR_DISM_OPER_JUMP
IF NOT EXIST "%IMAGE_FOLDER%\%SELECT%" CALL:FILE_LIST >NUL
IF NOT EXIST "%IMAGE_FOLDER%\%SELECT%" EXIT /B
SET "TARGET_IMAGE=%IMAGE_FOLDER%\%SELECT%"
SET TEXTCOLOR=1
IF "%OBJ_IMAGEMGR%"=="VHDX" SET INDEX_TEMP=1
IF "%OBJ_IMAGEMGR%"=="WIM" DISM /GET-IMAGEINFO /IMAGEFILE:"%IMAGE_FOLDER%\%SELECT%"
IF "%OBJ_IMAGEMGR%"=="WIM" SET PROMPT_SET=INDEX_TEMP&&CALL:PAD_LINE&&ECHO.&&ECHO INDEX {#}?&&CALL:PROMPT_SET
IF "%OBJ_IMAGEMGR%"=="WIM" SET RUNFLAG=&&FOR %%a in (1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20) DO (IF "%INDEX_TEMP%"=="%%a" SET RUNFLAG=1)
IF "%OBJ_IMAGEMGR%"=="WIM" IF NOT DEFINED RUNFLAG EXIT /B
IF "%OBJ_IMAGEMGR%"=="WIM" ECHO Name of New WIM?&&CALL SET "PROMPT_SET=WIM_TARGET_IMAGEMGR"&&CALL:PROMPT_SET_ANY
IF "%OBJ_IMAGEMGR%"=="WIM" IF NOT DEFINED WIM_TARGET_IMAGEMGR EXIT /B
IF "%OBJ_IMAGEMGR%"=="WIM" ECHO.&&ECHO {1}Fast Compression&&ECHO {2}Max Compression&&SET PROMPT_SET=WIM_COMP&&CALL:PROMPT_SET
IF "%OBJ_IMAGEMGR%"=="WIM" IF "%WIM_COMP%"=="1" SET WIM_COMPRESS=FAST
IF "%OBJ_IMAGEMGR%"=="WIM" IF "%WIM_COMP%"=="2" SET WIM_COMPRESS=MAX
IF "%OBJ_IMAGEMGR%"=="WIM" IF NOT DEFINED WIM_COMP EXIT /B
IF NOT DEFINED LIVE_APPLY SET "APPLY_TARGET=IMAGE:Z:"
IF "%OBJ_IMAGEMGR%"=="WIM" CALL:SCRATCHDIR_CREATE
IF "%OBJ_IMAGEMGR%"=="VHDX" SET "VDISK=%TARGET_IMAGE%"&&CALL:VDISK_ATTACH
IF "%OBJ_IMAGEMGR%"=="WIM" SET "VDISK=%SCRATCHDIR%\SCRATCH.VHDX"&&SET "VHDX_SIZE=20000"&&CALL:VDISK_CREATE
IF "%OBJ_IMAGEMGR%"=="WIM" CALL:PAD_LINE&&ECHO                          Extracting Image...&&CALL:PAD_LINE&&CALL:TITLECARD&&SET /A TEXTCOLOR+=1&&CALL:TEXTCOLOR
IF "%OBJ_IMAGEMGR%"=="WIM" DISM /APPLY-IMAGE /IMAGEFILE:"%TARGET_IMAGE%" /INDEX:%INDEX_TEMP% /APPLYDIR:"Z:"
:IMAGEMGR_DISM_OPER_JUMP
IF DEFINED LIVE_APPLY SET "APPLY_TARGET=ONLINE"
CALL:IMAGEMGR_DISM_OPER
IF NOT DEFINED LIVE_APPLY IF "%OBJ_IMAGEMGR%"=="WIM" CALL:PAD_LINE&&ECHO                    *Committing Changes to Image...*&&CALL:PAD_LINE&&CALL:TITLECARD&&SET /A TEXTCOLOR+=1&&CALL:TEXTCOLOR
IF NOT DEFINED LIVE_APPLY IF "%OBJ_IMAGEMGR%"=="WIM" DISM /CAPTURE-IMAGE /CAPTUREDIR:"Z:" /IMAGEFILE:"%IMAGE_FOLDER%\%WIM_TARGET_IMAGEMGR%" /COMPRESS:%WIM_COMPRESS% /NAME:NAME
IF NOT DEFINED LIVE_APPLY CALL:VDISK_DETACH
IF NOT DEFINED LIVE_APPLY IF "%OBJ_IMAGEMGR%"=="WIM" CALL:SCRATCHDIR_DELETE
PAUSE&&PAUSE
EXIT /B
:IMAGEMGR_DISM_OPER
IF "%DISM_OPER%"=="CLEANUP" CALL:PAD_LINE&&ECHO               *Executing DISM StartComponentCleanup.....*&&CALL:PAD_LINE&&CALL:TITLECARD&&SET /A TEXTCOLOR+=1&&CALL:TEXTCOLOR
IF "%DISM_OPER%"=="CLEANUP" DISM /%APPLY_TARGET% /CLEANUP-IMAGE /StartComponentCleanup
IF "%DISM_OPER%"=="RESETBASE" CALL:PAD_LINE&&ECHO          *Executing DISM StartComponentCleanup /RESETBASE.....*&&CALL:PAD_LINE&&CALL:TITLECARD&&SET /A TEXTCOLOR+=1&&CALL:TEXTCOLOR
IF "%DISM_OPER%"=="RESETBASE" DISM /%APPLY_TARGET% /CLEANUP-IMAGE /StartComponentCleanup
IF "%DISM_OPER%"=="RESETBASE" CALL:PAD_LINE&&ECHO                     *Executing DISM ResetBase....*&&CALL:PAD_LINE&&CALL:TITLECARD&&SET /A TEXTCOLOR+=1&&CALL:TEXTCOLOR
IF "%DISM_OPER%"=="RESETBASE" DISM /%APPLY_TARGET% /CLEANUP-IMAGE /StartComponentCleanup /ResetBase
IF "%DISM_OPER%"=="RESTOREHEALTH" CALL:PAD_LINE&&ECHO                    *Executing DISM Restorehealth...*&&CALL:PAD_LINE&&CALL:TITLECARD&&SET /A TEXTCOLOR+=1&&CALL:TEXTCOLOR
IF "%DISM_OPER%"=="RESTOREHEALTH" DISM /%APPLY_TARGET% /CLEANUP-IMAGE /Restorehealth
CALL:PAD_LINE&&ECHO                       *End of DISM-Operations*&&CALL:PAD_LINE&&CALL:TITLECARD&&SET /A TEXTCOLOR+=1&&CALL:TEXTCOLOR&&SET DISM_OPER=
EXIT /B
:IMAGEMGR_INSPECT
SET LIVE_APPLY=&&SET "FILE_HEADER="
CLS&&CALL:PAD_LINE&&ECHO                      $-h-@-Z-Z-@-m^^! File Picker&&CALL:PAD_LINE
SET LIST_FMT=NUMERAL&&SET "LIST_DIR=%IMAGE_FOLDER%\*.%OBJ_IMAGEMGR%"&&SET "LIST_INSERTA= [ 0 ]\[Current-Environment]"&&ECHO   AVAILABLE %OBJ_IMAGEMGR%'S:&&CALL:FILE_LIST&&CALL:PAD_LINE&&ECHO                        Enter File # To Inspect&&CALL:PAD_LINE
ECHO                Press (Enter) to Return to Previous Menu&&ECHO.
SET PGP_OPER=&&CALL:MENU_SELECT&&CLS
IF NOT DEFINED SELECT SET REVIEW1=&&EXIT /B
IF "%SELECT%"=="0" SET LIVE_APPLY=1&&SET SELECT=LIVE
IF NOT DEFINED LIVE_APPLY IF NOT EXIST "%IMAGE_FOLDER%\%SELECT%" CALL:FILE_LIST >NUL
IF NOT DEFINED SELECT SET REVIEW1=&&EXIT /B
IF NOT DEFINED LIVE_APPLY IF NOT EXIST "%IMAGE_FOLDER%\%SELECT%" SET REVIEW1=&&EXIT /B
SET "TARGET_IMAGE=%SELECT%"
IF DEFINED LIVE_APPLY CALL:MOUNT_INT
IF NOT DEFINED LIVE_APPLY CALL:MOUNT_EXT
SET TEXTCOLOR=1
CALL:PAD_LINE&&ECHO                        *Windows Source Info*&&CALL:PAD_LINE
IF DEFINED LIVE_APPLY GOTO:INSPECT_JUMP
IF "%OBJ_IMAGEMGR%"=="VHDX" SET INDEX_TEMP=1
DISM /GET-IMAGEINFO /IMAGEFILE:"%IMAGE_FOLDER%\%TARGET_IMAGE%"
IF "%OBJ_IMAGEMGR%"=="WIM" SET PROMPT_SET=INDEX_TEMP&&CALL:PAD_LINE&&ECHO.&&ECHO INDEX {#} To Inspect?&&CALL:PROMPT_SET
IF "%OBJ_IMAGEMGR%"=="WIM" SET RUNFLAG=&&FOR %%a in (1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20) DO (IF "%INDEX_TEMP%"=="%%a" SET RUNFLAG=1)
IF "%OBJ_IMAGEMGR%"=="WIM" IF NOT DEFINED RUNFLAG EXIT /B
DISM /GET-IMAGEINFO /IMAGEFILE:"%IMAGE_FOLDER%\%TARGET_IMAGE%" /INDEX:%INDEX_TEMP%
CALL:PAD_LINE&&ECHO                      *Light Inspection Complete*&&CALL:PAD_LINE
ECHO Do Full Forensics Scan?
IF "%OBJ_IMAGEMGR%"=="WIM" ECHO The image will need to be extracted
CALL:PAD_LINE&&ECHO.PRESS{Z}TO PROCEED&&SET "PROMPT_SET=CONFIRM"&&CALL:PROMPT_SET
IF NOT "%CONFIRM%"=="Z" EXIT /B
CALL:SCRATCHDIR_CREATE
IF "%OBJ_IMAGEMGR%"=="VHDX" SET "VDISK=%IMAGE_FOLDER%\%TARGET_IMAGE%"&&CALL:VDISK_ATTACH
IF "%OBJ_IMAGEMGR%"=="WIM" SET "VDISK=%SCRATCHDIR%\SCRATCH.VHDX"&&SET "VHDX_SIZE=15000"&&CALL:VDISK_CREATE
IF "%OBJ_IMAGEMGR%"=="WIM" CALL:PAD_LINE&&ECHO                           Extracting Image...&&CALL:PAD_LINE&&CALL:TITLECARD&&SET /A TEXTCOLOR+=1&&CALL:TEXTCOLOR
IF "%OBJ_IMAGEMGR%"=="WIM" DISM /APPLY-IMAGE /IMAGEFILE:"%IMAGE_FOLDER%\%TARGET_IMAGE%" /INDEX:%INDEX_TEMP% /APPLYDIR:"%APPLYDIR_MASTER%"
:INSPECT_JUMP
ECHO.>"%PROG_SOURCE%\%TARGET_IMAGE%_REPORT.TXT"
CALL:PAD_LINE&&ECHO                       *Performing Health Scan...*&&CALL:PAD_LINE&&CALL:TITLECARD&&SET /A TEXTCOLOR+=1&&CALL:TEXTCOLOR
CALL:PAD_LINE>>"%PROG_SOURCE%\%TARGET_IMAGE%_REPORT.TXT"
ECHO IMAGE HEALTH SCAN>>"%PROG_SOURCE%\%TARGET_IMAGE%_REPORT.TXT"
CALL:PAD_LINE>>"%PROG_SOURCE%\%TARGET_IMAGE%_REPORT.TXT"
IF DEFINED LIVE_APPLY CALL:MOUNT_INT
IF NOT DEFINED LIVE_APPLY CALL:MOUNT_MIX
DISM /%APPLY_TARGET% /CLEANUP-IMAGE /CHECKHEALTH>>"%PROG_SOURCE%\%TARGET_IMAGE%_REPORT.TXT"
CALL:PAD_LINE>>"%PROG_SOURCE%\%TARGET_IMAGE%_REPORT.TXT"
ECHO COMPONENT STORE HEALTH SCAN>>"%PROG_SOURCE%\%TARGET_IMAGE%_REPORT.TXT"
CALL:PAD_LINE>>"%PROG_SOURCE%\%TARGET_IMAGE%_REPORT.TXT"
DISM /%APPLY_TARGET% /CLEANUP-IMAGE /AnalyzeComponentStore>>"%PROG_SOURCE%\%TARGET_IMAGE%_REPORT.TXT"
CALL:PAD_LINE&&ECHO                       *Getting Feature Info...*&&CALL:PAD_LINE&&CALL:TITLECARD&&SET /A TEXTCOLOR+=1&&CALL:TEXTCOLOR
CALL:PAD_LINE>>"%PROG_SOURCE%\%TARGET_IMAGE%_REPORT.TXT"
ECHO IMAGE FEATURE LIST>>"%PROG_SOURCE%\%TARGET_IMAGE%_REPORT.TXT"
CALL:PAD_LINE>>"%PROG_SOURCE%\%TARGET_IMAGE%_REPORT.TXT"
DISM /%APPLY_TARGET% /GET-FEATURES>>"%PROG_SOURCE%\%TARGET_IMAGE%_REPORT.TXT"
CALL:PAD_LINE&&ECHO                       *Getting Appx Package Info...*&&CALL:PAD_LINE&&CALL:TITLECARD&&SET /A TEXTCOLOR+=1&&CALL:TEXTCOLOR
CALL:PAD_LINE>>"%PROG_SOURCE%\%TARGET_IMAGE%_REPORT.TXT"
ECHO IMAGE APPX PACKAGE LIST>>"%PROG_SOURCE%\%TARGET_IMAGE%_REPORT.TXT"
CALL:PAD_LINE>>"%PROG_SOURCE%\%TARGET_IMAGE%_REPORT.TXT"
DISM /%APPLY_TARGET% /GET-Provisionedappxpackages>>"%PROG_SOURCE%\%TARGET_IMAGE%_REPORT.TXT"
CALL:PAD_LINE&&ECHO                       *Getting Component Info...*&&CALL:PAD_LINE&&CALL:TITLECARD&&SET /A TEXTCOLOR+=1&&CALL:TEXTCOLOR
CALL:PAD_LINE>>"%PROG_SOURCE%\%TARGET_IMAGE%_REPORT.TXT"
ECHO IMAGE COMPONENT PACKAGE LIST>>"%PROG_SOURCE%\%TARGET_IMAGE%_REPORT.TXT"
CALL:PAD_LINE>>"%PROG_SOURCE%\%TARGET_IMAGE%_REPORT.TXT"
DISM /%APPLY_TARGET% /GET-PACKAGES>>"%PROG_SOURCE%\%TARGET_IMAGE%_REPORT.TXT"
CALL:PAD_LINE&&ECHO                       *Performing Multi-Scan...*&&CALL:PAD_LINE&&CALL:TITLECARD&&SET /A TEXTCOLOR+=1&&CALL:TEXTCOLOR
ECHO.>>"%PROG_SOURCE%\%TARGET_IMAGE%_REPORT.TXT"
CALL:PAD_LINE>>"%PROG_SOURCE%\%TARGET_IMAGE%_REPORT.TXT"
ECHO. SETUP FILES REPORT>>"%PROG_SOURCE%\%TARGET_IMAGE%_REPORT.TXT"
CALL:PAD_LINE>>"%PROG_SOURCE%\%TARGET_IMAGE%_REPORT.TXT"
IF EXIST "%APPLYDIR_MASTER%\WINDOWS\Setup\Scripts\SETUPCOMPLETE.CMD" ECHO.SETUPCOMPLETE.CMD located in \WINDOWS\Setup\Scripts>>"%PROG_SOURCE%\%TARGET_IMAGE%_REPORT.TXT"
IF NOT EXIST "%APPLYDIR_MASTER%\WINDOWS\Setup\Scripts\SETUPCOMPLETE.CMD" ECHO.NO SETUPCOMPLETE.CMD exists in image>>"%PROG_SOURCE%\%TARGET_IMAGE%_REPORT.TXT"
CALL:PAD_LINE>>"%PROG_SOURCE%\%TARGET_IMAGE%_REPORT.TXT"
IF EXIST "%APPLYDIR_MASTER%\WINDOWS\PANTHER\UNATTEND.XML" ECHO.UNATTEND.XML located in \WINDOWS\PANTHER>>"%PROG_SOURCE%\%TARGET_IMAGE%_REPORT.TXT"
IF NOT EXIST "%APPLYDIR_MASTER%\WINDOWS\PANTHER\UNATTEND.XML" ECHO.NO UNATTEND.XML exists in image>>"%PROG_SOURCE%\%TARGET_IMAGE%_REPORT.TXT"
IF DEFINED LIVE_APPLY CALL:MOUNT_INT
IF NOT DEFINED LIVE_APPLY CALL:MOUNT_EXT
REG QUERY "%HIVE_SOFTWARE%\Microsoft\Windows NT\CurrentVersion\Schedule\TaskCache\Tasks" /f Path /c /e /s>"%TEMP%\TASK.TXT"
REG QUERY "%HIVE_SYSTEM%\ControlSet001\Services" /f Type /c /e /s >"%TEMP%\SVC.TXT"
CALL:PAD_LINE>>"%PROG_SOURCE%\%TARGET_IMAGE%_REPORT.TXT"
ECHO STARTUP ITEMS REPORT>>"%PROG_SOURCE%\%TARGET_IMAGE%_REPORT.TXT"
CALL:PAD_LINE>>"%PROG_SOURCE%\%TARGET_IMAGE%_REPORT.TXT"
REG QUERY "%HIVE_SOFTWARE%\Microsoft\Windows\CurrentVersion\Run">>"%PROG_SOURCE%\%TARGET_IMAGE%_REPORT.TXT" 2>&1
REG QUERY "%HIVE_SOFTWARE%\Microsoft\Windows\CurrentVersion\RunOnce">>"%PROG_SOURCE%\%TARGET_IMAGE%_REPORT.TXT" 2>&1
REG QUERY "%HIVE_SOFTWARE%\Wow6432Node\Microsoft\Windows\CurrentVersion\Run">>"%PROG_SOURCE%\%TARGET_IMAGE%_REPORT.TXT" 2>&1
REG QUERY "%HIVE_USER%\Software\Microsoft\Windows\CurrentVersion\Run">>"%PROG_SOURCE%\%TARGET_IMAGE%_REPORT.TXT" 2>&1
CALL:MOUNT_INT&&CALL:VDISK_DETACH
CALL:PAD_LINE>>"%PROG_SOURCE%\%TARGET_IMAGE%_REPORT.TXT"
ECHO SERVICE LIST REPORT>>"%PROG_SOURCE%\%TARGET_IMAGE%_REPORT.TXT"
CALL:PAD_LINE>>"%PROG_SOURCE%\%TARGET_IMAGE%_REPORT.TXT"
SET SVC_CNT=&&FOR /F "TOKENS=1-9 DELIMS=\ " %%a in (%TEMP%\SVC.TXT) DO (
IF "%%a"=="HKEY_LOCAL_MACHINE" IF NOT "%%e"=="" CALL SET SVC_NAME=%%e%%f%%g%%h%%i
IF "%%a"=="Type" IF "%%c"=="0x10" CALL:FORENSICS_SERVICES_QUERY
IF "%%a"=="Type" IF "%%c"=="0x20" CALL:FORENSICS_SERVICES_QUERY)
CALL:PAD_LINE>>"%PROG_SOURCE%\%TARGET_IMAGE%_REPORT.TXT"
ECHO TASK LIST REPORT>>"%PROG_SOURCE%\%TARGET_IMAGE%_REPORT.TXT"
CALL:PAD_LINE>>"%PROG_SOURCE%\%TARGET_IMAGE%_REPORT.TXT"
SET TASK_CNT=&&FOR /F "TOKENS=1* DELIMS=\" %%a in (%TEMP%\TASK.TXT) DO (IF "%%a"=="    Path    REG_SZ    " SET TASK_NAME=%%b&&CALL:FORENSICS_TASKS_QUERY)
IF NOT DEFINED LIVE_APPLY CALL:SCRATCHDIR_DELETE
IF EXIST "%TEMP%\SVC.TXT" DEL /F "%TEMP%\SVC.TXT">NUL 2>&1
IF EXIST "%TEMP%\TASK.TXT" DEL /F "%TEMP%\TASK.TXT">NUL 2>&1
CALL:PAD_LINE>>"%PROG_SOURCE%\%TARGET_IMAGE%_REPORT.TXT"
ECHO  *Full Inspection Complete* [%TARGET_IMAGE%] %DATE% %TIME%*>>"%PROG_SOURCE%\%TARGET_IMAGE%_REPORT.TXT"
CALL:PAD_LINE>>"%PROG_SOURCE%\%TARGET_IMAGE%_REPORT.TXT"
START NOTEPAD.EXE "%PROG_SOURCE%\%TARGET_IMAGE%_REPORT.TXT"
CALL:PAD_LINE&&ECHO                       Full Inspection Complete&&CALL:PAD_LINE
PAUSE&&PAUSE
EXIT /B
:FORENSICS_SERVICES_QUERY
CALL SET /A SVC_CNT+=1
CALL ECHO [%SVC_CNT%] [%SVC_NAME%]>>"%PROG_SOURCE%\%SELECT%_REPORT.TXT"
EXIT /B
:FORENSICS_TASKS_QUERY
CALL SET /A TASK_CNT+=1
CALL ECHO [%TASK_CNT%] [%TASK_NAME%]>>"%PROG_SOURCE%\%SELECT%_REPORT.TXT"
EXIT /B
:SCRATCHDIR_CREATE
SET "SCRATCHDIR=%PROG_SOURCE%\Scratch"
IF EXIST "%SCRATCHDIR%" DISM /cleanup-MountPoints>NUL 2>&1
IF EXIST "%SCRATCHDIR%" RD /S /Q "%SCRATCHDIR%">NUL 2>&1
IF NOT EXIST "%SCRATCHDIR%" MD "%SCRATCHDIR%">NUL 2>&1
EXIT /B
:SCRATCHDIR_DELETE
SET "SCRATCHDIR=%PROG_SOURCE%\Scratch"
IF EXIST "%SCRATCHDIR%" DISM /cleanup-MountPoints>NUL 2>&1
IF EXIST "%SCRATCHDIR%" ATTRIB -R -S -H "%SCRATCHDIR%" /S /D /L>NUL 2>&1
IF EXIST "%SCRATCHDIR%" RD /S /Q "%SCRATCHDIR%">NUL 2>&1
EXIT /B
:IMAGEMGR_SLOT
SET SELECT=
IF NOT DEFINED IMAGEMGR_CNT SET IMAGEMGR_CNT=1
SET /A IMAGEMGR_CNT+=1
IF "%IMAGEMGR_CNT%"=="4" SET IMAGEMGR_CNT=1
IF "%IMAGEMGR_CNT%"=="1" SET OBJ_IMAGEMGR=WIM
IF "%IMAGEMGR_CNT%"=="2" SET OBJ_IMAGEMGR=VHDX
IF "%IMAGEMGR_CNT%"=="3" SET OBJ_IMAGEMGR=ISO
EXIT /B
:WIM_INDEX_IMAGEMGR
IF NOT DEFINED WIM_INDEX_IMAGEMGR SET WIM_INDEX_IMAGEMGR=1
SET SELECT=&&SET /A WIM_INDEX_IMAGEMGR+=1
IF "%WIM_INDEX_IMAGEMGR%"=="15" SET WIM_INDEX_IMAGEMGR=1
EXIT /B
:BOOT_IMPORT
IF EXIST "%SOURCE_LOCATION%\boot.wim" COPY /Y "%SOURCE_LOCATION%\boot.wim" "%PROG_SOURCE%\BOOT-MEDIA.SAV"&&ECHO 
EXIT /B
:SOURCE_IMPORT
IF EXIST "%SOURCE_LOCATION%\install.wim" ECHO.&&ECHO NEW .WIM NAME?&&SET NEW_NAME=YES&&CALL:MENU_SELECT
IF "%NEW_NAME%"=="YES" COPY /Y "%SOURCE_LOCATION%\install.wim" "%IMAGE_FOLDER%\%SELECT%.WIM"&&SET NEW_NAME=&&ECHO 
EXIT /B
:WINDRVUSR_INT
SET "APPLYDIR_MASTER=%SYSTEMDRIVE%"&&SET "CAPTUREDIR_MASTER=%SYSTEMDRIVE%"
SET "APPLY_TARGET=ONLINE"&&SET "DRVTAR=%SYSTEMDRIVE%"&&SET "WINTAR=%WINDIR%"&&SET "USRTAR=%USERPROFILE%"
EXIT /B
:WINDRVUSR_EXT
SET "APPLYDIR_MASTER=Z:"&&SET "CAPTUREDIR_MASTER=Z:"
SET "APPLY_TARGET=IMAGE:%APPLYDIR_MASTER%"&&SET "DRVTAR=%APPLYDIR_MASTER%"&&SET "WINTAR=%APPLYDIR_MASTER%\Windows"&&SET "USRTAR=%APPLYDIR_MASTER%\Users\Default"
EXIT /B
:HIVES_ATTACH
CALL:HIVES_DETACH >NUL 2>&1
SET "HIVE_USER=HKU\$ALLUSER"&&SET "HIVE_SOFTWARE=HKLM\$SOFTWARE"&&SET "HIVE_SYSTEM=HKLM\$SYSTEM"
REG LOAD HKU\$ALLUSER "Z:\Users\Default\Ntuser.dat">NUL 2>&1
REG LOAD HKLM\$SOFTWARE "Z:\WINDOWS\SYSTEM32\Config\SOFTWARE">NUL 2>&1
REG LOAD HKLM\$SYSTEM "Z:\WINDOWS\SYSTEM32\Config\SYSTEM">NUL 2>&1
EXIT /B
:HIVES_DETACH
SET "HIVE_USER=HKCU"&&SET "HIVE_SOFTWARE=HKLM\SOFTWARE"&&SET "HIVE_SYSTEM=HKLM\SYSTEM"
REG UNLOAD HKU\$ALLUSER>NUL 2>&1
REG UNLOAD HKLM\$SOFTWARE>NUL 2>&1
REG UNLOAD HKLM\$SYSTEM>NUL 2>&1
EXIT /B
:MOUNT_INT
CALL:WINDRVUSR_INT
CALL:HIVES_DETACH
EXIT /B
:MOUNT_EXT
CALL:WINDRVUSR_EXT
CALL:HIVES_ATTACH
EXIT /B
:MOUNT_MIX
CALL:WINDRVUSR_EXT
CALL:HIVES_DETACH
EXIT /B
::_TAG
REM IMAGEPROC_IMAGEPROC_IMAGEPROC_IMAGEPROC_IMAGEPROC_IMAGEPROC_IMAGEPROC_IMAGEPROC_
REM IMAGEPROC_IMAGEPROC_IMAGEPROC_IMAGEPROC_IMAGEPROC_IMAGEPROC_IMAGEPROC_IMAGEPROC_
:IMAGEPROC_START
REM IMAGEPROC_IMAGEPROC_IMAGEPROC_IMAGEPROC_IMAGEPROC_IMAGEPROC_IMAGEPROC_IMAGEPROC_
REM IMAGEPROC_IMAGEPROC_IMAGEPROC_IMAGEPROC_IMAGEPROC_IMAGEPROC_IMAGEPROC_IMAGEPROC_
@ECHO OFF&&CALL:SETS_HANDLER&&CALL:FOLDER_LOCATE&&CALL:OBJ_EXIST&&CALL:IMAGE_EXIST
IF NOT DEFINED COLOR_SLOT SET CLRTMP=%RANDOM%%RANDOM%&&SET "CLRTMP=!CLRTMP:~5,5!"&&SET "CLRTMP=!CLRTMP:~1,1!"&&CALL COLOR %CLRTMP%
CLS&&TITLE  [%CD%\] $-h-@-Z-Z-@-m^^! A native command shell Windows image deployment tool.&&IF DEFINED COLOR_SLOT COLOR %COLOR_SLOT%
IF DEFINED PROG_OPER CALL:TITLECARD_NML
CALL:PAD_LINE&&ECHO                            Image-Processing&&CALL:PAD_LINE
IF NOT DEFINED WIM_COMPRESS SET WIM_COMPRESS=FAST
IF NOT DEFINED SOURCE_SLOT_IMAGE SET SOURCE_SLOT_IMAGE=WIM
IF NOT DEFINED TARGET_SLOT_IMAGE SET TARGET_SLOT_IMAGE=VHDX
IF NOT DEFINED PROG_OPER ECHO  Example Use Cases :
IF NOT DEFINED PROG_OPER IF "%SOURCE_SLOT_IMAGE%"=="WIM" IF "%TARGET_SLOT_IMAGE%"=="VHDX" ECHO   WIM To VHDX : Restore Windows-Image to VHDX
IF NOT DEFINED PROG_OPER IF "%SOURCE_SLOT_IMAGE%"=="WIM" IF "%TARGET_SLOT_IMAGE%"=="VHDX" ECHO   WIM To VHDX : Restore Backup-Image to VHDX
IF NOT DEFINED PROG_OPER IF "%SOURCE_SLOT_IMAGE%"=="WIM" IF "%TARGET_SLOT_IMAGE%"=="WIM" ECHO   WIM To WIM  : Isolate Index
IF NOT DEFINED PROG_OPER IF "%SOURCE_SLOT_IMAGE%"=="VHDX" IF "%TARGET_SLOT_IMAGE%"=="WIM" ECHO  VHDX To WIM  : Create Backup-Image of VHDX
IF NOT DEFINED PROG_OPER CALL:PAD_LINE
IF NOT DEFINED PROG_OPER IF "%SOURCE_SLOT_IMAGE%"=="VHDX" ECHO. {S}OURCE-VHDX] [%VHDX_SOURCE_IMAGE%]
IF NOT DEFINED PROG_OPER IF "%SOURCE_SLOT_IMAGE%"=="WIM" ECHO. {S}OURCE-WIM]  [%WIM_SOURCE_IMAGE%] {I}ndex[%WIM_INDEX_IMAGE%] [Edition[%WIM_DESC_IMAGE%]
IF NOT DEFINED PROG_OPER CALL:PAD_LINE
IF NOT DEFINED PROG_OPER IF "%TARGET_SLOT_IMAGE%"=="VHDX" ECHO. {T}ARGET-VHDX] [%VHDX_TARGET_IMAGE%] {V}Size [MB[%VHDX_SIZE_IMAGE%]
IF NOT DEFINED PROG_OPER IF "%TARGET_SLOT_IMAGE%"=="WIM" ECHO. {T}ARGET-WIM]  [%WIM_TARGET_IMAGE%] {Z}[X-LVL[%WIM_COMPRESS%]
IF "%PROG_OPER%"=="PICK" IF "%SOURCE_SLOT_IMAGE%"=="WIM" SET LIST_FMT=NUMERAL&&SET "LIST_DIR=%IMAGE_FOLDER%\*.WIM"&&ECHO   AVAILABLE WIM'S:&&CALL:FILE_LIST
IF "%PROG_OPER%"=="PICK" IF "%SOURCE_SLOT_IMAGE%"=="VHDX" SET LIST_FMT=NUMERAL&&SET "LIST_DIR=%IMAGE_FOLDER%\*.VHDX"&&ECHO   AVAILABLE VHDX'S:&&CALL:FILE_LIST
IF NOT DEFINED PROG_OPER CALL:PAD_LINE
IF NOT DEFINED PROG_OPER ECHO  {X} [%SOURCE_SLOT_IMAGE%]To[%TARGET_SLOT_IMAGE%]             {G}o^^!&&CALL:PAD_LINE
IF DEFINED PROG_OPER CALL:PAD_LINE&&ECHO                    Enter File # To [%PROG_OPER%] {/}Type&&CALL:PAD_LINE
ECHO                Press (Enter) to Return to Previous Menu
CALL:MENU_SELECT&&IF DEFINED PROG_OPER CALL:FILE_LIST>NUL
IF NOT DEFINED PROG_OPER IF NOT DEFINED SELECT GOTO:PROG_MAIN
IF "%SELECT%"=="G" SET PROG_OPER=GOTIME
IF "%SELECT%"=="I" CALL:WIM_INDEX_IMAGE
IF "%SELECT%"=="S" SET PROG_OPER=PICK&&GOTO:IMAGEPROC_START
IF "%SELECT%"=="T" SET PROG_OPER=PROMPT_SET
IF "%SELECT%"=="V" SET PROG_OPER=VSIZE
IF "%SELECT%"=="X" CALL:IMAGEPROC_SLOT
IF "%SELECT%"=="Z" CALL:WIM_COMPRESS
IF "%PROG_OPER%"=="VSIZE" SET PROMPT_SET=VHDX_SIZE_IMAGE&&ECHO VHDX Size?&&CALL:PROMPT_SET
IF "%PROG_OPER%"=="PICK" IF "%SOURCE_SLOT_IMAGE%"=="WIM" CALL SET "WIM_SOURCE_IMAGE=%SELECT%"&&SET WIM_INDEX_IMAGE=1&&CALL:WIM_INDEX_IMAGE_QUERY
IF "%PROG_OPER%"=="PICK" IF "%SOURCE_SLOT_IMAGE%"=="VHDX" CALL SET "VHDX_SOURCE_IMAGE=%SELECT%"
IF "%PROG_OPER%"=="GOTIME" SET CAME_FROM=IMAGE&&CALL:IMAGEPROC&&PAUSE
IF "%PROG_OPER%"=="PROMPT_SET" IF "%PROMPT_SET%"=="PART_SIZE_HOME_$ETUP" CALL:PROMPT_SET
IF "%PROG_OPER%"=="PROMPT_SET" IF "%TARGET_SLOT_IMAGE%"=="WIM" ECHO Name of WIM?&&CALL SET "PROMPT_SET=WIM_TARGET_IMAGE"&&CALL:PROMPT_SET_ANY
IF "%PROG_OPER%"=="PROMPT_SET" IF "%TARGET_SLOT_IMAGE%"=="WIM" IF DEFINED WIM_TARGET_IMAGE CALL SET "WIM_TARGET_IMAGE=%WIM_TARGET_IMAGE%.WIM"
IF "%PROG_OPER%"=="PROMPT_SET" IF "%TARGET_SLOT_IMAGE%"=="VHDX" ECHO Name of VHDX?&&CALL SET "PROMPT_SET=VHDX_TARGET_IMAGE"&&CALL:PROMPT_SET_ANY
IF "%PROG_OPER%"=="PROMPT_SET" IF "%TARGET_SLOT_IMAGE%"=="VHDX" IF DEFINED VHDX_TARGET_IMAGE CALL SET "VHDX_TARGET_IMAGE=%VHDX_TARGET_IMAGE%.VHDX"
IF DEFINED PROG_OPER SET PROG_OPER=
GOTO:IMAGEPROC_START
:IMAGEPROC_SLOT
IF NOT DEFINED IMAGEPROC_SLOT SET IMAGEPROC_SLOT=1
SET /A IMAGEPROC_SLOT+=1
IF "%IMAGEPROC_SLOT%"=="4" SET IMAGEPROC_SLOT=1
IF "%IMAGEPROC_SLOT%"=="1" SET SOURCE_SLOT_IMAGE=WIM&&SET TARGET_SLOT_IMAGE=VHDX
IF "%IMAGEPROC_SLOT%"=="2" SET SOURCE_SLOT_IMAGE=VHDX&&SET TARGET_SLOT_IMAGE=WIM
IF "%IMAGEPROC_SLOT%"=="3" SET SOURCE_SLOT_IMAGE=WIM&&SET TARGET_SLOT_IMAGE=WIM
EXIT /B
:WIM_COMPRESS
SET SELECT=
IF NOT DEFINED WIM_XLVL_IMAGE SET WIM_XLVL_IMAGE=1
SET /A WIM_XLVL_IMAGE+=1
IF "%WIM_XLVL_IMAGE%"=="4" SET WIM_XLVL_IMAGE=1
IF "%WIM_XLVL_IMAGE%"=="1" SET WIM_COMPRESS=FAST
IF "%WIM_XLVL_IMAGE%"=="2" SET WIM_COMPRESS=MAX
IF "%WIM_XLVL_IMAGE%"=="3" SET WIM_COMPRESS=NONE
EXIT /B
:WIM_INDEX_IMAGE
SET SELECT=&&SET WIM_DESC_IMAGE=&&SET /A WIM_INDEX_IMAGE+=1
IF "%WIM_INDEX_IMAGE%"=="15" SET WIM_INDEX_IMAGE=1
IF EXIST "%IMAGE_FOLDER%\%WIM_SOURCE_IMAGE%" CALL:WIM_INDEX_IMAGE_QUERY
IF NOT DEFINED WIM_DESC_IMAGE SET WIM_INDEX_IMAGE=1&&CALL:WIM_INDEX_IMAGE_QUERY
EXIT /B
:WIM_INDEX_IMAGE_QUERY
Dism /Get-ImageInfo /ImageFile:"%IMAGE_FOLDER%\%WIM_SOURCE_IMAGE%" /Index:%WIM_INDEX_IMAGE% >"%TEMP%\WIMINFO"
FOR /F "tokens=1-5 delims= " %%a in (%TEMP%\WIMINFO) DO (IF "%%a"=="Edition" SET WIM_DESC_IMAGE=%%c)
FOR /F "tokens=1-5 delims= " %%a in (%TEMP%\WIMINFO) DO (IF "%%a"=="Languages" IF NOT "%%c"=="" SET WIM_SOURCE_IMAGE=-SELECT-&&SET WIM_DESC_IMAGE=NULL)
DEL /Q /F "%TEMP%\WIMINFO" >NUL
EXIT /B
REM IMAGEPROC_IMAGEPROC_IMAGEPROC_IMAGEPROC_IMAGEPROC_IMAGEPROC_
REM IMAGEPROC_IMAGEPROC_IMAGEPROC_IMAGEPROC_IMAGEPROC_IMAGEPROC_
:IMAGEPROC
REM IMAGEPROC_IMAGEPROC_IMAGEPROC_IMAGEPROC_IMAGEPROC_IMAGEPROC_
REM IMAGEPROC_IMAGEPROC_IMAGEPROC_IMAGEPROC_IMAGEPROC_IMAGEPROC_
IF "%CAME_FROM%"=="COMMAND" SET SOURCE_SLOT=%SOURCE_SLOT_COMMAND%&&SET TARGET_SLOT=%TARGET_SLOT_COMMAND%&&SET WIM_SOURCE=%WIM_SOURCE_COMMAND%&&SET WIM_TARGET=%WIM_TARGET_COMMAND%&&SET VHDX_SOURCE=%VHDX_SOURCE_COMMAND%&&SET VHDX_TARGET=%VHDX_TARGET_COMMAND%&&SET VHDX_SIZE=%VHDX_SIZE_COMMAND%&&SET WIM_INDEX=%WIM_INDEX_COMMAND%&&SET WIM_COMPRESS=%WIM_COMPRESS_COMMAND%
IF "%CAME_FROM%"=="IMAGE" SET SOURCE_SLOT=%SOURCE_SLOT_IMAGE%&&SET TARGET_SLOT=%TARGET_SLOT_IMAGE%&&SET WIM_SOURCE=%WIM_SOURCE_IMAGE%&&SET WIM_TARGET=%WIM_TARGET_IMAGE%&&SET VHDX_SOURCE=%VHDX_SOURCE_IMAGE%&&SET VHDX_TARGET=%VHDX_TARGET_IMAGE%&&SET VHDX_SIZE=%VHDX_SIZE_IMAGE%&&SET WIM_INDEX=%WIM_INDEX_IMAGE%&&SET WIM_COMPRESS=%WIM_COMPRESS_IMAGE%
IF "%SOURCE_SLOT%"=="VHDX" IF "%VHDX_SOURCE%"=="-SELECT-" ECHO &&ECHO SOURCE %SOURCE_SLOT% DOESN'T EXIST&&PAUSE&&EXIT /B
IF "%TARGET_SLOT%"=="VHDX" IF "%VHDX_TARGET%"=="-SELECT-" ECHO &&ECHO TARGET %TARGET_SLOT% NOT SET&&PAUSE&&EXIT /B
IF "%SOURCE_SLOT%"=="WIM" IF "%CAME_FROM%"=="$ETUP" IF NOT EXIST "%IMAGE_FOLDER%\%WIM_SOURCE%" EXIT /B
IF "%SOURCE_SLOT%"=="WIM" IF "%CAME_FROM%"=="IMAGE" IF "%WIM_SOURCE%"=="-SELECT-" ECHO &&ECHO SOURCE %SOURCE_SLOT% NOT SET&&PAUSE&&EXIT /B
IF "%TARGET_SLOT%"=="WIM" IF "%WIM_TARGET%"=="-SELECT-" ECHO &&ECHO TARGET %TARGET_SLOT% NOT SET&&PAUSE&&EXIT /B
IF NOT DEFINED WIM_INDEX SET WIM_INDEX=1
IF NOT DEFINED WIM_COMPRESS SET WIM_COMPRESS=FAST
CALL:PAD_LINE&&ECHO                    $haZZam^^! Image-Processing Start&&CALL:PAD_LINE
SET "APPLYDIR_MASTER=Z:"&&SET "CAPTUREDIR_MASTER=Z:"
SET "SCRATCHDIR_IMAGE=%PROG_TARGET%\Scratch"
CALL:VDISK_DETACH>NUL 2>&1
IF EXIST "%SCRATCHDIR_IMAGE%" DISM /cleanup-MountPoints>NUL 2>&1
IF EXIST "%SCRATCHDIR_IMAGE%" RD /S /Q "\\?\%SCRATCHDIR_IMAGE%">NUL 2>&1
IF NOT EXIST "%SCRATCHDIR_IMAGE%" MD "%SCRATCHDIR_IMAGE%">NUL 2>&1
CALL:EMPTY_TRASH>NUL 2>&1
IF "%SOURCE_SLOT%"=="VHDX" SET "VDISK=%IMAGE_FOLDER%\%VHDX_SOURCE%"
IF "%TARGET_SLOT%"=="VHDX" SET "VDISK=%IMAGE_FOLDER%\%VHDX_TARGET%"
IF "%SOURCE_SLOT%"=="WIM" SET "IMAGEFILE_SRC=%IMAGE_FOLDER%\%WIM_SOURCE%"
IF "%TARGET_SLOT%"=="WIM" SET "IMAGEFILE_TGT=%IMAGE_FOLDER%\%WIM_TARGET%"
IF "%SOURCE_SLOT%"=="WIM" IF "%TARGET_SLOT%"=="WIM" SET "VDISK=%SCRATCHDIR_IMAGE%\SCRATCH.VHDX"&&CALL:VDISK_CREATE
IF "%SOURCE_SLOT%"=="VHDX" IF "%TARGET_SLOT%"=="WIM" CALL:VDISK_ATTACH
IF "%SOURCE_SLOT%"=="WIM" IF "%TARGET_SLOT%"=="VHDX" SET VHDX_SIZE=%VHDX_SIZE_IMAGE%&&CALL:VDISK_CREATE
CALL:TITLECARD
IF NOT DEFINED WIM_DESC_IMAGE SET WIM_DESC_IMAGE=$HAZZAM
IF "%SOURCE_SLOT%"=="WIM" IF "%TARGET_SLOT%"=="VHDX" DISM /APPLY-IMAGE /IMAGEFILE:"%IMAGEFILE_SRC%" /INDEX:%WIM_INDEX% /APPLYDIR:"%APPLYDIR_MASTER%"
IF "%SOURCE_SLOT%"=="WIM" IF "%TARGET_SLOT%"=="WIM" DISM /APPLY-IMAGE /IMAGEFILE:"%IMAGEFILE_SRC%" /INDEX:%WIM_INDEX% /APPLYDIR:"%APPLYDIR_MASTER%"
IF "%TARGET_SLOT%"=="WIM" DISM /CAPTURE-IMAGE /CAPTUREDIR:"%CAPTUREDIR_MASTER%" /IMAGEFILE:"%IMAGEFILE_TGT%" /COMPRESS:%WIM_COMPRESS% /NAME:%WIM_DESC_IMAGE%
IF EXIST "%SCRATCHDIR_IMAGE%" DISM /cleanup-MountPoints>NUL 2>&1
IF EXIST "%SCRATCHDIR_IMAGE%" RD /S /Q "\\?\%SCRATCHDIR_IMAGE%">NUL 2>&1
IF "%CAME_FROM%"=="IMAGE" ECHO &&SET CAME_FROM=
CALL:HIVES_DETACH>NUL 2>&1
CALL:VDISK_DETACH>NUL 2>&1
CALL:PAD_LINE&&ECHO                       Image-Processing Complete&&CALL:PAD_LINE
EXIT /B
::_TAG
REM DISKMGR_DISKMGR_DISKMGR_DISKMGR_DISKMGR_DISKMGR_DISKMGR_
REM DISKMGR_DISKMGR_DISKMGR_DISKMGR_DISKMGR_DISKMGR_DISKMGR_
:DISKMGR_START
REM DISKMGR_DISKMGR_DISKMGR_DISKMGR_DISKMGR_DISKMGR_DISKMGR_
REM DISKMGR_DISKMGR_DISKMGR_DISKMGR_DISKMGR_DISKMGR_DISKMGR_
@ECHO OFF&&IF NOT DEFINED COLOR_SLOT SET CLRTMP=%RANDOM%%RANDOM%&&SET "CLRTMP=!CLRTMP:~5,5!"&&SET "CLRTMP=!CLRTMP:~1,1!"&&CALL COLOR %CLRTMP%
CLS&&TITLE  [%CD%\] $-h-@-Z-Z-@-m^^! A native command shell Windows image deployment tool.&&IF DEFINED COLOR_SLOT COLOR %COLOR_SLOT%
IF DEFINED PROG_OPER CALL:TITLECARD_NML
CALL:PAD_LINE&&ECHO                             Disk-Management&&CALL:PAD_LINE
ECHO        WHOA^^! THERE MATEY BE CAREFUL, THERE'S NO BRAKES ON THIS.&&CALL:PAD_LINE
IF NOT DEFINED PROG_OPER CALL:DISK_QUERY&&CALL:PAD_LINE
IF NOT DEFINED PROG_OPER IF NOT "%BOOT_IMAGE%"=="NONE" ECHO  [DISK] {$}Boot^^! {I}nspect {E}rase-Disk {#}Change Disk-ID {U}SB-Unplug&&CALL:PAD_LINE
IF NOT DEFINED PROG_OPER IF "%BOOT_IMAGE%"=="NONE" ECHO  [DISK]  {I}nspect  {E}rase-Disk  {#}Change Disk-ID  {U}SB-Unplug&&CALL:PAD_LINE
IF NOT DEFINED PROG_OPER ECHO  [PARTITION]  {C}reate  {D}elete  {F}ormat  {M}ount/Unmount  {L}ock&&CALL:PAD_LINE
ECHO                 Press (Enter) to Return to Previous Menu
CALL:MENU_SELECT&&IF DEFINED PROG_OPER CALL:FILE_LIST>NUL
IF NOT DEFINED PROG_OPER IF NOT DEFINED SELECT GOTO:PROG_MAIN
IF DEFINED PROG_OPER IF NOT DEFINED SELECT SET PROG_OPER=
IF "%SELECT%"=="#" SET PROG_OPER=DISKMGR_CHANGEID
IF "%SELECT%"=="C" SET PROG_OPER=DISKMGR_CREATE
IF "%SELECT%"=="D" SET PROG_OPER=DISKMGR_DELETE
IF "%SELECT%"=="F" SET PROG_OPER=DISKMGR_FORMAT
IF "%SELECT%"=="L" SET PROG_OPER=DISKMGR_LOCK
IF "%SELECT%"=="U" SET PROG_OPER=DISKMGR_USBPLUG
IF "%SELECT%"=="I" SET PROG_OPER=DISKMGR_INSPECT
IF "%SELECT%"=="M" SET PROG_OPER=DISKMGR_MOUNT
IF "%SELECT%"=="E" SET PROG_OPER=DISKMGR_ERASE
IF "%SELECT%"=="$" IF NOT "%BOOT_IMAGE%"=="NONE" GOTO:$ETUP_START
IF "%PROG_OPER%"=="DISKMGR_USBPLUG" RunDll32.exe shell32.dll,Control_RunDLL hotplug.dll&&SET PROG_OPER=
IF DEFINED PROG_OPER CLS&&CALL:PAD_LINE&&ECHO                            [%PROG_OPER%]&&CALL:PAD_LINE&&CALL:DISK_QUERY&&CALL:PAD_LINE
IF "%PROG_OPER%"=="DISKMGR_CREATE" ECHO                            Which Disk {#}?&&CALL:PAD_LINE&&CALL SET "PROMPT_SET=DISK_NUMBER"&&CALL:PROMPT_SET
IF "%PROG_OPER%"=="DISKMGR_CREATE" IF DEFINED DISK_NUMBER CALL:PAD_LINE&&ECHO                        Partition Size in MB?&&CALL:PAD_LINE&&ECHO (Enter) To Use All Available Free Space&&CALL SET "PROMPT_SET=PART_SIZE"&&CALL:PROMPT_SET&&CALL:DISKMGR_CREATE
IF "%PROG_OPER%"=="DISKMGR_CHANGEID" ECHO    $HAZZAM BOOT-DRIVES STORE THE DISK-ID TO MOUNT IN WINPE&&ECHO.      CHANGING THIS WILL BREAK THE HOME-DRIVE DETECTION&&CALL:PAD_LINE&&ECHO.                             Which Disk {#}?&&CALL:PAD_LINE&&CALL SET "PROMPT_SET=DISK_NUMBER"&&CALL:PROMPT_SET
IF "%PROG_OPER%"=="DISKMGR_CHANGEID" IF DEFINED DISK_NUMBER CALL:PAD_LINE&&ECHO                          NEW DISK-ID?&&CALL:PAD_LINE&&CALL SET "PROMPT_SET=GET_DISK_ID"&&CALL:PROMPT_SET&&CALL:DISKMGR_CHANGEID
IF "%PROG_OPER%"=="DISKMGR_FORMAT" ECHO                            Which Disk {#}?&&CALL:PAD_LINE&&CALL SET "PROMPT_SET=DISK_NUMBER"&&CALL:PROMPT_SET
IF "%PROG_OPER%"=="DISKMGR_FORMAT" IF DEFINED DISK_NUMBER CALL:PAD_LINE&&ECHO                          Which Partition {#}?&&CALL:PAD_LINE&&CALL SET "PROMPT_SET=PART_NUMBER"&&CALL:PROMPT_SET&&CALL:DISKMGR_FORMAT
IF "%PROG_OPER%"=="DISKMGR_DELETE" ECHO                            Which Disk {#}?&&CALL:PAD_LINE&&CALL SET "PROMPT_SET=DISK_NUMBER"&&CALL:PROMPT_SET
IF "%PROG_OPER%"=="DISKMGR_DELETE" IF DEFINED DISK_NUMBER CALL:PAD_LINE&&ECHO                          Which Partition {#}?&&CALL:PAD_LINE&&CALL SET "PROMPT_SET=PART_NUMBER"&&CALL:PROMPT_SET&&CALL:DISKMGR_DELETE
IF "%PROG_OPER%"=="DISKMGR_INSPECT" ECHO                            Which Disk {#}?&&CALL:PAD_LINE&&CALL SET "PROMPT_SET=DISK_NUMBER"&&CALL:PROMPT_SET
IF "%PROG_OPER%"=="DISKMGR_INSPECT" IF DEFINED DISK_NUMBER CLS&&CALL:DISKMGR_INSPECT
IF "%PROG_OPER%"=="DISKMGR_LOCK" ECHO                            Which Disk {#}?&&CALL:PAD_LINE&&CALL SET "PROMPT_SET=DISK_NUMBER"&&CALL:PROMPT_SET
IF "%PROG_OPER%"=="DISKMGR_LOCK" IF DEFINED DISK_NUMBER CALL:PAD_LINE&&ECHO Which Partition {#}?&&CALL:PAD_LINE&&CALL SET "PROMPT_SET=PART_NUMBER"&&CALL:PROMPT_SET&&CALL:DISKMGR_LOCK
IF "%PROG_OPER%"=="DISKMGR_MOUNT" ECHO                          Which Drive Letter?&&CALL:PAD_LINE&&CALL SET "PROMPT_SET=DISK_LETTER"&&CALL:PROMPT_SET
IF "%PROG_OPER%"=="DISKMGR_MOUNT" IF EXIST "%DISK_LETTER%:\" CALL:DISKMGR_UNMOUNT&&SET PROG_OPER=&&PAUSE
IF "%PROG_OPER%"=="DISKMGR_MOUNT" IF NOT EXIST "%DISK_LETTER%:\" CALL:PAD_LINE&&ECHO                            Which Disk {#}?&&CALL:PAD_LINE&&CALL SET "PROMPT_SET=DISK_NUMBER"&&CALL:PROMPT_SET
IF "%PROG_OPER%"=="DISKMGR_MOUNT" IF DEFINED DISK_NUMBER IF NOT EXIST "%DISK_LETTER%:\" CALL:PAD_LINE&&ECHO                          Which Partition {#}?&&CALL:PAD_LINE&&CALL SET "PROMPT_SET=PART_NUMBER"&&CALL:PROMPT_SET&&CALL:DISKMGR_MOUNT
IF "%PROG_OPER%"=="DISKMGR_ERASE" ECHO                         Which Disk {#}?&&CALL:PAD_LINE&&CALL SET "PROMPT_SET=DISK_NUMBER"&&CALL:PROMPT_SET&&CALL:DISKMGR_ERASE
DEL /Q /F "%TEMP%\DISK_PART">NUL 2>&1
IF DEFINED PROG_OPER SET PROG_OPER=&&CALL:PAD_LINE&&ECHO	                      End of Disk-Part Operation&&CALL:PAD_LINE&&PAUSE
GOTO:DISKMGR_START
:BCD_SAVE
CALL:EFI_MOUNT 
CALL:BCD_CREATE 
CALL:EFI_UNMOUNT 
EXIT /B
:BCD_NAME_SLOT
SET SELECT=&&SET /A BCD_NAME_SLOT+=1
IF "%BCD_NAME_SLOT%"=="6" SET BCD_NAME_SLOT=0
EXIT /B
:VHDX_SLOT
SET SELECT=
IF EXIST "Z:\" CALL:VDISK_DETACH
SET /A VHDX_SLOT+=1
IF "%VHDX_SLOT%" GEQ "7" SET VHDX_SLOT=1
EXIT /B
REM PART_CREATE_PART_CREATE_PART_CREATE_PART_CREATE_PART_CREATE_PART_CREATE
:PART_CREATE
REM PART_CREATE_PART_CREATE_PART_CREATE_PART_CREATE_PART_CREATE_PART_CREATE
CALL:PART_UNMOUNT
CALL:DISKMGR_ERASE
SET EFI_TYPE=NML
(ECHO.select disk %DISK_NUMBER%&&ECHO.create partition EFI size=1024&&ECHO.format quick fs=fat32 label="ESP"&&ECHO.assign letter=Q noerr&&ECHO.create partition primary&&ECHO.format quick fs=ntfs&&ECHO.Exit)>"%TEMP%\DISK_PART"&&DISKPART /s "%TEMP%\DISK_PART"
(ECHO.select disk %DISK_NUMBER%&&ECHO.select partition 2&&ECHO.assign letter=S noerr&&ECHO.Exit)>"%TEMP%\DISK_PART"&&DISKPART /s "%TEMP%\DISK_PART"
IF EXIST "Q:\" IF EXIST "S:\" EXIT /B
CALL:DISKMGR_ERASE
SET EFI_TYPE=ALT
(ECHO.select disk %DISK_NUMBER%&&ECHO.create partition primary size=1024&&ECHO.format quick fs=fat32 label="ESP"&&ECHO.assign letter=Q noerr&&ECHO.create partition primary&&ECHO.format quick fs=ntfs&&ECHO.Exit)>"%TEMP%\DISK_PART"&&DISKPART /s "%TEMP%\DISK_PART"
(ECHO.select disk %DISK_NUMBER%&&ECHO.select partition 2&&ECHO.assign letter=S noerr&&ECHO.Exit)>"%TEMP%\DISK_PART"&&DISKPART /s "%TEMP%\DISK_PART"
IF EXIST "Q:\" IF EXIST "S:\" EXIT /B
GOTO:PART_CREATE
:DISKMGR_ERASE
IF NOT DEFINED DISK_NUMBER EXIT /B
FOR %%a in (0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15) DO (IF "%DISK_NUMBER%"=="%%a" CALL SET "GET_DISK_ID=%%DISKID_%%a%%")
(ECHO.select disk %DISK_NUMBER%&&ECHO.clean&&ECHO.convert gpt&&ECHO.select partition 1&&ECHO.delete partition override&&ECHO.Exit)>"%TEMP%\DISK_PART"&&DISKPART /s "%TEMP%\DISK_PART">NUL
CALL:DISKMGR_CHANGEID>NUL
ECHO All partitions on Disk %DISK_NUMBER% have been erased.&&ECHO 
EXIT /B
:DISKMGR_INSPECT
IF NOT DEFINED DISK_NUMBER EXIT /B
(ECHO.select disk %DISK_NUMBER%&&ECHO.detail disk&&ECHO.list partition&&ECHO.Exit)>"%TEMP%\DISK_PART"&&DISKPART /s "%TEMP%\DISK_PART"&&ECHO 
EXIT /B
:DISKMGR_MOUNT
IF NOT DEFINED DISK_NUMBER EXIT /B
(ECHO.select disk %DISK_NUMBER%&&ECHO.select partition %PART_NUMBER%&&ECHO.Assign letter=%DISK_LETTER% noerr&&ECHO.Exit)>"%TEMP%\DISK_PART"&&Diskpart /s "%TEMP%\DISK_PART">NUL 2>&1
IF NOT EXIST "%DISK_LETTER%:\" (ECHO.select disk %DISK_NUMBER%&&ECHO.select partition %PART_NUMBER%&&ECHO.gpt attributes=0x8000000000000000&&ECHO.Exit)>"%TEMP%\DISK_PART"&&DISKPART /s "%TEMP%\DISK_PART">NUL 2>&1
IF NOT EXIST "%DISK_LETTER%:\" (ECHO.select disk %DISK_NUMBER%&&ECHO.select partition %PART_NUMBER%&&ECHO.Assign letter=%DISK_LETTER% noerr&&ECHO.Exit)>"%TEMP%\DISK_PART"&&Diskpart /s "%TEMP%\DISK_PART">NUL 2>&1
ECHO 
EXIT /B
:DISKMGR_UNMOUNT
(ECHO.select VOLUME %DISK_LETTER%&&ECHO.Remove letter=%DISK_LETTER% noerr&&ECHO.Exit)>"%TEMP%\DISK_PART"&&Diskpart /s "%TEMP%\DISK_PART"&&ECHO 
EXIT /B
:DISKMGR_CREATE
IF NOT DEFINED DISK_NUMBER EXIT /B
IF NOT DEFINED PART_SIZE (ECHO.select disk %DISK_NUMBER%&&ECHO.create partition primary&&ECHO.format quick fs=ntfs&&ECHO.Exit)>"%TEMP%\DISK_PART"&&DISKPART /s "%TEMP%\DISK_PART"&&ECHO 
IF DEFINED PART_SIZE (ECHO.select disk %DISK_NUMBER%&&ECHO.create partition primary size=%PART_SIZE%&&ECHO.format quick fs=ntfs&&ECHO.Exit)>"%TEMP%\DISK_PART"&&DISKPART /s "%TEMP%\DISK_PART"&&ECHO 
EXIT /B
:DISKMGR_DELETE
IF NOT DEFINED DISK_NUMBER EXIT /B
(ECHO.select disk %DISK_NUMBER%&&ECHO.select partition %PART_NUMBER%&&ECHO.delete partition override&&ECHO.Exit)>"%TEMP%\DISK_PART"&&DISKPART /s "%TEMP%\DISK_PART"&&ECHO 
EXIT /B
:DISKMGR_CHANGEID
IF NOT DEFINED DISK_NUMBER EXIT /B
(ECHO.select disk %DISK_NUMBER%&&ECHO.uniqueid disk id=%GET_DISK_ID%&&ECHO.Exit)>"%TEMP%\DISK_PART"&&DISKPART /s "%TEMP%\DISK_PART"&&ECHO 
EXIT /B
:DISKMGR_FORMAT
IF NOT DEFINED DISK_NUMBER EXIT /B
(ECHO.select disk %DISK_NUMBER%&&ECHO.select partition %PART_NUMBER%&&ECHO.format quick fs=ntfs override&&ECHO.Exit)>"%TEMP%\DISK_PART"&&DISKPART /s "%TEMP%\DISK_PART"&&ECHO 
EXIT /B
:DISKMGR_LOCK
IF NOT DEFINED DISK_NUMBER EXIT /B
(ECHO.select disk %DISK_NUMBER%&&ECHO.select partition %PART_NUMBER%&&ECHO.gpt attributes=0x4000000000000001&&ECHO.Exit)>"%TEMP%\DISK_PART"&&DISKPART /s "%TEMP%\DISK_PART"&&ECHO 
EXIT /B
REM DISK_MENU_DISK_MENU_DISK_MENU_DISK_MENU_DISK_MENU_DISK_MENU_DISK_MENU
:DISK_MENU
REM DISK_MENU_DISK_MENU_DISK_MENU_DISK_MENU_DISK_MENU_DISK_MENU_DISK_MENU
CLS&&CALL:MENU_HEAD_GENERIC&&ECHO        WHOA^^! THERE MATEY BE CAREFUL, THERE'S NO BRAKES ON THIS.&&CALL:PAD_LINE&&CALL:DISK_QUERY
SET DISK_MENU_LBL=Target&&IF DEFINED PROG_OPER SET DISK_MENU_LBL=%PROG_OPER%
CALL:PAD_LINE&&ECHO                        Which Disk {#} To %DISK_MENU_LBL%?&&CALL:PAD_LINE
ECHO               Press (Enter) to Return to Previous Menu
IF DEFINED DISK_NUMBER SET DISK_NUMBER_CUR=%DISK_NUMBER%
SET DISK_TARGET=&SET SELECT=&&SET /P "SELECT=$>>"
IF NOT DEFINED SELECT EXIT /B
FOR %%a in (0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15) DO (IF "%SELECT%"=="%%a" CALL SET DISK_TARGET=%%DISKID_%%a%%&&CALL SET DISK_TYPE=%%DISKTYPE_%%a%%)
IF "%DISK_TARGET%"=="00000000-0000-0000-0000-000000000000" GOTO:DISK_MENU
IF "%DISK_TARGET%"=="00000000" GOTO:DISK_MENU
IF "%DISK_TARGET%"=="0000-0000" GOTO:DISK_MENU
IF "%DISK_TARGET%"=="" GOTO:DISK_MENU
IF NOT DEFINED DISK_TARGET GOTO:DISK_MENU
CALL:DISK_QUERY>NUL
IF NOT DEFINED DISK_NUMBER GOTO:DISK_MENU
ECHO.%DISK_TARGET%>"%TEMP%\DISK_TARGET"&&ECHO.%DISK_TYPE%>"%TEMP%\DISK_TYPE"
IF DEFINED DISK_NUMBER_CUR ECHO DISK (%DISK_NUMBER_CUR%) is the Last Mounted Disk
ECHO DISK (%DISK_NUMBER%) is the Target Disk
EXIT /B
REM DISK_QUERY_DISK_QUERY_DISK_QUERY_DISK_QUERY_DISK_QUERY_DISK_QUERY
:DISK_QUERY
REM DISK_QUERY_DISK_QUERY_DISK_QUERY_DISK_QUERY_DISK_QUERY_DISK_QUERY
(ECHO.LIST DISK&&ECHO.Exit)>%TEMP%\DPQUERY1&&DISKPART /s %TEMP%\DPQUERY1>%TEMP%\DPQUERY2
FOR /F "tokens=2,4 skip=8 delims= " %%a in (%TEMP%\DPQUERY2) DO ((ECHO.SELECT DISK %%a&&ECHO.DETAIL DISK&&ECHO.Exit)>%TEMP%\DPQUERY3&&DISKPART /s %TEMP%\DPQUERY3>%TEMP%\DPQUERY4
IF NOT "%%a"=="DiskPart..." FOR /F "tokens=1-5 skip=7 delims={}: " %%1 in (%TEMP%\DPQUERY4) DO (IF "%%1"=="Type" IF "%%2"=="File" SET VSKIP%%a=%%a))
FOR /F "tokens=2,4 skip=8 delims= " %%a in (%TEMP%\DPQUERY2) DO (SET DISK%%a=&&SET DISKVENDOR_%%a=
IF NOT DEFINED VSKIP%%a (ECHO.SELECT DISK %%a&&ECHO.DETAIL DISK&&ECHO.LIST PARTITION&&ECHO.Exit)>%TEMP%\DPQUERY3&&DISKPART /s %TEMP%\DPQUERY3>%TEMP%\DPQUERY4&&SET PAD_SIZE=4&&CALL:PAD_LINE
IF NOT DEFINED VSKIP%%a IF NOT "%%a"=="DiskPart..." FOR /F "tokens=1-9 skip=7 delims={}: " %%1 in (%TEMP%\DPQUERY4) DO (
IF NOT DEFINED DISK%%a SET DISK%%a=%%a&&ECHO  DISK ^{%%a^}
IF NOT DEFINED DISKVENDOR_%%a SET DISKVENDOR_%%a=%%1 %%2 %%3&&ECHO VENDOR = %%1 %%2 %%3
IF "%%1"=="Type" SET "DISKTYPE_%%a=%%2"&&ECHO  Type  = %%2
IF "%%1 %%2"=="Disk ID" SET "DISKID_%%a=%%3"&&ECHO  UID   = %%3&&IF "%%3"=="%DISK_TARGET%" SET DISK_NUMBER=%%a
IF "%%1 %%2 %%3"=="Pagefile Disk Yes" ECHO *Active Pagefile*
IF "%%1"=="Partition" IF NOT "%%2"=="###" ECHO  {%%1 %%2}&&ECHO  Size  = %%4 %%5
IF "%%3"=="S" SET "CURRENT_HOME=%%2"))
SET PAD_SIZE=4&&CALL:PAD_LINE
DEL /Q /F "%TEMP%\DPQUERY*">NUL 2>&1
EXIT /B
:EFI_MOUNT
IF NOT DEFINED DISK_TARGET ECHO DISK ID ERROR&&EXIT /B
(ECHO.select VOLUME Q&&ECHO.Remove letter=Q noerr&&ECHO.Exit)>"%TEMP%\DISK_PART"&&Diskpart /s "%TEMP%\DISK_PART">NUL 2>&1
(ECHO.select disk %DISK_NUMBER%&&ECHO.select partition 1&&ECHO.gpt attributes=0x8000000000000000&&ECHO.Exit)>"%TEMP%\DISK_PART"&&DISKPART /s "%TEMP%\DISK_PART">NUL 2>&1
(ECHO.select disk %DISK_NUMBER%&&ECHO.select partition 1&&ECHO.Assign letter=Q noerr&&ECHO.Exit)>"%TEMP%\DISK_PART"&&Diskpart /s "%TEMP%\DISK_PART">NUL 2>&1
DEL /Q /F "%TEMP%\DISK_PART">NUL 2>&1
IF NOT EXIST "Q:\EFI" ECHO EFI EMPTY OR NOT MOUNTED
EXIT /B
:PART_UNMOUNT
CALL:EFI_UNMOUNT
DEL /Q /F "%TEMP%\DISK_PART">NUL 2>&1
IF EXIST "S:\" CALL:REASSIGN_LETTER
DEL /Q /F "%TEMP%\DISK_PART">NUL 2>&1
EXIT /B
:EFI_UNMOUNT
(ECHO.select VOLUME Q&&ECHO.Remove letter=Q noerr&&ECHO.Exit)>"%TEMP%\DISK_PART"&&Diskpart /s "%TEMP%\DISK_PART">NUL 2>&1
(ECHO.select disk %DISK_NUMBER%&&ECHO.select partition 1&&ECHO.gpt attributes=0x4000000000000001&&ECHO.Exit)>"%TEMP%\DISK_PART"&&DISKPART /s "%TEMP%\DISK_PART">NUL 2>&1
DEL /Q /F "%TEMP%\DISK_PART">NUL 2>&1
EXIT /B
:PART2_LOCK
CALL:DISK_QUERY
IF DEFINED DISK_TARGET (ECHO.select disk %DISK_NUMBER%&&ECHO.select partition 2&&ECHO.gpt attributes=0x4000000000000001&&ECHO.Exit)>"%TEMP%\DISK_PART"&&DISKPART /s "%TEMP%\DISK_PART">NUL 2>&1
DEL /Q /F "%TEMP%\DISK_PART">NUL 2>&1
EXIT /B
:HOME_AUTO
SET HOME_MOUNT=&&CLS&&ECHO QUERYING DISKS...
IF EXIST "%PROG_FOLDER%\DISK_TARGET" SET /P DISK_TARGET=<"%PROG_FOLDER%\DISK_TARGET"
IF NOT DEFINED DISK_TARGET ECHO.DISK ID MISSING.&&PAUSE&&CALL:MENU_HEAD_GENERIC&&CALL:DISK_MENU
IF EXIST "S:\" CALL:REASSIGN_LETTER
IF EXIST "%PROG_FOLDER%\DISK_TARGET" SET /P DISK_TARGET=<"%PROG_FOLDER%\DISK_TARGET"
CALL:DISK_QUERY>NUL 2>&1
IF NOT EXIST "S:\" (ECHO.select disk %DISK_NUMBER%&&ECHO.select partition 2&&ECHO.Assign letter=S noerr&&ECHO.Exit)>"%TEMP%\DISK_PART"&&Diskpart /s "%TEMP%\DISK_PART">NUL 2>&1
IF NOT EXIST "S:\" (ECHO.select disk %DISK_NUMBER%&&ECHO.select partition 2&&ECHO.gpt attributes=0x8000000000000000&&ECHO.Exit)>"%TEMP%\DISK_PART"&&DISKPART /s "%TEMP%\DISK_PART">NUL 2>&1
IF NOT EXIST "S:\" (ECHO.select disk %DISK_NUMBER%&&ECHO.select partition 2&&ECHO.Assign letter=S noerr&&ECHO.Exit)>"%TEMP%\DISK_PART"&&Diskpart /s "%TEMP%\DISK_PART">NUL 2>&1
DEL /Q /F "%TEMP%\DISK_PART">NUL 2>&1
IF EXIST "S:\" IF NOT EXIST "S:\$" MD S":\$">NUL 2>&1
IF NOT EXIST "S:\$" ECHO CAN'T FIND HOME. MAYBE THE DISK-ID HAS CHANGED.CHECK HOME FOLDER NAME&&PAUSE&&EXIT /B
SET "PROG_SOURCE=S:\$"&&SET HOME_MOUNT=YES
SET "PROG_TARGET=S:\$"&&SET HOME_MOUNT=YES
CALL:SETS_LOAD>NUL 2>&1
EXIT /B
:HOME_MANUAL
CALL:MENU_HEAD_GENERIC
IF DEFINED OBJ_TYPE ECHO.&&CALL:DISK_MENU
SET HOME_MOUNT=YES&&CALL:HOME_AUTO>NUL 2>&1
EXIT /B
:REASSIGN_LETTER
CALL:DISK_QUERY>NUL 2>&1
SET LAST_HOME=%CURRENT_HOME%
FOR %%G in (P O N M L K J I H G F E D) DO (IF NOT EXIST "%%G:\" SET DRV_LETTER=%%G)
(ECHO.select VOLUME S&&ECHO.Remove letter=S noerr&&ECHO.Exit)>"%TEMP%\DISK_PART"&&Diskpart /s "%TEMP%\DISK_PART">NUL 2>&1
(ECHO.select VOLUME %CURRENT_HOME%&&ECHO.assign letter=%DRV_LETTER% noerr&&ECHO.Exit)>"%TEMP%\DISK_PART"&&DISKPART /s "%TEMP%\DISK_PART">NUL 2>&1
SET LAST_LETTER=%DRV_LETTER%
DEL /Q /F "%TEMP%\DISK_PART">NUL 2>&1
EXIT /B
REM VDISK_CREATE_VDISK_CREATE_VDISK_CREATE_VDISK_CREATE_VDISK_CREATE
:VDISK_CREATE
REM VDISK_CREATE_VDISK_CREATE_VDISK_CREATE_VDISK_CREATE_VDISK_CREATE
CALL:VDISK_DETACH>NUL 2>&1
IF DEFINED NEW_VDISK SET VHDX_LABEL=%NEW_VDISK%
IF NOT DEFINED VHDX_SIZE SET VHDX_SIZE=25600
IF NOT DEFINED VHDX_LABEL SET VHDX_LABEL=VHDX%VHDX_SLOT%
DEL /Q /F "%VDISK%">NUL 2>&1
(ECHO.create vdisk file="%VDISK%" maximum=%VHDX_SIZE% type=expandable&&ECHO.Select vdisk file="%VDISK%"&&ECHO.Attach vdisk&&ECHO.create partition primary&&ECHO.select partition 1&&ECHO.format fs=ntfs quick label="%VHDX_LABEL%"&&ECHO.Assign letter=Z noerr&&ECHO.Exit)>"%TEMP%\DISK_PART"
DISKPART /s "%TEMP%\DISK_PART">NUL 2>&1
DEL "%TEMP%\DISK_PART">NUL 2>&1
EXIT /B
:VDISK_ATTACH
IF NOT DEFINED DISK_LETTER SET DISK_LETTER=Z
SET "DISK_LETTER_BAK=%DISK_LETTER%"&&CALL:VDISK_DETACH>NUL 2>&1
SET "DISK_LETTER=%DISK_LETTER_BAK%"
(ECHO.Select vdisk file="%VDISK%"&&ECHO.Attach vdisk&&ECHO.select partition 1&&ECHO.Assign letter=%DISK_LETTER% noerr&&ECHO.Exit)>"%TEMP%\DISK_PART"
DISKPART /s "%TEMP%\DISK_PART">NUL 2>&1
DEL "%TEMP%\DISK_PART">NUL 2>&1
SET DISK_LETTER=
EXIT /B
:VDISK_DETACH
IF NOT DEFINED DISK_LETTER SET DISK_LETTER=Z
(ECHO.Select vdisk file="%VDISK%"&&ECHO.Detach vdisk&&ECHO.Exit)>"%TEMP%\DISK_PART"
DISKPART /s "%TEMP%\DISK_PART">NUL 2>&1
DEL "%TEMP%\DISK_PART">NUL 2>&1
IF EXIST "%DISK_LETTER%:\" (ECHO.select VOLUME=%DISK_LETTER%&&ECHO.remove all dismount noerr&&ECHO.Exit)>"%TEMP%\DISK_PART"
DISKPART /s "%TEMP%\DISK_PART">NUL 2>&1
DEL "%TEMP%\DISK_PART">NUL 2>&1
SET DISK_LETTER=
EXIT /B
:VDISK_COMPACT
IF NOT DEFINED VDISK EXIT /B
(ECHO.Select vdisk file="%VDISK%"&&ECHO.Attach vdisk readonly&&ECHO.compact vdisk&&ECHO.detach vdisk&&ECHO.Exit)>"%TEMP%\DISK_PART"&&DISKPART /s "%TEMP%\DISK_PART"&&ECHO 
DEL "%TEMP%\DISK_PART">NUL 2>&1
EXIT /B
::_TAG
REM $ETUP_$ETUP_$ETUP_$ETUP_$ETUP_$ETUP_$ETUP_$ETUP_$ETUP_$ETUP_$ETUP_$ETUP_$ETUP_$ETUP
REM $ETUP_$ETUP_$ETUP_$ETUP_$ETUP_$ETUP_$ETUP_$ETUP_$ETUP_$ETUP_$ETUP_$ETUP_$ETUP_$ETUP
:$ETUP_START
REM $ETUP_$ETUP_$ETUP_$ETUP_$ETUP_$ETUP_$ETUP_$ETUP_$ETUP_$ETUP_$ETUP_$ETUP_$ETUP_$ETUP
REM $ETUP_$ETUP_$ETUP_$ETUP_$ETUP_$ETUP_$ETUP_$ETUP_$ETUP_$ETUP_$ETUP_$ETUP_$ETUP_$ETUP
@ECHO OFF&&CALL:SETS_HANDLER&&CALL:FOLDER_LOCATE&&CALL:OBJ_EXIST&&CALL:IMAGE_EXIST
IF "%BOOT_IMAGE%"=="NONE" GOTO:PROG_MAIN
IF NOT DEFINED COLOR_SLOT SET CLRTMP=%RANDOM%%RANDOM%&&SET "CLRTMP=!CLRTMP:~5,5!"&&SET "CLRTMP=!CLRTMP:~1,1!"&&CALL COLOR %CLRTMP%
CLS&&TITLE  [%CD%\] $-h-@-Z-Z-@-m^^! A native command shell Windows image deployment tool.&&IF DEFINED COLOR_SLOT COLOR %COLOR_SLOT%
IF DEFINED PROG_OPER CALL:TITLECARD_NML
CALL:PAD_LINE&&ECHO                      $-h-@-Z-Z-@-m^^! Boot-Creator&&CALL:PAD_LINE
IF NOT DEFINED SOURCE_SLOT_$ETUP SET SOURCE_SLOT_$ETUP=SKIP
IF NOT DEFINED TARGET_SLOT_$ETUP SET TARGET_SLOT_$ETUP=SKIP
IF NOT DEFINED PROG_OPER ECHO   ~ { Erase Target-Disk ^& Create Image-Deploy Boot-Environment. } ~&&CALL:PAD_LINE
IF "%PROG_OPER%"=="PICK" IF "%SOURCE_SLOT_$ETUP%"=="VHDX" SET LIST_FMT=NUMERAL&&SET "LIST_DIR=%IMAGE_FOLDER%\*.VHDX"&&CALL:FILE_LIST&&CALL:PAD_LINE
IF NOT DEFINED PROG_OPER IF "%SOURCE_SLOT_$ETUP%"=="VHDX" IF "%TARGET_SLOT_$ETUP%"=="COPY" ECHO  {X}[SRC[%SOURCE_SLOT_$ETUP%]                  {G}o^^!   ~ {V}HDX {%VHDX_SOURCE_$ETUP%} ~&&CALL:PAD_LINE
IF NOT DEFINED PROG_OPER IF "%SOURCE_SLOT_$ETUP%"=="SKIP" IF "%TARGET_SLOT_$ETUP%"=="SKIP" ECHO  {X}[SRC[%SOURCE_SLOT_$ETUP%]                  {G}o^^!   ~ { Skipping VHDX Copy } ~&&CALL:PAD_LINE
IF DEFINED PROG_OPER ECHO                  Enter File # To [%PROG_OPER%] {/}Type&&CALL:PAD_LINE
ECHO                Press (Enter) to Return to Previous Menu
CALL:MENU_SELECT&&IF DEFINED PROG_OPER CALL:FILE_LIST>NUL
IF NOT DEFINED PROG_OPER IF NOT DEFINED SELECT GOTO:PROG_MAIN
IF "%SELECT%"=="X" CALL:TARGET_SLOT_$ETUP
IF "%SELECT%"=="G" SET PROG_OPER=GOTIME
IF "%SELECT%"=="V" IF NOT "%SOURCE_SLOT_$ETUP%"=="SKIP" SET PROG_OPER=PICK&&GOTO:$ETUP_START
IF "%PROG_OPER%"=="GOTIME" SET CAME_FROM=$ETUP&&CALL:BOOT_MAKER&&PAUSE
IF "%PROG_OPER%"=="PICK" IF "%SOURCE_SLOT_$ETUP%"=="VHDX" SET "VHDX_SOURCE_$ETUP=%SELECT%"
IF DEFINED PROG_OPER SET PROG_OPER=
GOTO:$ETUP_START
:TARGET_SLOT_$ETUP
IF NOT DEFINED $ETUP_SLOT SET $ETUP_SLOT=1
SET /A $ETUP_SLOT+=1
IF "%$ETUP_SLOT%"=="3" SET $ETUP_SLOT=1
IF "%$ETUP_SLOT%"=="1" SET SOURCE_SLOT_$ETUP=SKIP&&SET TARGET_SLOT_$ETUP=SKIP
IF "%$ETUP_SLOT%"=="2" SET SOURCE_SLOT_$ETUP=VHDX&&SET TARGET_SLOT_$ETUP=COPY
EXIT /B
REM REPARTITION_REPARTITION_REPARTITION_REPARTITION_REPARTITION_REPARTITION
:BOOT_MAKER
REM REPARTITION_REPARTITION_REPARTITION_REPARTITION_REPARTITION_REPARTITION
SET PROG_OPER=
IF "%CAME_FROM%"=="$ETUP" CLS
IF "%CAME_FROM%"=="$ETUP" IF "%SOURCE_SLOT_$ETUP%"=="VHDX" IF NOT EXIST "%IMAGE_FOLDER%\%VHDX_SOURCE_$ETUP%" ECHO &&ECHO SOURCE VHDX NOT SET&&PAUSE&&EXIT /B
IF "%CAME_FROM%"=="$ETUP" IF "%SOURCE_SLOT_$ETUP%"=="WIM" IF NOT EXIST "%IMAGE_FOLDER%\%WIM_SOURCE_$ETUP%" ECHO &&ECHO SOURCE-WIM NOT SET&&PAUSE&&EXIT /B
IF "%CAME_FROM%"=="$ETUP" SET WIM_INDEX_TEMP=%WIM_INDEX_$ETUP%&&ECHO QUERYING DISKS...&&CALL:DISK_MENU
IF "%CAME_FROM%"=="$ETUP" IF NOT DEFINED SELECT EXIT /B
CALL:PAD_LINE&&ECHO                            Boot-Creator Start&&CALL:PAD_LINE
DISM /cleanup-MountPoints>NUL 2>&1
CALL:EMPTY_TRASH>NUL 2>&1
IF "%PROG_MODE%"=="RAMDISK" SET /P DISK_TARGET=<"%PROG_FOLDER%\DISK_TARGET"&&CALL:DISK_QUERY>NUL 2>&1
IF "%PROG_MODE%"=="RAMDISK" CALL:EFI_MOUNT>NUL 2>&1
IF "%PROG_MODE%"=="RAMDISK" IF NOT EXIST "Q:\BOOT.WIM" ECHO &&ECHO NO BOOT MEDIA DETECTED&&CALL:EFI_UNMOUNT&&PAUSE&&EXIT /B
IF EXIST "%TEMP%\BOOT.WIM" DEL /Q /F "\\?\%TEMP%\BOOT.WIM">NUL 2>&1
IF EXIST "%TEMP%\BOOT-MEDIA.SAV" DEL /Q /F "\\?\%TEMP%\BOOT-MEDIA.SAV">NUL 2>&1
IF "%PROG_MODE%"=="RAMDISK" SET BOOT_IMAGE=Q:\BOOT.WIM
COPY /Y "%BOOT_IMAGE%" "%TEMP%\BOOT.WIM">NUL 2>&1
IF "%PROG_MODE%"=="RAMDISK" CALL:EFI_UNMOUNT>NUL 2>&1
IF EXIST "%TEMP%\$haZZam" RD /Q /S "\\?\%TEMP%\$haZZam">NUL 2>&1
IF NOT EXIST "%TEMP%\$haZZam" MD "%TEMP%\$haZZam">NUL 2>&1
SET /P DISK_TARGET=<"%TEMP%\DISK_TARGET"&&CALL:DISK_QUERY>NUL 2>&1
MOVE /Y "%TEMP%\DISK_TARGET" "%TEMP%\$haZZam">NUL 2>&1
COPY /Y "\\?\%PROG_FOLDER%\$haZZam.CMD" "%TEMP%\$haZZam">NUL 2>&1
ECHO CREATING PARTITIONS..
IF DEFINED DISK_NUMBER CALL:PART_CREATE>NUL 2>&1
:BOOT_CREATE
DISM /cleanup-MountPoints>NUL 2>&1
SET "SCRATCHDIR_BOOT=S:\$\Scratch"
IF EXIST "%SCRATCHDIR_BOOT%" RD /S /Q "\\?\%SCRATCHDIR_BOOT%">NUL 2>&1
IF NOT EXIST "%SCRATCHDIR_BOOT%" MD "%SCRATCHDIR_BOOT%">NUL 2>&1
MOVE /Y "\\?\%TEMP%\BOOT.WIM" "%SCRATCHDIR_BOOT%">NUL 2>&1
SET "VDISK=%SCRATCHDIR_BOOT%\SCRATCH.VHDX"
CALL:VDISK_CREATE>NUL 2>&1
ECHO EXTRACTING BOOT-MEDIA...&&CALL:TITLECARD_NML
SET "IMAGEFILE_BOOT=%SCRATCHDIR_BOOT%\BOOT.WIM"
CALL:BOOTWIM_INDEX>NUL 2>&1
SET "APPLYDIR_BOOT=Z:"&&SET "CAPTUREDIR_BOOT=Z:"
DISM /APPLY-IMAGE /IMAGEFILE:"%IMAGEFILE_BOOT%" /INDEX:%BOOTWIM_INDEX% /APPLYDIR:"%APPLYDIR_BOOT%"
IF NOT EXIST "%APPLYDIR_BOOT%\Windows" ECHO &&ECHO MOUNT FAILURE&&ECHO BOOTWIM_INDEX %BOOTWIM_INDEX%
DEL /Q /F "\\?\%IMAGEFILE_BOOT%">NUL 2>&1
MD "%APPLYDIR_BOOT%\$">NUL 2>&1
COPY /Y "%TEMP%\$haZZam\*.*" "%APPLYDIR_BOOT%\$">NUL 2>&1
MD "Q:\EFI\Microsoft\Boot">NUL 2>&1
MD "Q:\Boot">NUL 2>&1
MD "Q:\EFI\Boot">NUL 2>&1
COPY /Y "%APPLYDIR_BOOT%\Windows\Boot\DVD\EFI\boot.sdi" "Q:\Boot">NUL 2>&1
COPY /Y "%APPLYDIR_BOOT%\Windows\Boot\EFI\bootmgfw.efi" "Q:\EFI\Boot\bootx64.efi">NUL 2>&1
COPY /Y "%APPLYDIR_BOOT%\Windows\System32\config\ELAM" "Q:\EFI\Microsoft\Boot\BCD">NUL 2>&1
IF NOT EXIST "%APPLYDIR_BOOT%\Windows\System32\Setup.dat" DEL /Q /F "\\?\%APPLYDIR_BOOT%\setup.exe">NUL 2>&1
IF NOT EXIST "%APPLYDIR_BOOT%\Windows\Boot\DVD\EFI\boot.sdi" COPY /Y "%WinDir%\Boot\DVD\EFI\boot.sdi" "Q:\Boot">NUL 2>&1
IF NOT EXIST "%APPLYDIR_BOOT%\Windows\Boot\EFI\bootmgfw.efi" COPY /Y "%WinDir%\Boot\EFI\bootmgfw.efi" "Q:\EFI\Boot\bootx64.efi">NUL 2>&1
IF NOT EXIST "Q:\EFI\Boot\bootx64.efi" ECHO &&ECHO EFI MISSING&&PAUSE&&GOTO:THETOP
CALL:BCD_CREATE>NUL 2>&1
IF NOT EXIST "Q:\EFI\Microsoft\Boot\BCD" ECHO &&ECHO BCD MISSING&&PAUSE&&GOTO:THETOP
ECHO SAVING BOOT-MEDIA...&&CALL:TITLECARD_NML
ECHO "%%SYSTEMDRIVE%%\$\$HAZZAM.CMD">"%APPLYDIR_BOOT%\WINDOWS\SYSTEM32\STARTNET.CMD"
DISM /CAPTURE-IMAGE /IMAGEFILE:"Q:\BOOT.WIM" /CAPTUREDIR:"%CAPTUREDIR_BOOT%" /NAME:NAME /CheckIntegrity /Verify /Bootable
COPY /Y "%PROG_FOLDER%\$ETTINGS.PRO" "\\?\S:\$">NUL 2>&1
COPY /Y "%PROG_FOLDER%\$haZZam.CMD" "\\?\S:\$">NUL 2>&1
ECHO UNMOUNTING EFI...&&CALL:TITLECARD_NML
IF EXIST "Z:\" CALL:VDISK_DETACH>NUL 2>&1
CALL:EFI_UNMOUNT>NUL 2>&1
IF EXIST "%TEMP%\$haZZam" RD /S /Q "\\?\%TEMP%\$haZZam">NUL 2>&1
IF EXIST "%TEMP%\SYS" RD /S /Q "\\?\%TEMP%\SYS">NUL 2>&1
IF EXIST "%TEMP%\DISK_TYPE" DEL /Q /F "%TEMP%\DISK_TYPE">NUL 2>&1
IF EXIST "%SCRATCHDIR_BOOT%" DISM /cleanup-MountPoints>NUL 2>&1
IF EXIST "%SCRATCHDIR_BOOT%" RD /S /Q "\\?\%SCRATCHDIR_BOOT%">NUL 2>&1
IF "%PROG_MODE%"=="RAMDISK" CALL:HOME_AUTO>NUL 2>&1
IF NOT "%PROG_MODE%"=="RAMDISK" CALL:REASSIGN_LETTER>NUL 2>&1
CALL:EFI_UNMOUNT>NUL 2>&1
IF "%TARGET_SLOT_$ETUP%"=="COPY" ECHO COPYING VHDX...&&COPY /Y "\\?\%IMAGE_FOLDER%\%VHDX_SOURCE_$ETUP%" "%LAST_LETTER%:\$\1.VHDX">NUL 2>&1
IF "%CAME_FROM%"=="$ETUP" ECHO &&SET CAME_FROM=
CALL:PAD_LINE&&ECHO                           Boot-Creator Finish&&CALL:PAD_LINE
EXIT /B
:BOOTWIM_INDEX
IF EXIST "%IMAGEFILE_BOOT%" Dism /Get-ImageInfo /ImageFile:"%IMAGEFILE_BOOT%" /Index:3>%TEMP%\WIMINFO
IF EXIST "%IMAGEFILE_BOOT%" FOR /F "tokens=5 skip=5 delims= " %%a in (%TEMP%\WIMINFO) DO (IF "%%a"=="Setup" SET BOOTWIM_INDEX=3&GOTO:WIM_ESCAPE)
IF EXIST "%IMAGEFILE_BOOT%" Dism /Get-ImageInfo /ImageFile:"%IMAGEFILE_BOOT%" /Index:2>%TEMP%\WIMINFO
IF EXIST "%IMAGEFILE_BOOT%" FOR /F "tokens=5 skip=5 delims= " %%a in (%TEMP%\WIMINFO) DO (IF "%%a"=="Setup" SET BOOTWIM_INDEX=2&GOTO:WIM_ESCAPE)
IF EXIST "%IMAGEFILE_BOOT%" Dism /Get-ImageInfo /ImageFile:"%IMAGEFILE_BOOT%" /Index:1>%TEMP%\WIMINFO
IF EXIST "%IMAGEFILE_BOOT%" FOR /F "tokens=5 skip=5 delims= " %%a in (%TEMP%\WIMINFO) DO (IF "%%a"=="Setup" SET BOOTWIM_INDEX=1&GOTO:WIM_ESCAPE)
:WIM_ESCAPE
IF NOT DEFINED BOOTWIM_INDEX SET BOOTWIM_INDEX=1
DEL /Q /F "%TEMP%\WIMINFO"
EXIT /B
::_TAG
REM FILEMGR_FILEMGR_FILEMGR_FILEMGR_FILEMGR_FILEMGR_FILEMGR_FILEMGR_FILEMGR_
REM FILEMGR_FILEMGR_FILEMGR_FILEMGR_FILEMGR_FILEMGR_FILEMGR_FILEMGR_FILEMGR_
:FILEMGR_START
REM FILEMGR_FILEMGR_FILEMGR_FILEMGR_FILEMGR_FILEMGR_FILEMGR_FILEMGR_FILEMGR_
REM FILEMGR_FILEMGR_FILEMGR_FILEMGR_FILEMGR_FILEMGR_FILEMGR_FILEMGR_FILEMGR_
@ECHO OFF&&IF NOT DEFINED COLOR_SLOT SET CLRTMP=%RANDOM%%RANDOM%&&SET "CLRTMP=!CLRTMP:~5,5!"&&SET "CLRTMP=!CLRTMP:~1,1!"&&CALL COLOR %CLRTMP%
CLS&&TITLE  [%CD%\] $-h-@-Z-Z-@-m^^! A native command shell Windows image deployment tool.&&IF DEFINED COLOR_SLOT COLOR %COLOR_SLOT%
IF DEFINED PROG_OPER CALL:TITLECARD_NML
CALL:PAD_LINE&&ECHO                              File Manager&&CALL:PAD_LINE
IF NOT DEFINED FILEMGR_SOURCE SET "FILEMGR_SOURCE=%PROG_SOURCE%"&&SET "FILEMGR_TARGET=%PROG_TARGET%"
ECHO  [SOURCE[%FILEMGR_SOURCE%] [TARGET[%FILEMGR_TARGET%]&&CALL:PAD_LINE
ECHO   CURRENTLY IN [%FILEMGR_SOURCE%]:
IF DEFINED PROG_OPER SET LIST_FMT=NUMERAL&&SET "LIST_DIR=%FILEMGR_SOURCE%\*.*"&&CALL:FILE_LIST&&CALL:PAD_LINE
IF NOT DEFINED PROG_OPER SET LIST_FMT=PLAIN&&SET "LIST_DIR=%FILEMGR_SOURCE%\*.*"&&CALL:FILE_LIST&&CALL:PAD_LINE
IF NOT DEFINED PROG_OPER ECHO     {O}pen  {C}opy  {M}ove  {D}upe  {R}Rename  {Z}Delete  {N}ew&&CALL:PAD_LINE
IF NOT DEFINED PROG_OPER ECHO    {X}plore {S}wap-SRC/TGT {T}arget-Set   {#}TakeOwn {*}SymLink&&CALL:PAD_LINE
IF DEFINED PROG_OPER ECHO                  Enter File # To [%PROG_OPER%] {/}Type&&CALL:PAD_LINE
ECHO                Press (Enter) to Return to Previous Menu
CALL:MENU_SELECT&&IF DEFINED PROG_OPER CALL:FILE_LIST>NUL
IF "%PROG_OPER%"=="ASSIGN_MACRO" IF NOT DEFINED SELECT SET PROG_OPER=&&GOTO:$ETTINGS_START
IF NOT DEFINED PROG_OPER IF NOT DEFINED SELECT GOTO:PROG_MAIN
IF DEFINED PROG_OPER IF NOT DEFINED SELECT SET PROG_OPER=
IF DEFINED SELECT CALL:FILEMGR_FINISH
GOTO:FILEMGR_START
:FILEMGR_FINISH
IF "%PROG_SOURCE%\%SELECT%"=="%PROG_SOURCE%\" EXIT /B
IF "%SELECT%"=="." SET PROG_OPER=FOLDER_DOWN
IF "%SELECT%"==".." SET PROG_OPER=FOLDER_UP
IF "%SELECT%"=="C" SET PROG_OPER=FILEMGR_COPY&&EXIT /B
IF "%SELECT%"=="D" SET PROG_OPER=FILEMGR_DUPE&&EXIT /B
IF "%SELECT%"=="O" SET PROG_OPER=FILEMGR_OPEN&&EXIT /B
IF "%SELECT%"=="M" SET PROG_OPER=FILEMGR_MOVE&&EXIT /B
IF "%SELECT%"=="N" SET PROG_OPER=FILEMGR_NEW
IF "%SELECT%"=="X" SET PROG_OPER=FILEMGR_EXPLORE
IF "%SELECT%"=="R" SET PROG_OPER=FILEMGR_RENAME&&EXIT /B
IF "%SELECT%"=="S" CALL:FILEMGR_SWAP&&EXIT /B
IF "%SELECT%"=="T" SET PROG_OPER=TGT_SET
IF "%SELECT%"=="*" SET PROG_OPER=FILEMGR_SYMLINK&&EXIT /B
IF "%SELECT%"=="#" SET PROG_OPER=FILEMGR_TAKEOWN&&EXIT /B
IF "%SELECT%"=="Z" SET PROG_OPER=FILEMGR_DELETE&&EXIT /B
REM FIXES GLITCH IF FILE OR FOLDER NAMED "C,D,O,M,R,Z". NEEDS TO BE 1ST
FOR %%a in (C D O M R Z #) DO (IF DEFINED PROG_OPER IF "%SELECT%"=="%%a" EXIT /B)
REM FIXES GLITCH IF FILE OR FOLDER NAMED "C,D,O,M,R,Z". NEEDS TO BE 1ST
IF "%PROG_OPER%"=="FILEMGR_DUPE" IF NOT EXIST "%FILEMGR_SOURCE%\%SELECT%" EXIT /B
IF "%PROG_OPER%"=="FILEMGR_SYMLINK" IF NOT EXIST "%FILEMGR_SOURCE%\%SELECT%" EXIT /B
IF "%PROG_OPER%"=="FILEMGR_TAKEOWN" IF NOT EXIST "%FILEMGR_SOURCE%\%SELECT%" EXIT /B
IF "%PROG_OPER%"=="ASSIGN_MACRO" IF NOT EXIST "%FILEMGR_SOURCE%\%SELECT%" EXIT /B
IF "%PROG_OPER%"=="FILEMGR_COPY" IF NOT EXIST "%FILEMGR_SOURCE%\%SELECT%" EXIT /B
IF "%PROG_OPER%"=="FILEMGR_DELETE" IF NOT EXIST "%FILEMGR_SOURCE%\%SELECT%" EXIT /B
IF "%PROG_OPER%"=="FILEMGR_MOVE" IF NOT EXIST "%FILEMGR_SOURCE%\%SELECT%" EXIT /B
IF "%PROG_OPER%"=="FILEMGR_OPEN" IF NOT EXIST "%FILEMGR_SOURCE%\%SELECT%" EXIT /B
IF "%PROG_OPER%"=="FILEMGR_RENAME" IF NOT EXIST "%FILEMGR_SOURCE%\%SELECT%" EXIT /B
IF "%PROG_OPER%"=="FILEMGR_SYMLINK" IF "%FILEMGR_SOURCE%"=="%FILEMGR_TARGET%" ECHO SOURCE/TARGET ARE THE SAME..&&SET PROG_OPER=&&PAUSE&&EXIT /B
IF "%PROG_OPER%"=="FILEMGR_COPY" IF "%FILEMGR_SOURCE%"=="%FILEMGR_TARGET%" ECHO SOURCE/TARGET ARE THE SAME..&&SET PROG_OPER=&&PAUSE&&EXIT /B
IF "%PROG_OPER%"=="FILEMGR_MOVE" IF "%FILEMGR_SOURCE%"=="%FILEMGR_TARGET%" ECHO SOURCE/TARGET ARE THE SAME..&&SET PROG_OPER=&&PAUSE&&EXIT /B
IF "%PROG_OPER%"=="FILEMGR_EXPLORE" ECHO.ENTER ANY PATH&&ECHO (CANNOT END IN "\")&&FOR %%G in (A B C D E F G H I J K L M N O P Q R S T U V W X Y Z) DO (IF EXIST "%%G:\" ECHO [%%G:])
IF "%PROG_OPER%"=="FILEMGR_EXPLORE" CALL:MENU_SELECT
IF "%PROG_OPER%"=="FILEMGR_EXPLORE" IF EXIST "%SELECT%\" SET "FILEMGR_SOURCE=%SELECT%"
IF "%PROG_OPER%"=="FILEMGR_TAKEOWN" IF EXIST "%FILEMGR_SOURCE%\%SELECT%\" TAKEOWN /F "%FILEMGR_SOURCE%\%SELECT%" /R /D Y
IF "%PROG_OPER%"=="FILEMGR_TAKEOWN" IF EXIST "%FILEMGR_SOURCE%\%SELECT%\" ICACLS "%FILEMGR_SOURCE%\%SELECT%\*" /grant %USERNAME%:F /T >NUL 2>&1
IF "%PROG_OPER%"=="FILEMGR_TAKEOWN" IF EXIST "%FILEMGR_SOURCE%\%SELECT%\" PAUSE
IF "%PROG_OPER%"=="FILEMGR_TAKEOWN" IF NOT EXIST "%FILEMGR_SOURCE%\%SELECT%\" TAKEOWN /F "%FILEMGR_SOURCE%\%SELECT%"
IF "%PROG_OPER%"=="FILEMGR_TAKEOWN" IF NOT EXIST "%FILEMGR_SOURCE%\%SELECT%\" ICACLS "%FILEMGR_SOURCE%\%SELECT%" /grant %USERNAME%:F >NUL 2>&1
IF "%PROG_OPER%"=="FILEMGR_TAKEOWN" IF NOT EXIST "%FILEMGR_SOURCE%\%SELECT%\" PAUSE
IF "%PROG_OPER%"=="FILEMGR_SYMLINK" IF EXIST "%FILEMGR_SOURCE%\%SELECT%\" MKLINK /J "%FILEMGR_TARGET%\%SELECT%" "%FILEMGR_SOURCE%\%SELECT%"&&PAUSE
IF "%PROG_OPER%"=="FILEMGR_SYMLINK" IF NOT EXIST "%FILEMGR_SOURCE%\%SELECT%\" MKLINK "%FILEMGR_TARGET%\%SELECT%" "%FILEMGR_SOURCE%\%SELECT%"&&PAUSE
IF "%PROG_OPER%"=="FOLDER_DOWN" CALL SET "FILEMGR_SOURCE=%%FILEMGR_SOURCE_%FILEMGR_SOURCE_#%%%"&&CALL SET /A FILEMGR_SOURCE_#+=1
IF "%PROG_OPER%"=="FOLDER_UP" CALL SET "FILEMGR_SOURCE=%%FILEMGR_SOURCE_%FILEMGR_SOURCE_#%%%"&&CALL SET /A FILEMGR_SOURCE_#-=1
IF "%PROG_OPER%"=="FILEMGR_DELETE" IF NOT EXIST "%FILEMGR_SOURCE%\%SELECT%\" DEL /Q /F "\\?\%FILEMGR_SOURCE%\%SELECT%"
IF "%PROG_OPER%"=="FILEMGR_DELETE" IF EXIST "%FILEMGR_SOURCE%\%SELECT%\" RD /S /Q "\\?\%FILEMGR_SOURCE%\%SELECT%">NUL 2>&1
IF "%PROG_OPER%"=="ASSIGN_MACRO" CALL SET "MACRO_%MACRO_SLOT%=%FILEMGR_SOURCE%\%SELECT%"&&SET PROG_OPER=&&GOTO:$ETTINGS_START
IF "%PROG_OPER%"=="FILEMGR_OPEN" IF NOT "%SELECT%"=="$haZZam.cmd" IF NOT EXIST "%FILEMGR_SOURCE%\%SELECT%\" "%FILEMGR_SOURCE%\%SELECT%"
IF "%PROG_OPER%"=="FILEMGR_OPEN" IF EXIST "%FILEMGR_SOURCE%\%SELECT%\" SET "FILEMGR_LAST=%FILEMGR_SOURCE%"&&CALL SET /A FILEMGR_SOURCE_#+=1&&CALL SET "FILEMGR_SOURCE_%FILEMGR_SOURCE_#%=%FILEMGR_SOURCE%"&&CALL SET "FILEMGR_SOURCE=%FILEMGR_SOURCE%\%SELECT%"
IF "%PROG_OPER%"=="FILEMGR_COPY" IF NOT EXIST "%FILEMGR_SOURCE%\%SELECT%\" XCOPY "%FILEMGR_SOURCE%\%SELECT%" "%FILEMGR_TARGET%\" /C /Y
IF "%PROG_OPER%"=="FILEMGR_COPY" IF EXIST "%FILEMGR_SOURCE%\%SELECT%\" XCOPY "%FILEMGR_SOURCE%\%SELECT%" "%FILEMGR_TARGET%\%SELECT%\" /E /C /I /Y
IF "%PROG_OPER%"=="FILEMGR_DUPE" IF NOT EXIST "%FILEMGR_SOURCE%\%SELECT%\" XCOPY "%FILEMGR_SOURCE%\%SELECT%" "%FILEMGR_SOURCE%\Copy_%SELECT%\" /C /Y
IF "%PROG_OPER%"=="FILEMGR_DUPE" IF EXIST "%FILEMGR_SOURCE%\%SELECT%\" XCOPY "%FILEMGR_SOURCE%\%SELECT%" "%FILEMGR_SOURCE%\Copy_%SELECT%\" /E /C /I /Y
IF "%PROG_OPER%"=="FILEMGR_MOVE" IF NOT EXIST "%FILEMGR_SOURCE%\%SELECT%\" MOVE /Y "%FILEMGR_SOURCE%\%SELECT%" "%FILEMGR_TARGET%\"
IF "%PROG_OPER%"=="FILEMGR_MOVE" IF EXIST "%FILEMGR_SOURCE%\%SELECT%\" XCOPY "%FILEMGR_SOURCE%\%SELECT%" "%FILEMGR_TARGET%\%SELECT%\" /E /C /I /Y
IF "%PROG_OPER%"=="FILEMGR_MOVE" IF EXIST "%FILEMGR_SOURCE%\%SELECT%\" RD /S /Q "\\?\%FILEMGR_SOURCE%\%SELECT%">NUL 2>&1
IF "%PROG_OPER%"=="FILEMGR_NEW" ECHO. {1}Folder&&ECHO. {2}File&&CALL:MENU_SELECT
IF "%PROG_OPER%"=="FILEMGR_NEW" IF "%SELECT%"=="1" CALL SET NEW_TYPE=FOLDER&&ECHO. New FOLDER Name?&&CALL:MENU_SELECT_ANY
IF "%PROG_OPER%"=="FILEMGR_NEW" IF "%NEW_TYPE%"=="FOLDER" SET NEW_TYPE=&&MD "%FILEMGR_SOURCE%\%SELECT%">NUL 2>&1
IF "%PROG_OPER%"=="FILEMGR_NEW" IF "%SELECT%"=="2" CALL SET NEW_TYPE=FILE&&ECHO. New FILE Name?&&CALL:MENU_SELECT_ANY
IF "%PROG_OPER%"=="FILEMGR_NEW" IF "%NEW_TYPE%"=="FILE" SET NEW_TYPE=&&ECHO.>"%FILEMGR_SOURCE%\%SELECT%"
IF "%PROG_OPER%"=="FILEMGR_RENAME" SET OLD_NAME=%SELECT%&&ECHO.&&ECHO NEW NAME?&&SET NEW_NAME=&&SET /P "NEW_NAME=$>>"
IF "%PROG_OPER%"=="FILEMGR_RENAME" IF DEFINED NEW_NAME REN "%FILEMGR_SOURCE%\%OLD_NAME%" "%NEW_NAME%">NUL 2>&1
IF "%PROG_OPER%"=="TGT_SET" SET "FILEMGR_TARGET=%FILEMGR_SOURCE%"
IF DEFINED PROG_OPER SET PROG_OPER=
EXIT /B
:FILEMGR_SWAP
IF NOT EXIST "%FILEMGR_SOURCE%" EXIT /B
IF NOT EXIST "%FILEMGR_TARGET%" EXIT /B
REM SET STAND-IN VARS
SET FILEMGR_SOURCE_TMP=%FILEMGR_SOURCE%
SET FILEMGR_TARGET_TMP=%FILEMGR_TARGET%
REM SET REAL VARS
SET FILEMGR_SOURCE=%FILEMGR_TARGET_TMP%
SET FILEMGR_TARGET=%FILEMGR_SOURCE_TMP%
EXIT /B
::_TAG
REM MAKER_MAKER_MAKER_MAKER_MAKER_MAKER_MAKER_MAKER_MAKER_MAKER_MAKER_
REM MAKER_MAKER_MAKER_MAKER_MAKER_MAKER_MAKER_MAKER_MAKER_MAKER_MAKER_
:MAKER_START
REM MAKER_MAKER_MAKER_MAKER_MAKER_MAKER_MAKER_MAKER_MAKER_MAKER_MAKER_
REM MAKER_MAKER_MAKER_MAKER_MAKER_MAKER_MAKER_MAKER_MAKER_MAKER_MAKER_
@ECHO OFF&&CALL:SETS_HANDLER&&CALL:FOLDER_LOCATE&&CALL:OBJ_EXIST&&CALL:IMAGE_EXIST
IF NOT DEFINED COLOR_SLOT SET CLRTMP=%RANDOM%%RANDOM%&&SET "CLRTMP=!CLRTMP:~5,5!"&&SET "CLRTMP=!CLRTMP:~1,1!"&&CALL COLOR %CLRTMP%
CLS&&TITLE  [%CD%\] $-h-@-Z-Z-@-m^^! A native command shell Windows image deployment tool.&&IF DEFINED COLOR_SLOT COLOR %COLOR_SLOT%
IF DEFINED PROG_OPER CALL:TITLECARD_NML
CALL:PAD_LINE&&ECHO                          $PK Package Creator&&CALL:PAD_LINE
IF NOT DEFINED MAKER_SLOT SET MAKER_SLOT=1
IF NOT DEFINED PACK_COMPRESS SET PACK_COMPRESS=FAST
FOR %%a in (PackName PackType PackTag PackDesc REG_KEY REG_VAL RUN_MOD REG_DAT) DO (CALL SET "%%a=NULL")
IF EXIST "%MAKER_FOLDER%\PACKAGE.$HZ" FOR /F "eol=- TOKENS=1-2 delims==" %%a in (%MAKER_FOLDER%\PACKAGE.$HZ) DO (IF NOT "%%a"=="   " SET "%%a=%%b")
IF NOT "%REG_KEY%"=="NULL" IF NOT "%REG_VAL%"=="NULL" IF NOT "%RUN_MOD%"=="NULL" IF NOT "%REG_DAT%"=="NULL" SET PACK_COND=ENABLED
IF "%REG_KEY%"=="NULL" SET PACK_COND=DISABLED
IF "%REG_VAL%"=="NULL" SET PACK_COND=DISABLED
IF "%RUN_MOD%"=="NULL" SET PACK_COND=DISABLED
IF "%REG_DAT%"=="NULL" SET PACK_COND=DISABLED
IF NOT "%REG_VAL%"=="NULL" IF NOT "%RUN_MOD%"=="NULL" IF NOT "%REG_DAT%"=="NULL" SET PACK_COND=ENABLED
IF NOT DEFINED PROG_OPER IF "%PACK_COND%"=="ENABLED" ECHO  [Name[%PackName%] [Type[%PackType%] [Tag[%PackTag%] [X-LVL[%PACK_COMPRESS%] [PMT[%PACK_COND%]&&CALL:PAD_LINE
IF NOT DEFINED PROG_OPER IF "%PACK_COND%"=="DISABLED" ECHO  [Name[%PackName%] [Type[%PackType%] [Tag[%PackTag%] [X-LVL[%PACK_COMPRESS%]&&CALL:PAD_LINE
IF NOT DEFINED PROG_OPER ECHO  [Desc]: %PackDesc%&&CALL:PAD_LINE
IF NOT DEFINED PROG_OPER IF "%PACK_COND%"=="ENABLED" ECHO   PERMIT IF: [%REG_KEY% %REG_VAL%] [%RUN_MOD%] [%REG_DAT%]&&CALL:PAD_LINE
IF NOT DEFINED PROG_OPER SET "LIST_DIR=%MAKER_FOLDER%\*.*"&&SET LIST_FMT=PLAIN&&ECHO   PACKAGE CONTENTS:&&CALL:FILE_LIST&&CALL:PAD_LINE
IF "%PROG_OPER%"=="MAKER_RESTORE" SET "LIST_DIR=%PACK_FOLDER%\*.$PK"&&SET LIST_FMT=NUMERAL&&ECHO   AVAILABLE $PK'S:&&CALL:FILE_LIST&&CALL:PAD_LINE
IF NOT DEFINED PROG_OPER IF NOT DEFINED PackType ECHO  {X}PROJECT[%MAKER_SLOT%] {R}estore {N}ew Template {E}xport-Drivers {*}Examples&&CALL:PAD_LINE
IF NOT DEFINED PROG_OPER IF "%PackType%"=="NULL" ECHO  {X}PROJECT[%MAKER_SLOT%] {R}estore {N}ew Template {E}xport-Drivers {*}Examples&&CALL:PAD_LINE
IF NOT DEFINED PROG_OPER IF "%PackType%"=="DRIVER" ECHO  {X}PROJECT[%MAKER_SLOT%]   {V}iew/Edit  {Z}Compression  {I}nspect-System&&CALL:PAD_LINE
IF NOT DEFINED PROG_OPER IF "%PackType%"=="DRIVER" ECHO      {C}reate  {R}estore  {N}ew Template  {E}xport-Drivers {P}ermit&&CALL:PAD_LINE
IF NOT DEFINED PROG_OPER IF "%PackType%"=="SCRIPTED" ECHO  {X}PROJECT[%MAKER_SLOT%]  {V}iew/Edit  {Z}Compression  {P}ermit&&CALL:PAD_LINE
IF NOT DEFINED PROG_OPER IF "%PackType%"=="SCRIPTED" ECHO         {C}reate    {R}estore    {N}ew Template    {*}Examples&&CALL:PAD_LINE
IF NOT DEFINED PROG_OPER IF "%PackType%"=="STORAGE" ECHO  {X}PROJECT[%MAKER_SLOT%]      {V}iew/Edit  {Z}Compression  {P}ermit&&CALL:PAD_LINE
IF NOT DEFINED PROG_OPER IF "%PackType%"=="STORAGE" ECHO        {C}reate   {R}estore   {N}ew Template   {*}Examples&&CALL:PAD_LINE
IF DEFINED PROG_OPER ECHO                  Enter File # To [%PROG_OPER%] {/}Type&&CALL:PAD_LINE
ECHO                Press (Enter) to Return to Previous Menu
CALL:MENU_SELECT&&IF DEFINED PROG_OPER CALL:FILE_LIST>NUL
IF NOT DEFINED PROG_OPER IF NOT DEFINED SELECT GOTO:PROG_MAIN
IF DEFINED PROG_OPER IF NOT DEFINED SELECT SET PROG_OPER=
IF "%SELECT%"=="C" SET PROG_OPER=MAKER_CREATE
IF "%SELECT%"=="E" IF "%PackType%"=="NULL" SET PROG_OPER=MAKER_EXPORT
IF "%SELECT%"=="E" IF "%PackType%"=="DRIVER" SET PROG_OPER=MAKER_EXPORT
IF "%SELECT%"=="*" SET PROG_OPER=MAKER_EXAMPLE
IF "%SELECT%"=="I" SET PROG_OPER=MAKER_INSPECT
IF "%SELECT%"=="N" SET PROG_OPER=MAKER_TEMPLATE
IF "%SELECT%"=="R" SET PROG_OPER=MAKER_RESTORE&&GOTO:MAKER_START
IF "%SELECT%"=="P" CALL:PACK_COND
IF "%SELECT%"=="X" CALL:MAKER_SLOT
IF "%SELECT%"=="Z" CALL:PACK_COMPRESS
IF "%SELECT%"=="V" SET "EDIT_SETUP=1"&&SET "EDIT_MANIFEST=1"&&SET "EDIT_README=1"&&SET "EDIT_CUSTOM="&&CALL:MAKER_EDITOR
IF "%PROG_OPER%"=="MAKER_RESTORE" IF NOT DEFINED SELECT SET PROG_OPER=&&GOTO:MAKER_START
IF "%PROG_OPER%"=="MAKER_RESTORE" IF NOT EXIST "%PACK_FOLDER%\%SELECT%" GOTO:MAKER_START
IF DEFINED PROG_OPER SET "SCRATCHDIR_MAKER=%PROG_SOURCE%\Scratch"
IF DEFINED PROG_OPER IF EXIST "%SCRATCHDIR_MAKER%" DISM /cleanup-MountPoints>NUL 2>&1
IF DEFINED PROG_OPER IF EXIST "%SCRATCHDIR_MAKER%" RD /S /Q "%SCRATCHDIR_MAKER%">NUL 2>&1
IF "%PROG_OPER%"=="MAKER_CREATE" CALL:MAKER_CREATE
IF "%PROG_OPER%"=="MAKER_EXAMPLE" SET EXAMPLE_MODE=CREATE&&CALL:PACKEX_MENU_START
IF "%PROG_OPER%"=="MAKER_EXPORT" SET PackType=DRIVER&&IF "%PackName%"=="NULL" SET PackName=DRIVER_%RANDOM%
IF "%PROG_OPER%"=="MAKER_EXPORT" IF NOT EXIST "%MAKER_FOLDER%" MD "%MAKER_FOLDER%">NUL 2>&1
IF "%PROG_OPER%"=="MAKER_EXPORT" DISM /ONLINE /EXPORT-DRIVER /destination:"%MAKER_FOLDER%"&&CALL:PACK_MANIFEST&&CALL:PAD_LINE&&PAUSE
IF "%PROG_OPER%"=="MAKER_INSPECT" IF "%PackType%"=="DRIVER" DISM /ONLINE /GET-DRIVERS&&CALL:PAD_LINE&&PAUSE
IF "%PROG_OPER%"=="MAKER_RESTORE" ECHO [Project[%MAKER_SLOT%] FOLDER WILL BE CLEARED&&ECHO.PRESS(Z)TO PROCEED&&SET PROMPT_SET=PJ_CLEAR&&CALL:PROMPT_SET
IF "%PROG_OPER%"=="MAKER_RESTORE" IF NOT "%PJ_CLEAR%"=="Z" SET PROG_OPER=&&GOTO:MAKER_START
IF "%PROG_OPER%"=="MAKER_RESTORE" IF NOT EXIST "%SCRATCHDIR_MAKER%" MD "%SCRATCHDIR_MAKER%">NUL 2>&1
IF "%PROG_OPER%"=="MAKER_RESTORE" DISM /APPLY-IMAGE /IMAGEFILE:"%PACK_FOLDER%\%SELECT%" /INDEX:2 /APPLYDIR:"%SCRATCHDIR_MAKER%">NUL 2>&1
IF "%PROG_OPER%"=="MAKER_RESTORE" FOR %%a in (PackName PackType PackDesc PackTag REG_KEY REG_VAL RUN_MOD REG_DAT) DO (CALL SET "%%a=NULL")
IF "%PROG_OPER%"=="MAKER_RESTORE" IF EXIST "%SCRATCHDIR_MAKER%\PACKAGE.$HZ" FOR /F "eol=- TOKENS=1-2 delims==" %%a in (%SCRATCHDIR_MAKER%\PACKAGE.$HZ) DO (IF NOT "%%a"=="   " SET "%%a=%%b")
IF "%PROG_OPER%"=="MAKER_RESTORE" FOR %%a in (PackName PackType PackDesc PackTag REG_KEY REG_VAL RUN_MOD REG_DAT) DO (IF NOT DEFINED %%a CALL SET "%%a=NULL")
IF "%PROG_OPER%"=="MAKER_RESTORE" IF NOT EXIST "%SCRATCHDIR_MAKER%\PACKAGE.$HZ" ECHO PACKAGE %PackName% IS DEFUNCT&&SET PACK_DEFUNCT=1&&PAUSE&&GOTO:MAKER_START
IF "%PROG_OPER%"=="MAKER_RESTORE" IF EXIST "%MAKER_FOLDER%" RD /S /Q "%MAKER_FOLDER%">NUL 2>&1
IF "%PROG_OPER%"=="MAKER_RESTORE" IF NOT EXIST "%MAKER_FOLDER%" MD "%MAKER_FOLDER%">NUL 2>&1
IF "%PROG_OPER%"=="MAKER_RESTORE" MOVE /Y "%SCRATCHDIR_MAKER%\PACKAGE.$HZ" "%MAKER_FOLDER%">NUL 2>&1
IF "%PROG_OPER%"=="MAKER_RESTORE" DISM /APPLY-IMAGE /IMAGEFILE:"%PACK_FOLDER%\%SELECT%" /INDEX:1 /APPLYDIR:"%MAKER_FOLDER%"
IF "%PROG_OPER%"=="MAKER_TEMPLATE" CALL:PACK_TEMPLATE
IF DEFINED PROG_OPER IF EXIST "%SCRATCHDIR_MAKER%" DISM /cleanup-MountPoints>NUL 2>&1
IF DEFINED PROG_OPER IF EXIST "%SCRATCHDIR_MAKER%" RD /S /Q "\\?\%SCRATCHDIR_MAKER%" >NUL 2>&1
IF DEFINED PROG_OPER SET PROG_OPER=
GOTO:MAKER_START
:MAKER_CREATE
CALL:PAD_LINE&&ECHO.                       *Package-Create* START&&CALL:PAD_LINE
SET "SCRATCHDIR_MAKER=%PROG_SOURCE%\Scratch"
IF EXIST "%SCRATCHDIR_MAKER%" DISM /cleanup-MountPoints>NUL 2>&1
IF EXIST "%SCRATCHDIR_MAKER%" RD /S /Q "%SCRATCHDIR_MAKER%">NUL 2>&1
IF NOT EXIST "%MAKER_FOLDER%\*.*" ECHO.Project%MAKER_SLOT% is empty&&PAUSE&&EXIT /B
IF NOT DEFINED PackName ECHO.PackName is Empty&&PAUSE&&EXIT /B
IF NOT DEFINED PackType ECHO.PackType is Empty&&PAUSE&&EXIT /B
IF NOT EXIST "%SCRATCHDIR_MAKER%" MD "%SCRATCHDIR_MAKER%">NUL 2>&1
MOVE /Y "%MAKER_FOLDER%\PACKAGE.$HZ" "%SCRATCHDIR_MAKER%">NUL 2>&1
ECHO.                         *Creating Package*
DISM /CAPTURE-IMAGE /CAPTUREDIR:"%MAKER_FOLDER%" /IMAGEFILE:"%PACK_FOLDER%\%PackName%.$PK" /COMPRESS:%PACK_COMPRESS% /NAME:"%PackName%" /CheckIntegrity /Verify
DISM /APPEND-IMAGE /IMAGEFILE:"%PACK_FOLDER%\%PackName%.$PK" /CAPTUREDIR:"%SCRATCHDIR_MAKER%" /NAME:"%PackName%" /Description:$haZZam^^! /CheckIntegrity /Verify>NUL 2>&1
MOVE /Y "%SCRATCHDIR_MAKER%\PACKAGE.$HZ" "%MAKER_FOLDER%">NUL 2>&1
IF EXIST "%SCRATCHDIR_MAKER%" DISM /cleanup-MountPoints>NUL 2>&1
IF EXIST "%SCRATCHDIR_MAKER%" RD /S /Q "\\?\%SCRATCHDIR_MAKER%" >NUL 2>&1
CALL:PAD_LINE&&ECHO.                       *Package-Create* END&&CALL:PAD_LINE
IF DEFINED PROG_OPER SET PROG_OPER=
EXIT /B
:MAKER_SLOT
SET /A MAKER_SLOT+=1
IF NOT DEFINED MAKER_SLOT SET MAKER_SLOT=1
IF "%MAKER_SLOT%" GEQ "6" SET MAKER_SLOT=1
SET "MAKER_FOLDER=%PROG_SOURCE%\Project%MAKER_SLOT%"
EXIT /B
:PACK_COMPRESS
SET SELECT=
IF NOT DEFINED PAK_XXX SET PAK_XXX=1
SET /A PAK_XXX+=1
IF "%PAK_XXX%" GEQ "4" SET PAK_XXX=1
IF "%PAK_XXX%"=="1" SET PACK_COMPRESS=FAST
IF "%PAK_XXX%"=="2" SET PACK_COMPRESS=MAX
IF "%PAK_XXX%"=="3" SET PACK_COMPRESS=NONE
EXIT /B
:PACK_COND
CALL ECHO INPUT REG-KEY&&ECHO (CASE SENSITIVE^^!)&&CALL:MENU_SELECT_ANY
CALL SET "REG_KEY=%SELECT%"
IF NOT DEFINED REG_KEY SET REG_VAL=&&SET RUN_MOD=&&SET REG_DAT=&&CALL:PACK_MANIFEST&&EXIT /B
CALL ECHO INPUT REG-VALUE&&ECHO (CASE SENSITIVE^^!)&&CALL:MENU_SELECT_ANY
CALL SET "REG_VAL=%SELECT%"
IF NOT DEFINED REG_VAL EXIT /B
CALL REG QUERY "%REG_KEY%" /V "%REG_VAL%" >$HZ.TXT
SET COL1=&&IF EXIST $HZ.TXT FOR /F "TOKENS=* DELIMS=" %%1 in ($HZ.TXT) DO (SET COL1=%%1)
CALL ECHO [%COL1%]&&DEL $HZ.TXT>NUL 2>&1
CALL ECHO INPUT REG-VALUE TARGET DATA&&ECHO (CASE SENSITIVE^^!)&&CALL:MENU_SELECT_ANY
CALL SET "REG_DAT=%SELECT%"
ECHO PERMIT INSTALL IF DATA&&ECHO {1}MATCH&&ECHO {2}DOES NOT MATCH&&CALL:MENU_SELECT
IF NOT DEFINED SELECT SET "RUN_MOD=EQU"
IF "%SELECT%"=="1" SET "RUN_MOD=EQU"
IF "%SELECT%"=="2" SET "RUN_MOD=NEQ"
CALL:PACK_MANIFEST
EXIT /B
:MAKER_EDITOR
IF DEFINED EDIT_SETUP IF EXIST "%MAKER_FOLDER%\PACKAGE.CMD" START NOTEPAD.EXE "%MAKER_FOLDER%\PACKAGE.CMD"
IF DEFINED EDIT_MANIFEST IF EXIST "%MAKER_FOLDER%\PACKAGE.$HZ" START NOTEPAD.EXE "%MAKER_FOLDER%\PACKAGE.$HZ"
IF DEFINED EDIT_README IF EXIST "%MAKER_FOLDER%\README.TXT" START NOTEPAD.EXE "%MAKER_FOLDER%\README.TXT"
IF DEFINED EDIT_CUSTOM IF EXIST "%MAKER_FOLDER%\%EDIT_CUSTOM%" START NOTEPAD.EXE "%MAKER_FOLDER%\%EDIT_CUSTOM%"
SET EDIT_SETUP=&&SET EDIT_MANIFEST=&&SET EDIT_README=&&SET EDIT_CUSTOM=
EXIT /B
:PACK_TEMPLATE
ECHO FOLDER[Project%MAKER_SLOT%] WILL BE CLEARED&&ECHO.PRESS{Z}TO PROCEED&&CALL:MENU_SELECT
IF NOT "%SELECT%"=="Z" EXIT /B
FOR %%a in (PackName PackType PackDesc PackTag REG_KEY REG_VAL RUN_MOD REG_DAT) DO (CALL SET "%%a=")
ECHO Type of Pack?&&ECHO. {1}SCRIPTED&&ECHO. {2}DRIVER&&ECHO. {3}STORAGE&&CALL:MENU_SELECT
IF "%SELECT%"=="1" SET PackType=SCRIPTED
IF "%SELECT%"=="2" SET PackType=DRIVER
IF "%SELECT%"=="3" SET PackType=STORAGE
IF NOT DEFINED PackType EXIT /B
ECHO Name of Pack?&&CALL SET "PROMPT_SET=PackName"&&CALL:PROMPT_SET_ANY
IF NOT DEFINED PackName EXIT /B
DISM /cleanup-MountPoints>NUL 2>&1
ECHO Description?&&CALL SET "PROMPT_SET=PackDesc"&&CALL:PROMPT_SET_ANY
IF EXIST "%MAKER_FOLDER%" RD /S /Q "%MAKER_FOLDER%">NUL 2>&1
IF NOT EXIST "%MAKER_FOLDER%" MD "%MAKER_FOLDER%">NUL 2>&1
ECHO.>"%MAKER_FOLDER%\PACKAGE.$HZ"&&CALL:PACK_MANIFEST
IF "%PackType%"=="SCRIPTED" CALL:PACK_VARS&&CALL:PACK_END
EXIT /B
:PAK_LOAD
FOR %%a in (PackName PackType PackDesc PackTag REG_KEY REG_VAL RUN_MOD REG_DAT) DO (CALL SET %%a=NULL)
IF EXIST "%MAKER_FOLDER%\PACKAGE.$HZ" COPY /Y "%MAKER_FOLDER%\PACKAGE.$HZ" "%TEMP%\0002"&&FOR /F "eol=- TOKENS=1-2 delims==" %%a in (%TEMP%\0002) DO (IF NOT "%%a"=="   " SET "%%a=%%b")
DEL /Q /F "%TEMP%\0002">NUL 2>&1
EXIT /B
:PACK_SAVE
MOVE /Y "%MAKER_FOLDER%\PACKAGE.$HZ" "%TEMP%\0002"&&FOR /F "eol=- TOKENS=1-2 delims==" %%a in (%TEMP%\0002) DO (CALL ECHO %%a=%%%%a%%>>"%MAKER_FOLDER%\PACKAGE.$HZ")
DEL /Q /F "%TEMP%\0002">NUL 2>&1
EXIT /B
:PACK_MANIFEST
FOR %%a in (PackName PackType PackDesc PackTag REG_KEY REG_VAL RUN_MOD REG_DAT) DO (IF NOT DEFINED %%a CALL SET %%a=NULL)
(
ECHO ----------[Package Manifest]---------=
ECHO.PackName=%PackName%
ECHO.PackType=%PackType%
ECHO.PackDesc=%PackDesc%
ECHO.PackTag=%PackTag%
ECHO.REG_KEY=%REG_KEY%
ECHO.REG_VAL=%REG_VAL%
ECHO.RUN_MOD=%RUN_MOD%
ECHO.REG_DAT=%REG_DAT%
ECHO.Created=%date% %time%
ECHO ------------[END OF FILE]------------=
)>"%MAKER_FOLDER%\PACKAGE.$HZ"
EXIT /B
:PACK_VARS
ECHO;:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::>>"%MAKER_FOLDER%\PACKAGE.CMD"
ECHO;::THE REGISTRY/FILES ARE NORMAL DURING SETUPCOMPLETE,RUNONCE,^& LISTMGR ::>>"%MAKER_FOLDER%\PACKAGE.CMD"
ECHO;::         DURING THE IMAGE-APPLY THEY ARE EXTERNALLY MOUNTED          ::>>"%MAKER_FOLDER%\PACKAGE.CMD"
ECHO;::  IMAGE-APPLY=OFFLINE, SETUP-COMPLETE=PRE-LOGON, RUN-ONCE=1ST LOGON  ::>>"%MAKER_FOLDER%\PACKAGE.CMD"
ECHO;:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::>>"%MAKER_FOLDER%\PACKAGE.CMD"
ECHO;:: THESE VARIABLES ARE BUILT-IN AND CAN HELP KEEP A SCRIPT CONSISTANT  ::>>"%MAKER_FOLDER%\PACKAGE.CMD"
ECHO;::      THROUGHOUT THE ENTIRE PROCESS AND FOR LIVE-PACKAGE APPLY       ::>>"%MAKER_FOLDER%\PACKAGE.CMD"
ECHO;:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::>>"%MAKER_FOLDER%\PACKAGE.CMD"
ECHO;::       FOLDER USER:        (%%USRTAR%%)       = ($:\Users\Default)     ::>>"%MAKER_FOLDER%\PACKAGE.CMD"
ECHO;::       FOLDER WINDOWS:     (%%WINTAR%%)       = ($:\Windows)           ::>>"%MAKER_FOLDER%\PACKAGE.CMD"
ECHO;::       FOLDER BASE:        (%%DRVTAR%%)       = ($:)                   ::>>"%MAKER_FOLDER%\PACKAGE.CMD"
ECHO;:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::>>"%MAKER_FOLDER%\PACKAGE.CMD"
ECHO;::       REG-HIVE USER:     (%%HIVE_USER%%)     = (HKCU)                 ::>>"%MAKER_FOLDER%\PACKAGE.CMD"
ECHO;::       REG-HIVE SOFTWARE: (%%HIVE_SOFTWARE%%) = (HKLM\SOFTWARE)        ::>>"%MAKER_FOLDER%\PACKAGE.CMD"
ECHO;::       REG-HIVE SYSTEM:   (%%HIVE_SYSTEM%%)   = (HKLM\SYSTEM)          ::>>"%MAKER_FOLDER%\PACKAGE.CMD"
ECHO;:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::>>"%MAKER_FOLDER%\PACKAGE.CMD"
ECHO;:::::::::::::::::::::::::::::::START:OF:PACK:::::::::::::::::::::::::::::>>"%MAKER_FOLDER%\PACKAGE.CMD"
ECHO;:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::>>"%MAKER_FOLDER%\PACKAGE.CMD"
ECHO.>>"%MAKER_FOLDER%\PACKAGE.CMD"
EXIT /B
:PACK_END
ECHO.>>"%MAKER_FOLDER%\PACKAGE.CMD"
ECHO;:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::>>"%MAKER_FOLDER%\PACKAGE.CMD"
ECHO;::::::::::::::::::::::::::::::::END:OF:PACK::::::::::::::::::::::::::::::>>"%MAKER_FOLDER%\PACKAGE.CMD"
ECHO;:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::>>"%MAKER_FOLDER%\PACKAGE.CMD"
EXIT /B
:PACK_CONFIG
SET PACK_ENT=
FOR /F "delims=" %%G in ('CMD.EXE /D /U /C ECHO %PACK_CONFIG%^| FIND /V ""') do (CALL SET /A PACK_ENT+=1&&SET "PACK_CFG=%%G"&&CALL:PACK_CONFIG_CNT)
EXIT /B
:PACK_CONFIG_CNT
SET "PACK_ENT_%PACK_ENT%=%PACK_CFG%"
EXIT /B
:PACKEX_MENU_START
@ECHO OFF&&IF NOT DEFINED COLOR_SLOT SET CLRTMP=%RANDOM%%RANDOM%&&SET "CLRTMP=!CLRTMP:~5,5!"&&SET "CLRTMP=!CLRTMP:~1,1!"&&CALL COLOR %CLRTMP%
TITLE  [%CD%\] $-h-@-Z-Z-@-m^^! A native command shell Windows image deployment tool&&CALL:PACKEX_MENU_DISPLAY&&IF DEFINED COLOR_SLOT COLOR %COLOR_SLOT%
IF "%EXAMPLE_MODE%"=="INSTANT" IF NOT DEFINED EXAMPLE_NOPROMPT SET "PROMPT_SET=PACKEX_BATCH"&&CALL:PROMPT_SET&&IF NOT DEFINED PACKEX_BATCH EXIT /B
IF "%EXAMPLE_MODE%"=="INSTANT" FOR %%a in (%PACKEX_BATCH%) DO (CALL SET EXAMPLE=%%a&&CALL:PACKEX_PROC)
IF "%EXAMPLE_MODE%"=="CREATE" SET PROMPT_SET=EXAMPLE&&CALL:PROMPT_SET&&IF NOT DEFINED EXAMPLE EXIT /B
IF "%EXAMPLE_MODE%"=="CREATE" ECHO [Project%MAKER_SLOT%] FOLDER WILL BE CLEARED&&ECHO.PRESS{Z}TO PROCEED&&SET "PROMPT_SET=CONFIRM"&&CALL:PROMPT_SET
IF "%EXAMPLE_MODE%"=="CREATE" IF NOT "%CONFIRM%"=="Z" EXIT /B
IF "%EXAMPLE_MODE%"=="CREATE" CALL:PACKEX_PROC
IF "%EXAMPLE_MODE%"=="INSTANT" SET "MAKER_FOLDER=%PROG_SOURCE%\Project%MAKER_SLOT%"
IF EXIST "%PROG_SOURCE%\SCRATCH" RD /S /Q "\\?\%PROG_SOURCE%\SCRATCH" >NUL 2>&1
SET EXAMPLE_MODE=&&SET EXAMPLE_NOPROMPT=
EXIT /B
:PACKEX_MENU_DISPLAY
CLS&&CALL:PAD_LINE&&ECHO.                      Example-Pack [%EXAMPLE_MODE%-MODE]&&CALL:PAD_LINE
ECHO                                {TASKS}&&CALL:PAD_LINE
IF "%EXAMPLE_MODE%"=="INSTANT" ECHO  {T1} End Task                                            (INSTANT)
IF "%EXAMPLE_MODE%"=="INSTANT" ECHO  {T2} List Accounts                                       (INSTANT)
IF "%EXAMPLE_MODE%"=="INSTANT" ECHO  {T3} Shutdown/Restart                                    (INSTANT)
IF "%EXAMPLE_MODE%"=="CREATE" CALL:PAD_LINE&&ECHO                             {MISC CONFIG}&&CALL:PAD_LINE
ECHO  {M1} Create Local User-Account                           (SCRIPTED)
ECHO  {M2} Create Local Admin-Account                          (SCRIPTED)
IF "%EXAMPLE_MODE%"=="CREATE" ECHO  {M3} Unattended Answer-File                              (SCRIPTED)
IF "%EXAMPLE_MODE%"=="CREATE" ECHO  {M4} Run Program Every Boot                              (SCRIPTED)
IF "%EXAMPLE_MODE%"=="CREATE" ECHO  {M5} Tasks-Enable                                        (SCRIPTED)
IF "%EXAMPLE_MODE%"=="CREATE" ECHO  {M6} Tasks-Disable                                       (SCRIPTED)
IF "%EXAMPLE_MODE%"=="CREATE" ECHO  {M7} Tasks-Delete                                        (SCRIPTED)
IF "%EXAMPLE_MODE%"=="CREATE" ECHO  {M8} Pagefile Disable                                    (SCRIPTED)
IF "%EXAMPLE_MODE%"=="CREATE" ECHO  {X1} Background Apps Disable                             (SCRIPTED)
IF "%EXAMPLE_MODE%"=="CREATE" ECHO  {X2} Wakelocks General Disable                           (SCRIPTED)
IF "%EXAMPLE_MODE%"=="CREATE" ECHO  {X3} Wakelocks Network Disable                           (SCRIPTED)
IF "%EXAMPLE_MODE%"=="CREATE" ECHO  {S1} WinLogon Verbose                                    (SCRIPTED)
IF "%EXAMPLE_MODE%"=="CREATE" ECHO  {S2} Setup+ Disable Hello                                (SCRIPTED)
IF "%EXAMPLE_MODE%"=="CREATE" ECHO  {S3} Setup+ Quicker Preparing...                         (SCRIPTED)
IF "%EXAMPLE_MODE%"=="CREATE" ECHO  {S4} RunOnce/Async+ Delay Desktop                        (SCRIPTED)
IF "%EXAMPLE_MODE%"=="CREATE" ECHO  {S5} VB-Script Execution Disable                         (SCRIPTED)
IF "%EXAMPLE_MODE%"=="CREATE" ECHO  {S6} LSA Strict Rules                                    (SCRIPTED)
IF "%EXAMPLE_MODE%"=="CREATE" ECHO  {S7} Import Firewall Rules.XML                           (SCRIPTED)
IF "%EXAMPLE_MODE%"=="CREATE" ECHO  {S8} Store Disable                                       (SCRIPTED)
IF "%EXAMPLE_MODE%"=="CREATE" ECHO  {S9} OneDrive Disable                                    (SCRIPTED)
IF "%EXAMPLE_MODE%"=="CREATE" ECHO  {S10} Cloud Content Disable                              (SCRIPTED)
IF "%EXAMPLE_MODE%"=="CREATE" ECHO  {S11} UAC Prompt Always                                  (SCRIPTED)
IF "%EXAMPLE_MODE%"=="CREATE" ECHO  {S12} NotificationCenter Disable                         (SCRIPTED)
IF "%EXAMPLE_MODE%"=="CREATE" ECHO  {S13} Disable Net Discovery                              (SCRIPTED)
IF "%EXAMPLE_MODE%"=="CREATE" ECHO  {S14} Bluetooth Advertising                              (SCRIPTED)
IF "%EXAMPLE_MODE%"=="CREATE" ECHO  {S15} Virt.Based Security Disable                        (SCRIPTED)
IF "%EXAMPLE_MODE%"=="CREATE" ECHO  {S16} Virt.Based Security Enable                         (SCRIPTED)
IF "%EXAMPLE_MODE%"=="CREATE" ECHO  {S17} Disable Explorer URL Access                        (SCRIPTED)
IF "%EXAMPLE_MODE%"=="CREATE" ECHO  {S18} Local Accounts Only                                (SCRIPTED)
IF "%EXAMPLE_MODE%"=="CREATE" ECHO  {S19} Taskmgr Prefs                                      (SCRIPTED)
IF "%EXAMPLE_MODE%"=="CREATE" ECHO  {S20} DCOM Disable (BREAKS STUFF)                        (SCRIPTED)
IF "%EXAMPLE_MODE%"=="CREATE" ECHO  {S21} DCOM Enable                                        (SCRIPTED)
IF "%EXAMPLE_MODE%"=="CREATE" ECHO  {N1} Prioritize Ethernet                                 (SCRIPTED)
IF "%EXAMPLE_MODE%"=="CREATE" ECHO  {N2} Prioritize WiFi                                     (SCRIPTED)
::IF "%EXAMPLE_MODE%"=="CREATE" ECHO  {V1} System/App Dark ColorMode                           (SCRIPTED)
CALL:PAD_LINE&&ECHO                               {DEBUGGING}&&CALL:PAD_LINE
ECHO  {DB1} DEBUG PAUSE                                        (SCRIPTED)
ECHO  {DB2} DEBUG ECHO-ON                                      (SCRIPTED)
ECHO  {DB3} DEBUG ECHO-OFF                                     (SCRIPTED)
IF "%EXAMPLE_MODE%"=="CREATE" CALL:PAD_LINE&&ECHO                                 {MISC}&&CALL:PAD_LINE
IF "%EXAMPLE_MODE%"=="CREATE" ECHO  {P1} Pack-Permit Demo
IF "%EXAMPLE_MODE%"=="CREATE" ECHO  {P2} MSI Installer Example                               (SCRIPTED)
CALL:PAD_LINE&&ECHO                Press (Enter) to Return to Previous Menu
EXIT /B
:PACKEX_PROC
CALL:MOUNT_INT
SET PASS=&&FOR %%a in (T1 T2 M1 M2 M3 M4 M5 M6 M7 M8 M9 M10 X1 X2 X3 X4 S1 S2 S3 S4 S5 S6 S7 S8 S9 S10 S11 S12 S13 S14 S15 S16 S17 S18 S19 S20 S21 V1 N1 N2 P1 P2 DB1 DB2 DB3) DO (IF "%%a"=="%EXAMPLE%" SET PASS=1)
IF NOT "%PASS%"=="1" EXIT /B
FOR %%a in (PackName PackType PackDesc PackTag REG_KEY REG_VAL RUN_MOD REG_DAT) DO (CALL SET "%%a=NULL")
IF "%EXAMPLE_MODE%"=="INSTANT" SET "MAKER_FOLDER=%PROG_SOURCE%\PROJECTX"
IF DEFINED MAKER_FOLDER RD /S /Q "%MAKER_FOLDER%">NUL 2>&1
IF NOT EXIST "%MAKER_FOLDER%" MD "%MAKER_FOLDER%">NUL 2>&1
CALL:PACK_VARS
IF "%EXAMPLE%"=="T1" CALL:PACKEX_TASKMGR_APP
IF "%EXAMPLE%"=="T2" CALL:PACKEX_QUERY_USERS
IF "%EXAMPLE%"=="T3" CALL:PACKEX_SHUTDOWN
IF "%EXAMPLE%"=="M1" CALL:PACKEX_NEWUSER
IF "%EXAMPLE%"=="M2" CALL:PACKEX_NEWADMIN
IF "%EXAMPLE%"=="M3" CALL:PACKEX_ANSWER_FILE
IF "%EXAMPLE%"=="M4" CALL:PACKEX_STARTUP_USER
IF "%EXAMPLE%"=="M5" CALL:PACKEX_TASK_ENABLE
IF "%EXAMPLE%"=="M6" CALL:PACKEX_TASK_DISABLE
IF "%EXAMPLE%"=="M7" CALL:PACKEX_TASK_DELETE
IF "%EXAMPLE%"=="M8" CALL:PACKEX_PAGEFILE
IF "%EXAMPLE%"=="X1" CALL:PACKEX_BACKGROUND_APPS
IF "%EXAMPLE%"=="X2" CALL:PACKEX_WAKELOCKS
IF "%EXAMPLE%"=="X3" CALL:PACKEX_WAKELOCKS_NET
IF "%EXAMPLE%"=="S1" CALL:PACKEX_WINLOGON_VERBOSE
IF "%EXAMPLE%"=="S2" CALL:PACKEX_DISABLE_HELLO
IF "%EXAMPLE%"=="S3" CALL:PACKEX_SHORTEN_PREPARING
IF "%EXAMPLE%"=="S4" CALL:PACKEX_DELAY_DESKTOP
IF "%EXAMPLE%"=="S5" CALL:PACKEX_SCRIPTHOST
IF "%EXAMPLE%"=="S6" CALL:PACKEX_LSA_STRICT
IF "%EXAMPLE%"=="S7" CALL:PACKEX_FIREWALL_IMPORT
IF "%EXAMPLE%"=="S8" CALL:PACKEX_STORE
IF "%EXAMPLE%"=="S9" CALL:PACKEX_ONEDRIVE
IF "%EXAMPLE%"=="S10" CALL:PACKEX_CLOUD_CONTENT
IF "%EXAMPLE%"=="S11" CALL:PACKEX_UAC
IF "%EXAMPLE%"=="S12" CALL:PACKEX_NOTIFICATION_CENTER
IF "%EXAMPLE%"=="S13" CALL:PACKEX_LLT_DISCOVERY_RSPNDR
IF "%EXAMPLE%"=="S14" CALL:PACKEX_BT_VISIBILITY
IF "%EXAMPLE%"=="S15" CALL:PACKEX_VBS_DISABLE
IF "%EXAMPLE%"=="S16" CALL:PACKEX_VBS_ENABLE
IF "%EXAMPLE%"=="S17" CALL:EXPLORER_URL_ACCESS
IF "%EXAMPLE%"=="S18" CALL:PACKEX_LOCAL_ACCOUNT
IF "%EXAMPLE%"=="S19" CALL:PACKEX_TASKMGR_PREF
IF "%EXAMPLE%"=="S20" CALL:PACKEX_DCOM_DISABLE
IF "%EXAMPLE%"=="S21" CALL:PACKEX_DCOM_ENABLE
IF "%EXAMPLE%"=="DB1" CALL:PACKEX_PAUSE
IF "%EXAMPLE%"=="DB2" CALL:PACKEX_ECHO_ON
IF "%EXAMPLE%"=="DB3" CALL:PACKEX_ECHO_OFF
IF "%EXAMPLE%"=="N1" CALL:PACKEX_PRIORITIZE_ETHERNET
IF "%EXAMPLE%"=="N2" CALL:PACKEX_PRIORITIZE_WIFI
IF "%EXAMPLE%"=="P1" CALL:PACKEX_PACK_PERMIT_EXAMPLE
IF "%EXAMPLE%"=="P2" CALL:PACKEX_MSI_EXAMPLE
IF "%PackType%"=="SCRIPTED" CALL:PACK_END
CALL:PACK_MANIFEST>NUL 2>&1
IF "%EXAMPLE_MODE%"=="INSTANT" CALL:MAKER_CREATE>NUL 2>&1
IF "%EXAMPLE_MODE%"=="INSTANT" SET "IMAGEFILE_PACK=%PACK_FOLDER%\%PackName%.$PK"&&SET "CAME_FROM=PACKMGR"&&CALL:PACK_INSTALL>NUL 2>&1
IF "%EXAMPLE_MODE%"=="INSTANT" SET "MAKER_FOLDER=%PROG_SOURCE%\Project%MAKER_SLOT%"&&DEL /Q /F "%PACK_FOLDER%\%PackName%.$PK">NUL 2>&1
IF EXIST "%PROG_SOURCE%\PROJECTX" RD /S /Q "%PROG_SOURCE%\PROJECTX">NUL 2>&1
IF "%EXAMPLE_MODE%"=="CREATE" IF DEFINED EXAMPLE CALL:MAKER_EDITOR
IF EXIST "%PROG_SOURCE%\ScratchPack" DISM /cleanup-MountPoints>NUL 2>&1
IF EXIST "%PROG_SOURCE%\ScratchPack" ATTRIB -R -S -H "%PROG_SOURCE%\ScratchPack" /S /D /L>NUL 2>&1
IF EXIST "%PROG_SOURCE%\ScratchPack" RD /S /Q "\\?\%PROG_SOURCE%\ScratchPack">NUL 2>&1
SET EXAMPLE=
EXIT /B
:PACKEX_TASKMGR_APP
CLS&&ECHO.
CALL:PAD_LINE&&ECHO                         *The Task Reaper*&&CALL:PAD_LINE
TASKLIST /FO LIST>TSK.TXT
SET TSK_CNT=&&FOR /F "TOKENS=1-9 DELIMS=: " %%a in (TSK.TXT) DO (
IF "%%a"=="Image" CALL SET TSK_NAME=%%c%%d%%e%%f%%g
IF "%%a"=="PID" CALL SET TSK_PID=%%b
IF "%%a"=="Mem" CALL SET TSK_MEM=%%c&&CALL:TASK_QUERY)
IF EXIST TSK.TXT DEL TSK.TXT>NUL
CALL:PAD_LINE&&ECHO                         *END WHICH TASK{#}?*&&CALL:PAD_LINE&&CALL:MENU_SELECT
IF NOT DEFINED SELECT EXIT /B
CALL TASKKILL /F /IM %%TSK_CNT_%SELECT%%%
PAUSE
EXIT /B
:TASK_QUERY
CALL SET /A TSK_CNT+=1
CALL ECHO {%TSK_CNT%}	[%TSK_NAME%]	[PID][%TSK_PID%]	[MEM][%TSK_MEM%] KB&&CALL SET TSK_CNT_%TSK_CNT%=%TSK_NAME%
EXIT /B
:PACKEX_QUERY_USERS
CLS&&CALL:PAD_LINE&&ECHO                      *USER ACCOUNT ENUMERATION*&&CALL:PAD_LINE
NET USER>USER.TXT
FOR /F "tokens=1-9 skip=4 delims= " %%a IN (USER.TXT) DO (
IF NOT "%%a"=="The" IF NOT "%%a"=="" NET USER %%a&&CALL:PAD_LINE
IF NOT "%%a"=="The" IF NOT "%%b"=="" NET USER %%b&&CALL:PAD_LINE
IF NOT "%%a"=="The" IF NOT "%%c"=="" NET USER %%c&&CALL:PAD_LINE
IF NOT "%%a"=="The" IF NOT "%%d"=="" NET USER %%d&&CALL:PAD_LINE
IF NOT "%%a"=="The" IF NOT "%%e"=="" NET USER %%e&&CALL:PAD_LINE
IF NOT "%%a"=="The" IF NOT "%%f"=="" NET USER %%f&&CALL:PAD_LINE
IF NOT "%%a"=="The" IF NOT "%%g"=="" NET USER %%g&&CALL:PAD_LINE
IF NOT "%%a"=="The" IF NOT "%%h"=="" NET USER %%h&&CALL:PAD_LINE
IF NOT "%%a"=="The" IF NOT "%%i"=="" NET USER %%i&&CALL:PAD_LINE)
DEL /Q /F USER.TXT>NUL
ECHO                   *END OF USER ACCOUNT ENUMERATION*&&CALL:PAD_LINE
PAUSE
EXIT /B
:PACKEX_NEWUSER
SET PackType=SCRIPTED&&SET PackName=Add_User&&SET PackDesc=Creates Local User-Account
ECHO       - USERNAME? -
ECHO     - ENTER USERNAME -
ECHO   - 0-9 A-Z - NO SPACES -
ECHO      (ENTER) TO CLEAR
SET PROMPT_SET=NEWUSER1&&CALL:PROMPT_SET_ANY
IF NOT DEFINED NEWUSER1 EXIT /B
ECHO;Net User %NEWUSER1% /add>>"%MAKER_FOLDER%\PACKAGE.CMD"
ECHO;Net User %NEWUSER1% /passwordreq:No>>"%MAKER_FOLDER%\PACKAGE.CMD"
ECHO;Net User %NEWUSER1% /passwordchg:No>>"%MAKER_FOLDER%\PACKAGE.CMD"
ECHO;Net Accounts /maxpwage:unlimited>>"%MAKER_FOLDER%\PACKAGE.CMD"
ECHO;WMIC USERACCOUNT WHERE Name='%NEWUSER1%' SET PasswordExpires=FALSE>>"%MAKER_FOLDER%\PACKAGE.CMD"
EXIT /B
:PACKEX_NEWADMIN
SET PackType=SCRIPTED&&SET PackName=Add_Admin&&SET PackDesc=Creates Local Admin-Account
ECHO       - USERNAME? -
ECHO     - ENTER USERNAME -
ECHO   - 0-9 A-Z - NO SPACES -
ECHO      (ENTER) TO CLEAR
SET PROMPT_SET=NEWUSER1&&CALL:PROMPT_SET_ANY
IF NOT DEFINED NEWUSER1 EXIT /B
ECHO;Net User %NEWUSER1% /add>>"%MAKER_FOLDER%\PACKAGE.CMD"
ECHO;Net User %NEWUSER1% /passwordreq:No>>"%MAKER_FOLDER%\PACKAGE.CMD"
ECHO;Net User %NEWUSER1% /passwordchg:No>>"%MAKER_FOLDER%\PACKAGE.CMD"
ECHO;Net Accounts /maxpwage:unlimited>>"%MAKER_FOLDER%\PACKAGE.CMD"
ECHO;Net localgroup Administrators %NEWUSER1% /add>>"%MAKER_FOLDER%\PACKAGE.CMD"
ECHO;WMIC USERACCOUNT WHERE Name='%NEWUSER1%' SET PasswordExpires=FALSE>>"%MAKER_FOLDER%\PACKAGE.CMD"
EXIT /B
:PACKEX_STARTUP_USER
SET PackType=SCRIPTED&&SET PackName=UserLogon_Run&&SET PackDesc=Run a Program or batch at User Login
ECHO;Reg.exe add "%%HIVE_SOFTWARE%%\Microsoft\Windows\CurrentVersion\Run" /v "RunUser" /t REG_EXPAND_SZ /d "%%PROGRAMDATA%%\USERLOGON.CMD" /f>>"%MAKER_FOLDER%\PACKAGE.CMD"
ECHO;ECHO;EXPLORER.EXE C:\WINDOWS\SYSTEM32\NOTEPAD.EXE^>"%%PROGRAMDATA%%\USERLOGON.CMD">>"%MAKER_FOLDER%\PACKAGE.CMD"
EXIT /B
:PACKEX_TASK_ENABLE
SET PackType=SCRIPTED&&SET PackName=TASK_ENABLE&&SET PackDesc=Pack Version,add to a SETUPCOMPLETE.LST/RUNONCE.LST
ECHO;::TASKS ENABLE>>"%MAKER_FOLDER%\PACKAGE.CMD"
ECHO;::CREATE AND PLACE TASKS.LST IN PROJECT FOLDER, THEN CREATE PACK>>"%MAKER_FOLDER%\PACKAGE.CMD"
ECHO;::ADD TO A SETUPCOMPLETE.LST/RUNONCE.LST,FIXES ACCESS DENIED ISSUE>>"%MAKER_FOLDER%\PACKAGE.CMD"
ECHO;FOR /F "TOKENS=1 SKIP=1 DELIMS={}" %%%%1 in (TASKS.LST) DO (SCHTASKS /CHANGE /TN "\%%%%1" /ENABLE /F) >>"%MAKER_FOLDER%\PACKAGE.CMD"
EXIT /B
:PACKEX_TASK_DISABLE
SET PackType=SCRIPTED&&SET PackName=TASK_DISABLE&&SET PackDesc=Pack Version,add to a SETUPCOMPLETE.LST/RUNONCE.LST
ECHO;::TASKS DISABLE>>"%MAKER_FOLDER%\PACKAGE.CMD"
ECHO;::CREATE AND PLACE TASKS.LST IN PROJECT FOLDER, THEN CREATE PACK>>"%MAKER_FOLDER%\PACKAGE.CMD"
ECHO;::ADD TO A SETUPCOMPLETE.LST/RUNONCE.LST,FIXES ACCESS DENIED ISSUE>>"%MAKER_FOLDER%\PACKAGE.CMD"
ECHO;FOR /F "TOKENS=1 SKIP=1 DELIMS={}" %%%%1 in (TASKS.LST) DO (SCHTASKS /CHANGE /TN "\%%%%1" /DISABLE /F) >>"%MAKER_FOLDER%\PACKAGE.CMD"
EXIT /B
:PACKEX_TASK_DELETE
SET PackType=SCRIPTED&&SET PackName=TASK_DELETE&&SET PackDesc=Pack Version,ADD TO A SETUPCOMPLETE.LST/RUNONCE.LST
ECHO;::TASKS DELETE>>"%MAKER_FOLDER%\PACKAGE.CMD"
ECHO;::CREATE AND PLACE TASKS.LST IN PROJECT FOLDER, THEN CREATE PACK>>"%MAKER_FOLDER%\PACKAGE.CMD"
ECHO;::ADD TO A SETUPCOMPLETE.LST/RUNONCE.LST,FIXES ACCESS DENIED ISSUE>>"%MAKER_FOLDER%\PACKAGE.CMD"
ECHO;FOR /F "TOKENS=1 SKIP=1 DELIMS={}" %%%%1 in (TASKS.LST) DO (SCHTASKS /DELETE /TN "\%%%%1" /F) >>"%MAKER_FOLDER%\PACKAGE.CMD"
EXIT /B
:PACKEX_PAGEFILE
SET PackType=SCRIPTED&&SET PackName=Pagefile&&SET PackDesc=Disable Pagefile
ECHO;::LIVE COMMAND, NEEDS TO BE APPLIED LIVE, SETUPCOMPLETE, OR RUNONCE>>"%MAKER_FOLDER%\PACKAGE.CMD"
ECHO;Reg.exe add "%%HIVE_SYSTEM%%\ControlSet001\Control\Session Manager\Memory Management" /v "ClearPageFileAtShutdown" /t REG_DWORD /d "1" /f>>"%MAKER_FOLDER%\PACKAGE.CMD"
ECHO;Reg.exe add "%%HIVE_SYSTEM%%\ControlSet001\Control\Session Manager\Memory Management" /v "DisablePagingExecutive" /t REG_DWORD /d "1" /f>>"%MAKER_FOLDER%\PACKAGE.CMD"
ECHO;Reg.exe add "%%HIVE_SYSTEM%%\ControlSet001\Control\Session Manager\Memory Management" /v "PagingFiles" /t REG_MULTI_SZ /d "" /f>>"%MAKER_FOLDER%\PACKAGE.CMD"
ECHO;Reg.exe add "%%HIVE_SYSTEM%%\ControlSet001\Control\Session Manager\Memory Management" /v "ExistingPageFiles" /t REG_MULTI_SZ /d "" /f>>"%MAKER_FOLDER%\PACKAGE.CMD"
ECHO;powercfg.exe -h off>>"%MAKER_FOLDER%\PACKAGE.CMD"
ECHO;wmic computerSYSTEM where name="%%computername%%" set AutomaticManagedPagefile=False>>"%MAKER_FOLDER%\PACKAGE.CMD"
ECHO;wmic pagefileset where name="C:\\pagefile.sys" delete>>"%MAKER_FOLDER%\PACKAGE.CMD"
ECHO;wmic pagefileset where name="D:\\pagefile.sys" delete>>"%MAKER_FOLDER%\PACKAGE.CMD"
ECHO;wmic pagefileset where name="E:\\pagefile.sys" delete>>"%MAKER_FOLDER%\PACKAGE.CMD"
ECHO;wmic pagefileset where name="F:\\pagefile.sys" delete>>"%MAKER_FOLDER%\PACKAGE.CMD"
ECHO;wmic pagefileset where name="G:\\pagefile.sys" delete>>"%MAKER_FOLDER%\PACKAGE.CMD"
ECHO;wmic pagefileset where name="H:\\pagefile.sys" delete>>"%MAKER_FOLDER%\PACKAGE.CMD"
ECHO;wmic pagefileset where name="N:\\pagefile.sys" delete>>"%MAKER_FOLDER%\PACKAGE.CMD"
EXIT /B
:PACKEX_FIREWALL_IMPORT
SET PackType=SCRIPTED&&SET PackName=Firewall_Import&&SET PackDesc=Import Windows Firewall Config .XML
ECHO;::LIVE COMMAND, NEEDS TO BE APPLIED LIVE, SETUPCOMPLETE, OR RUNONCE>>"%MAKER_FOLDER%\PACKAGE.CMD"
NETSH advfirewall EXPORT "%MAKER_FOLDER%\FirewallPolicy.wfw"
ECHO;NETSH advfirewall IMPORT "FirewallPolicy.wfw">>"%MAKER_FOLDER%\PACKAGE.CMD"
EXIT /B
:PACKEX_BACKGROUND_APPS
SET PackType=SCRIPTED&&SET PackName=BackgroundApps_Disable&&SET PackDesc=Disable Background Applications
ECHO;Reg.exe add "%%HIVE_USER%%\SOFTWARE\Microsoft\Windows\CurrentVersion\BackgroundAccessApplications" /v "GlobalUserDisabled" /t REG_DWORD /d "1" /f>>"%MAKER_FOLDER%\PACKAGE.CMD"
ECHO;Reg.exe add "%%HIVE_SOFTWARE%%\Policies\Microsoft\Edge" /v "BackgroundModeEnabled" /t REG_DWORD /d "0" /f>>"%MAKER_FOLDER%\PACKAGE.CMD"
EXIT /B
:PACKEX_WAKELOCKS_NET
SET PackType=SCRIPTED&&SET PackName=Wake_Net_Disable&&SET PackDesc=Disable Network Adapter Wakelocks
ECHO;Reg.exe add "%%HIVE_SYSTEM%%\ControlSet001\Control\Power\PowerSettings\F15576E8-98B7-4186-B944-EAFA664402D9\DefaultPowerSchemeValues\381b4222-f694-41f0-9685-ff5bb260df2e" /v "AcSettingIndex" /t REG_DWORD /d "0" /f>>"%MAKER_FOLDER%\PACKAGE.CMD"
ECHO;Reg.exe add "%%HIVE_SYSTEM%%\ControlSet001\Control\Power\PowerSettings\F15576E8-98B7-4186-B944-EAFA664402D9\DefaultPowerSchemeValues\381b4222-f694-41f0-9685-ff5bb260df2e" /v "DcSettingIndex" /t REG_DWORD /d "0" /f>>"%MAKER_FOLDER%\PACKAGE.CMD"
EXIT /B
:PACKEX_WAKELOCKS
SET PackType=SCRIPTED&&SET PackName=Wake_Disable&&SET PackDesc=Disable Wakelocks
ECHO;Reg.exe add "%%HIVE_SYSTEM%%\ControlSet001\Control\Power\PowerSettings\238C9FA8-0AAD-41ED-83F4-97BE242C8F20\bd3b718a-0680-4d9d-8ab2-e1d2b4ac806d\DefaultPowerSchemeValues\381b4222-f694-41f0-9685-ff5bb260df2e" /v "AcSettingIndex" /t REG_DWORD /d "0" /f>>"%MAKER_FOLDER%\PACKAGE.CMD"
ECHO;Reg.exe add "%%HIVE_SYSTEM%%\ControlSet001\Control\Power\PowerSettings\238C9FA8-0AAD-41ED-83F4-97BE242C8F20\bd3b718a-0680-4d9d-8ab2-e1d2b4ac806d\DefaultPowerSchemeValues\381b4222-f694-41f0-9685-ff5bb260df2e" /v "DcSettingIndex" /t REG_DWORD /d "0" /f>>"%MAKER_FOLDER%\PACKAGE.CMD"
EXIT /B
:PACKEX_LSA_STRICT
SET PackType=SCRIPTED&&SET PackName=LSA_Strict&&SET PackDesc=Strict Ruleset For Local Security Authentication
ECHO;Reg.exe add "%%HIVE_SYSTEM%%\ControlSet001\Control\Lsa" /v "LimitBlankPasswordUse" /t REG_DWORD /d "1" /f>>"%MAKER_FOLDER%\PACKAGE.CMD"
ECHO;Reg.exe add "%%HIVE_SYSTEM%%\ControlSet001\Control\LSA" /v "LsaCfgFlags " /t REG_DWORD /d "1" /f>>"%MAKER_FOLDER%\PACKAGE.CMD"
ECHO;Reg.exe add "%%HIVE_SYSTEM%%\ControlSet001\Control\Lsa" /v "LsaPid" /t REG_DWORD /d "632" /f>>"%MAKER_FOLDER%\PACKAGE.CMD"
ECHO;Reg.exe add "%%HIVE_SYSTEM%%\ControlSet001\Control\Lsa" /v "ProductType" /t REG_DWORD /d "125" /f>>"%MAKER_FOLDER%\PACKAGE.CMD"
ECHO;Reg.exe add "%%HIVE_SYSTEM%%\ControlSet001\Control\Lsa" /v "RunAsPPL" /t REG_DWORD /d "1" /f>>"%MAKER_FOLDER%\PACKAGE.CMD"
ECHO;Reg.exe add "%%HIVE_SYSTEM%%\ControlSet001\Control\Lsa" /v "SubmitControl" /t REG_DWORD /d "0" /f>>"%MAKER_FOLDER%\PACKAGE.CMD"
ECHO;Reg.exe add "%%HIVE_SYSTEM%%\ControlSet001\Control\Lsa" /v "disabledomaincreds" /t REG_DWORD /d "1" /f>>"%MAKER_FOLDER%\PACKAGE.CMD"
ECHO;Reg.exe add "%%HIVE_SYSTEM%%\ControlSet001\Control\Lsa" /v "everyoneincludesanonymous" /t REG_DWORD /d "0" /f>>"%MAKER_FOLDER%\PACKAGE.CMD"
ECHO;Reg.exe add "%%HIVE_SYSTEM%%\ControlSet001\Control\Lsa" /v "forceguest" /t REG_DWORD /d "0" /f>>"%MAKER_FOLDER%\PACKAGE.CMD"
ECHO;Reg.exe add "%%HIVE_SYSTEM%%\ControlSet001\Control\Lsa" /v "NoLmHash" /t REG_DWORD /d "1" /f>>"%MAKER_FOLDER%\PACKAGE.CMD"
ECHO;Reg.exe add "%%HIVE_SYSTEM%%\ControlSet001\Control\Lsa" /v "restrictanonymous" /t REG_DWORD /d "1" /f>>"%MAKER_FOLDER%\PACKAGE.CMD"
ECHO;Reg.exe add "%%HIVE_SYSTEM%%\ControlSet001\Control\Lsa" /v "restrictanonymoussam" /t REG_DWORD /d "1" /f>>"%MAKER_FOLDER%\PACKAGE.CMD"
ECHO;Reg.exe add "%%HIVE_SYSTEM%%\ControlSet001\Control\Lsa" /v "RestrictRemoteSAM" /t REG_SZ /d "O:BAG:BAD:(A;;RC;;;BA)" /f>>"%MAKER_FOLDER%\PACKAGE.CMD"
ECHO;Reg.exe add "%%HIVE_SYSTEM%%\ControlSet001\Control\Lsa\MSV1_0" /v "allownullsessionfallback" /t REG_DWORD /d "0" /f>>"%MAKER_FOLDER%\PACKAGE.CMD"
EXIT /B
:PACKEX_STORE
SET PackType=SCRIPTED&&SET PackName=Store_Disable&&SET PackDesc=Disable Store
ECHO;Reg.exe add "%%HIVE_SOFTWARE%%\Policies\Microsoft\WindowsStore" /v "RemoveWindowsStore" /t REG_DWORD /d "1" /f>>"%MAKER_FOLDER%\PACKAGE.CMD"
ECHO;Reg.exe add "%%HIVE_USER%%\SOFTWARE\Policies\Microsoft\Windows\Explorer" /v "NoUseStoreOpenWith" /t REG_DWORD /d "1" /f>>"%MAKER_FOLDER%\PACKAGE.CMD"
EXIT /B
:PACKEX_ONEDRIVE
SET PackType=SCRIPTED&&SET PackName=OneDrive_Disable&&SET PackDesc=Disable OneDrive
ECHO;Reg.exe add "%%HIVE_USER%%\SOFTWARE\Classes\CLSID\{018D5C66-4533-4307-9B53-224DE2ED1FE6}" /v "SYSTEM.IsPinnedToNameSpaceTree" /t REG_DWORD /d "0" /f>>"%MAKER_FOLDER%\PACKAGE.CMD"
ECHO;Reg.exe delete "%%HIVE_SYSTEM%%\ControlSet001\Services\OneSyncSvc" /f>>"%MAKER_FOLDER%\PACKAGE.CMD"
ECHO;Reg.exe add "%%HIVE_SYSTEM%%\ControlSet001\Services\OneSyncSvc" /v "ImagePath" /t REG_EXPAND_SZ /d "NUL" /f>>"%MAKER_FOLDER%\PACKAGE.CMD"
EXIT /B
:PACKEX_CLOUD_CONTENT
SET PackType=SCRIPTED&&SET PackName=Cloud_Disable&&SET PackDesc=Disable Cloud-Content
ECHO;Reg.exe add "%%HIVE_SOFTWARE%%\Policies\Microsoft\Windows\CloudContent" /ve /t REG_SZ /d "" /f>>"%MAKER_FOLDER%\PACKAGE.CMD"
ECHO;Reg.exe add "%%HIVE_SOFTWARE%%\Policies\Microsoft\Windows\CloudContent" /v "DisableWindowsConsumerFeatures" /t REG_DWORD /d "1" /f>>"%MAKER_FOLDER%\PACKAGE.CMD"
ECHO;Reg.exe add "%%HIVE_SOFTWARE%%\Policies\Microsoft\Windows\CloudContent" /v "DisableSoftLanding" /t REG_DWORD /d "1" /f>>"%MAKER_FOLDER%\PACKAGE.CMD"
ECHO;Reg.exe add "%%HIVE_SOFTWARE%%\Policies\Microsoft\Windows\CloudContent" /v "DisableWindowsSpotlightFeatures" /t REG_DWORD /d "1" /f>>"%MAKER_FOLDER%\PACKAGE.CMD"
EXIT /B
:PACKEX_UAC
SET PackType=SCRIPTED&&SET PackName=UAC_Prompt&&SET PackDesc=Enable UAC Always Prompt
ECHO;Reg.exe add "%%HIVE_SOFTWARE%%\Microsoft\Windows\CurrentVersion\Policies\SYSTEM" /v "ConsentPromptBehaviorAdmin" /t REG_DWORD /d "4" /f>>"%MAKER_FOLDER%\PACKAGE.CMD"
ECHO;Reg.exe add "%%HIVE_SOFTWARE%%\Microsoft\Windows\CurrentVersion\Policies\SYSTEM" /v "ConsentPromptBehaviorUser" /t REG_DWORD /d "1" /f>>"%MAKER_FOLDER%\PACKAGE.CMD"
ECHO;Reg.exe add "%%HIVE_SOFTWARE%%\Microsoft\Windows\CurrentVersion\Policies\SYSTEM" /v "ConsentPromptBehaviorAdmin" /t REG_DWORD /d "1" /f>>"%MAKER_FOLDER%\PACKAGE.CMD"
ECHO;Reg.exe add "%%HIVE_SOFTWARE%%\Microsoft\Windows\CurrentVersion\Policies\SYSTEM" /v "FilterAdministratorToken" /t REG_DWORD /d "1" /f>>"%MAKER_FOLDER%\PACKAGE.CMD"
EXIT /B
:PACKEX_NOTIFICATION_CENTER
SET PackType=SCRIPTED&&SET PackName=NCenter_Disable&&SET PackDesc=Disable Notification Center
ECHO;Reg.exe add "%%HIVE_USER%%\SOFTWARE\Policies\Microsoft\Windows\Explorer" /v "DisableNotificationCenter" /t REG_DWORD /d "1" /f>>"%MAKER_FOLDER%\PACKAGE.CMD"
EXIT /B
:PACKEX_BT_VISIBILITY
SET PackType=SCRIPTED&&SET PackName=BT_Visibility_Off&&SET PackDesc=Disable Bluetooth Advertising
ECHO;Reg.exe add "%%HIVE_SOFTWARE%%\Microsoft\PolicyManager\current\device\Bluetooth" /v "AllowAdvertising" /t REG_DWORD /d "0" /f>>"%MAKER_FOLDER%\PACKAGE.CMD"
ECHO;Reg.exe add "%%HIVE_SOFTWARE%%\Microsoft\PolicyManager\current\device\Browser" /v "AllowAddressBarDropdown" /t REG_DWORD /d "0" /f>>"%MAKER_FOLDER%\PACKAGE.CMD"
ECHO;Reg.exe add "%%HIVE_SOFTWARE%%\Microsoft\PolicyManager\current\device\SYSTEM" /v "AllowExperimentation" /t REG_DWORD /d "0" /f>>"%MAKER_FOLDER%\PACKAGE.CMD"
ECHO;Reg.exe add "%%HIVE_SOFTWARE%%\Microsoft\Windows\CurrentVersion\SmartGlass" /v "BluetoothPolicy" /t REG_DWORD /d "0" /f>>"%MAKER_FOLDER%\PACKAGE.CMD"
EXIT /B
:PACKEX_LLT_DISCOVERY_RSPNDR
SET PackType=SCRIPTED&&SET PackName=LLT_Disable&&SET PackDesc=Disable Link-Layer-Topology Discovery
ECHO;Reg.exe add "%%HIVE_SOFTWARE%%\Policies\Microsoft\Windows\LLTD" /v "EnableRspndr" /t REG_DWORD /d "0" /f>>"%MAKER_FOLDER%\PACKAGE.CMD"
ECHO;Reg.exe add "%%HIVE_SOFTWARE%%\Policies\Microsoft\Windows\LLTD" /v "AllowRspndrOnDomain" /t REG_DWORD /d "0" /f>>"%MAKER_FOLDER%\PACKAGE.CMD"
ECHO;Reg.exe add "%%HIVE_SOFTWARE%%\Policies\Microsoft\Windows\LLTD" /v "AllowRspndrOnPublicNet" /t REG_DWORD /d "0" /f>>"%MAKER_FOLDER%\PACKAGE.CMD"
ECHO;Reg.exe add "%%HIVE_SOFTWARE%%\Policies\Microsoft\Windows\LLTD" /v "ProhibitRspndrOnPrivateNet" /t REG_DWORD /d "0" /f>>"%MAKER_FOLDER%\PACKAGE.CMD"
EXIT /B
:PACKEX_VBS_ENABLE
SET PackType=SCRIPTED&&SET PackName=VBS_Enable&&SET PackDesc=Enable Virtualization Based Security
ECHO;Reg.exe add "%%HIVE_SYSTEM%%\ControlSet001\Control\DeviceGuard" /v "EnableVirtualizationBasedSecurity" /t REG_DWORD /d 1 /f>>"%MAKER_FOLDER%\PACKAGE.CMD"
ECHO;Reg.exe add "%%HIVE_SYSTEM%%\ControlSet001\Control\DeviceGuard" /v "RequirePlatformSecurityFeatures" /t REG_DWORD /d 1 /f>>"%MAKER_FOLDER%\PACKAGE.CMD"
ECHO;Reg.exe add "%%HIVE_SYSTEM%%\ControlSet001\Control\DeviceGuard" /v "Locked" /t REG_DWORD /d 0 /f>>"%MAKER_FOLDER%\PACKAGE.CMD"
ECHO;Reg.exe add "%%HIVE_SYSTEM%%\ControlSet001\Control\DeviceGuard\Scenarios\HypervisorEnforcedCodeIntegrity" /v "Enabled" /t REG_DWORD /d 1 /f>>"%MAKER_FOLDER%\PACKAGE.CMD"
ECHO;Reg.exe add "%%HIVE_SYSTEM%%\ControlSet001\Control\DeviceGuard\Scenarios\HypervisorEnforcedCodeIntegrity" /v "Locked" /t REG_DWORD /d 0 /f>>"%MAKER_FOLDER%\PACKAGE.CMD"
ECHO;Reg.exe add "%%HIVE_SYSTEM%%\ControlSet001\Control\LSA" /v "LsaCfgFlags " /t REG_DWORD /d "1" /f>>"%MAKER_FOLDER%\PACKAGE.CMD"
EXIT /B
:PACKEX_VBS_DISABLE
SET PackType=SCRIPTED&&SET PackName=VBS_Disable&&SET PackDesc=Disable Virtualization Based Security
ECHO;Reg.exe add "%%HIVE_SYSTEM%%\ControlSet001\Control\DeviceGuard" /v "EnableVirtualizationBasedSecurity" /t REG_DWORD /d 0 /f>>"%MAKER_FOLDER%\PACKAGE.CMD"
ECHO;Reg.exe add "%%HIVE_SYSTEM%%\ControlSet001\Control\DeviceGuard" /v "RequirePlatformSecurityFeatures" /t REG_DWORD /d 0 /f>>"%MAKER_FOLDER%\PACKAGE.CMD"
ECHO;Reg.exe add "%%HIVE_SYSTEM%%\ControlSet001\Control\DeviceGuard" /v "Locked" /t REG_DWORD /d 0 /f>>"%MAKER_FOLDER%\PACKAGE.CMD"
ECHO;Reg.exe add "%%HIVE_SYSTEM%%\ControlSet001\Control\DeviceGuard\Scenarios\HypervisorEnforcedCodeIntegrity" /v "Enabled" /t REG_DWORD /d 0 /f>>"%MAKER_FOLDER%\PACKAGE.CMD"
ECHO;Reg.exe add "%%HIVE_SYSTEM%%\ControlSet001\Control\DeviceGuard\Scenarios\HypervisorEnforcedCodeIntegrity" /v "Locked" /t REG_DWORD /d 0 /f>>"%MAKER_FOLDER%\PACKAGE.CMD"
ECHO;Reg.exe add "%%HIVE_SYSTEM%%\ControlSet001\Control\LSA" /v "LsaCfgFlags " /t REG_DWORD /d "2" /f>>"%MAKER_FOLDER%\PACKAGE.CMD"
EXIT /B
:PACKEX_DCOM_DISABLE
SET PackType=SCRIPTED&&SET PackName=DCOM_Disable&&SET PackDesc=Disable DCOM
ECHO;Reg.exe add "%%HIVE_SOFTWARE%%\Microsoft\Ole" /v "EnableDCOM" /t REG_SZ /d "N" /f>>"%MAKER_FOLDER%\PACKAGE.CMD"
EXIT /B
:PACKEX_DCOM_ENABLE
SET PackType=SCRIPTED&&SET PackName=DCOM_Disable&&SET PackDesc=Disable DCOM
ECHO;Reg.exe add "%%HIVE_SOFTWARE%%\Microsoft\Ole" /v "EnableDCOM" /t REG_SZ /d "Y" /f>>"%MAKER_FOLDER%\PACKAGE.CMD"
EXIT /B
:PACKEX_WINLOGON_VERBOSE
SET PackType=SCRIPTED&&SET PackName=Winlogon_Verbose&&SET PackDesc=High verbosity logon/logoff
ECHO;Reg.exe add "%%HIVE_SOFTWARE%%\Microsoft\Windows\CurrentVersion\Policies\SYSTEM" /v "VerboseStatus" /t REG_DWORD /d "1" /f>>"%MAKER_FOLDER%\PACKAGE.CMD"
EXIT /B
:PACKEX_DISABLE_HELLO
SET PackType=SCRIPTED&&SET PackName=Hello_Disable&&SET PackDesc=Disable creepy sentient logon hello -view notes
ECHO;::TIME-MANDATORY: NEEDS TO BE APPLIED DURING IMAGE-APPLY STAGE($PK LIST)>>"%MAKER_FOLDER%\PACKAGE.CMD"
ECHO;::SETUPCOMPLETE/RUNONCE IS TOO LATE>>"%MAKER_FOLDER%\PACKAGE.CMD"
ECHO;Reg.exe add "%%HIVE_SOFTWARE%%\Microsoft\Windows\CurrentVersion\Policies\SYSTEM" /v "EnableFirstLogonAnimation" /t REG_DWORD /d "0" /f>>"%MAKER_FOLDER%\PACKAGE.CMD"
EXIT /B
:PACKEX_SHORTEN_PREPARING
SET PackType=SCRIPTED&&SET PackName=Quicker_Preparing&&SET PackDesc=Shortens the spinning-circle preparing Windows bit -view notes
ECHO;::TIME-MANDATORY: NEEDS TO BE APPLIED DURING IMAGE-APPLY STAGE($PK LIST)>>"%MAKER_FOLDER%\PACKAGE.CMD"
ECHO;::SETUPCOMPLETE/RUNONCE IS TOO LATE>>"%MAKER_FOLDER%\PACKAGE.CMD"
ECHO;Reg.exe add "%%HIVE_SOFTWARE%%\Microsoft\Windows\CurrentVersion\Policies\SYSTEM" /v "DelayedDesktopSwitchTimeout" /t REG_DWORD /d 0 /f>>"%MAKER_FOLDER%\PACKAGE.CMD"
EXIT /B
:PACKEX_DELAY_DESKTOP
SET PackType=SCRIPTED&&SET PackName=Desktop_Delay_1stBoot&&SET PackDesc=Delay explorer.exe until RunOnce/ActiveSetup completes -view notes
ECHO;::TIME-MANDATORY: NEEDS TO BE APPLIED DURING IMAGE-APPLY STAGE($PK LIST)>>"%MAKER_FOLDER%\PACKAGE.CMD"
ECHO;::SETUPCOMPLETE/RUNONCE IS TOO LATE>>"%MAKER_FOLDER%\PACKAGE.CMD"
ECHO;Reg.exe add "%%HIVE_SOFTWARE%%\Microsoft\Windows\CurrentVersion\Explorer" /v "AsyncRunOnce" /t REG_DWORD /d "0" /f>>"%MAKER_FOLDER%\PACKAGE.CMD"
EXIT /B
:PACKEX_SCRIPTHOST
SET PackType=SCRIPTED&&SET PackName=VBS_Exec_Disable&&SET PackDesc=Disable Visual Basic Shell-Script Execution
ECHO;Reg.exe add "%%HIVE_SOFTWARE%%\Microsoft\Windows Script Host\Settings" /v "Enabled" /t REG_DWORD /d "0" /f>>"%MAKER_FOLDER%\PACKAGE.CMD"
ECHO;Reg.exe add "%%HIVE_SOFTWARE%%\Classes\PROTOCOLS\Handler\vbscript" /v "DISABLED_CLSID" /t REG_SZ /d "{3050F3B2-98B5-11CF-BB82-00AA00BDCE0B}" /f>>"%MAKER_FOLDER%\PACKAGE.CMD"
EXIT /B
:EXPLORER_URL_ACCESS
SET PackType=SCRIPTED&&SET PackName=ExplorerRestrictNet&&SET PackDesc=No Internet For Explorer.exe or driver Updates
ECHO;Reg.exe add "%%HIVE_USER%%\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\Explorer" /v "NoInternetOpenWith" /t REG_DWORD /d "1" /f>>"%MAKER_FOLDER%\PACKAGE.CMD"
ECHO;Reg.exe add "%%HIVE_USER%%\SOFTWARE\Policies\Microsoft\Assistance\Client\1.0" /v "NoOnlineAssist" /t REG_DWORD /d "1" /f>>"%MAKER_FOLDER%\PACKAGE.CMD"
ECHO;Reg.exe add "%%HIVE_SOFTWARE%%\Microsoft\Windows\CurrentVersion\DriverSearching" /v "SearchOrderConfig" /t REG_DWORD /d "0" /f>>"%MAKER_FOLDER%\PACKAGE.CMD"
EXIT /B
:PACKEX_LOCAL_ACCOUNT
SET PackType=SCRIPTED&&SET PackName=Online_Accounts_Disabled&&SET PackDesc=Only Allow Local Accounts to login
ECHO;Reg.exe add "%%HIVE_SOFTWARE%%\Microsoft\Windows\CurrentVersion\Policies\SYSTEM" /v "NoConnectedUser" /t REG_DWORD /d "3" /f>>"%MAKER_FOLDER%\PACKAGE.CMD"
EXIT /B
:PACKEX_PRIORITIZE_ETHERNET
SET PackType=SCRIPTED&&SET PackName=Prioritize_Ethernet&&SET PackDesc=Prioritize Ethernet Traffic Over Wi-Fi
ECHO;::LIVE COMMAND, NEEDS TO BE APPLIED LIVE, SETUPCOMPLETE, OR RUNONCE>>"%MAKER_FOLDER%\PACKAGE.CMD"
ECHO;NETSH interface ipv4 SET interface "Wi-Fi" metric=5 >>"%MAKER_FOLDER%\PACKAGE.CMD"
ECHO;NETSH interface ipv4 SET interface "Ethernet" metric=10 >>"%MAKER_FOLDER%\PACKAGE.CMD"
EXIT /B
:PACKEX_PRIORITIZE_WIFI
SET PackType=SCRIPTED&&SET PackName=Prioritize_WiFi&&SET PackDesc=Prioritize Wi-Fi Traffic Over Ethernet
ECHO;::LIVE COMMAND, NEEDS TO BE APPLIED LIVE, SETUPCOMPLETE, OR RUNONCE>>"%MAKER_FOLDER%\PACKAGE.CMD"
ECHO;NETSH interface ipv4 SET interface "Wi-Fi" metric=10 >>"%MAKER_FOLDER%\PACKAGE.CMD"
ECHO;NETSH interface ipv4 SET interface "Ethernet" metric=5 >>"%MAKER_FOLDER%\PACKAGE.CMD"
EXIT /B
:PACKEX_PAUSE
SET PackType=SCRIPTED&&SET PackName=Pause&&SET PackDesc=Place in PackageList, PAUSES EXECUTION
ECHO;PAUSE>>"%MAKER_FOLDER%\PACKAGE.CMD"
EXIT /B
:PACKEX_ECHO_OFF
SET PackType=SCRIPTED&&SET PackName=Echo_off&&SET PackDesc=Place in PackageList, Turns ECHO OFF
ECHO;@ECHO OFF>>"%MAKER_FOLDER%\PACKAGE.CMD"
EXIT /B
:PACKEX_ECHO_ON
SET PackType=SCRIPTED&&SET PackName=Echo_on&&SET PackDesc=Place in PackageList, Turns ECHO ON
ECHO;@ECHO ON>>"%MAKER_FOLDER%\PACKAGE.CMD"
EXIT /B
:PACKEX_TASKMGR_PREF
SET PackType=SCRIPTED&&SET PackName=TASKMGR_PREFS&&SET PackDesc=TASKMGR_PREFS
ECHO;::LIVE COMMAND, NEEDS TO BE APPLIED LIVE, SETUPCOMPLETE, OR RUNONCE>>"%MAKER_FOLDER%\PACKAGE.CMD"
Reg.exe EXPORT "%HIVE_USER%\Software\Microsoft\Windows\CurrentVersion\TaskManager" "%MAKER_FOLDER%\TASKMGR_PREF.REG"
ECHO;Reg.exe IMPORT TASK_PREF.REG>>"%MAKER_FOLDER%\PACKAGE.CMD"
EXIT /B
:PACKEX_COLOR_MODE_TOGGLE
SET PackType=SCRIPTED SET PACK_CFG_A=11&&SET PACK_CFG_B=00
ECHO {A}LIGHT&&ECHO {B}DARK&&CALL:MENU_SELECT
IF "%SELECT%"=="A" SET PACK_CONFIG=%PACK_CFG_A%&&SET PackName=Color_Light&&SET PackDesc=Use Light Mode
IF "%SELECT%"=="B" SET PACK_CONFIG=%PACK_CFG_B%&&SET PackName=Color_Dark&&SET PackDesc=Use Dark Mode
CALL:PACK_CONFIG
ECHO;Reg.exe add "%%HIVE_USER%%\SOFTWARE\Microsoft\Windows\CurrentVersion\Themes\Personalize" /v "AppsUseLightTheme" /t REG_DWORD /d "%PACK_ENT_1%" /f>>"%MAKER_FOLDER%\PACKAGE.CMD"
ECHO;Reg.exe add "%%HIVE_USER%%\SOFTWARE\Microsoft\Windows\CurrentVersion\Themes\Personalize" /v "SYSTEMUsesLightTheme" /t REG_DWORD /d "%PACK_ENT_2%" /f>>"%MAKER_FOLDER%\PACKAGE.CMD"
EXIT /B
:PACKEX_PACK_PERMIT_EXAMPLE
SET PackType=SCRIPTED&&SET "PackName=PACK_PERMIT_DEMO"&&SET "PackDesc=PACK PERMIT DEMO"&&SET "REG_KEY=%%HIVE_USER%%\TEST_KEY"&&SET "REG_VAL=TEST_VAL"&&SET "RUN_MOD=EQU"&&SET "REG_DAT=1"
ECHO CLOSE REGEDIT IF ALREADY OPEN. PRESS A KEY, REGEDIT WILL REOPEN @ KEY:HKCU\TEST_KEY.&&PAUSE
Reg.exe add "%HIVE_USER%\TEST_KEY" /v "TEST_VAL" /t REG_SZ /d "1" /f>NUL 2>&1
Reg.exe add "%HIVE_USER%\Software\Microsoft\Windows\CurrentVersion\Applets\Regedit" /v "LastKey" /t REG_SZ /d "Computer\%HIVE_USER%\TEST_KEY" /f>NUL 2>&1
START REGEDIT.EXE
ECHO ~ CHANGE OR DELETE TEST_VAL DATA(1), THE PACK IS DENIED, AND TEST_KEY REMAINS ~
ECHO ~ LEAVE TEST_VAL DATA(1), PACK IS PERMITTED, AND TEST_KEY WILL BE DELETED ~
ECHO ~ NEXT, PRESS {C} TO CREATE THE PACK, PUT IN A $PK LIST, AND TEST^^! ~&&PAUSE
ECHO;@ECHO OFF>>%MAKER_FOLDER%\PACKAGE.CMD"
ECHO;Reg.exe delete "%%HIVE_USER%%\TEST_KEY" /f^>NUL >>"%MAKER_FOLDER%\PACKAGE.CMD"
ECHO;START REGEDIT.EXE>>%MAKER_FOLDER%\PACKAGE.CMD"
ECHO;ECHO TEST_KEY DELETED, PACK PERMITTED^&PAUSE>>%MAKER_FOLDER%\PACKAGE.CMD"
ECHO;::MUST USE EXTRA SET OF PERCENTS IN PERMIT REG-KEY FIELD (ex. %%%%HIVE_USER%%%%\XYZ)>>%MAKER_FOLDER%\PACKAGE.CMD"
EXIT /B
:PACKEX_MSI_EXAMPLE
SET PackType=SCRIPTED&&SET PackName=MSI_INSTALLER_EXAMPLE&&SET PackDesc=Example of a Scripted Pack MSI Installer
ECHO;::LIVE COMMAND, NEEDS TO BE APPLIED LIVE, SETUPCOMPLETE, OR RUNONCE>>"%MAKER_FOLDER%\PACKAGE.CMD"
ECHO;::PUT MSI IN PACK FOLDER.>>%MAKER_FOLDER%\PACKAGE.CMD"
ECHO;"EXAMPLE.msi" /qn>>"%MAKER_FOLDER%\PACKAGE.CMD"
EXIT /B
:PACKEX_ANSWER_FILE
SET PackType=SCRIPTED&&SET PackName=Unattended&&SET PackDesc=Generate Unattended Answer File
ECHO;::TIME-MANDATORY: NEEDS TO BE APPLIED DURING IMAGE-APPLY STAGE($PK LIST)>>"%MAKER_FOLDER%\PACKAGE.CMD"
ECHO;::SETUPCOMPLETE/RUNONCE IS TOO LATE>>"%MAKER_FOLDER%\PACKAGE.CMD"
ECHO        - USERNAME? -
ECHO     - ENTER USERNAME -
ECHO   - 0-9 A-Z - NO SPACES -
ECHO      (ENTER) FOR DEFAULT
IF "%EXAMPLE_MODE%"=="CREATE" SET PROMPT_SET=NEWUSER2&&CALL:PROMPT_SET_ANY
IF NOT DEFINED NEWUSER2 SET "NEWUSER2=$haZZam"
ECHO.
ECHO       - PRODUCT KEY? -
ECHO XXXXX-XXXXX-XXXXX-XXXXX-XXXXX
ECHO      (ENTER) FOR DEFAULT
IF "%EXAMPLE_MODE%"=="CREATE" SET PROMPT_SET=PRODUCT_KEY&&CALL:PROMPT_SET_ANY
IF NOT DEFINED PRODUCT_KEY SET "PRODUCT_KEY=92NFX-8DJQP-P6BBQ-THF9C-7CG2H"
ECHO;MD "%%WINTAR%%\PANTHER">>"%MAKER_FOLDER%\PACKAGE.CMD"
ECHO;COPY /Y "%%~DP0unattend.xml" "%%WINTAR%%\PANTHER">>"%MAKER_FOLDER%\PACKAGE.CMD"
SET "ANSWER_FILE=%MAKER_FOLDER%\unattend.xml"
ECHO;^<?xml version="1.0" encoding="utf-8"?^>>"%ANSWER_FILE%"
ECHO;^<unattend xmlns="urn:schemas-microsoft-com:unattend"^>>>"%ANSWER_FILE%"
ECHO;	^<settings pass="oobeSystem"^>>>"%ANSWER_FILE%"
ECHO;		^<component name="Microsoft-Windows-International-Core" processorArchitecture="amd64" publicKeyToken="31bf3856ad364e35" language="neutral" versionScope="nonSxS" xmlns:wcm="http://schemas.microsoft.com/WMIConfig/2002/State" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"^>>>"%ANSWER_FILE%"
ECHO;			^<InputLocale^>0409:00000409^</InputLocale^>>>"%ANSWER_FILE%"
ECHO;			^<SystemLocale^>en-US^</SystemLocale^>>>"%ANSWER_FILE%"
ECHO;			^<UILanguage^>en-US^</UILanguage^>>>"%ANSWER_FILE%"
ECHO;			^<UILanguageFallback^>en-US^</UILanguageFallback^>>>"%ANSWER_FILE%"
ECHO;			^<UserLocale^>en-US^</UserLocale^>>>"%ANSWER_FILE%"
ECHO;		^</component^>>>"%ANSWER_FILE%"
ECHO;		^<component name="Microsoft-Windows-Shell-Setup" processorArchitecture="amd64" publicKeyToken="31bf3856ad364e35" language="neutral" versionScope="nonSxS" xmlns:wcm="http://schemas.microsoft.com/WMIConfig/2002/State" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"^>>>"%ANSWER_FILE%"
ECHO;			^<TimeZone^>Mountain Standard Time^</TimeZone^>>>"%ANSWER_FILE%"
ECHO;			^<AutoLogon^>>>"%ANSWER_FILE%"
ECHO;				^<Enabled^>true^</Enabled^>>>"%ANSWER_FILE%"
ECHO;				^<LogonCount^>9999999^</LogonCount^>>>"%ANSWER_FILE%"
ECHO;				^<Username^>%NEWUSER2%^</Username^>>>"%ANSWER_FILE%"
ECHO;				^<Password^>>>"%ANSWER_FILE%"
ECHO;					^<PlainText^>true^</PlainText^>>>"%ANSWER_FILE%"
ECHO;					^<Value^>^</Value^>>>"%ANSWER_FILE%"
ECHO;				^</Password^>>>"%ANSWER_FILE%"
ECHO;			^</AutoLogon^>>>"%ANSWER_FILE%"
ECHO;			^<OOBE^>>>"%ANSWER_FILE%"
ECHO;				^<HideEULAPage^>true^</HideEULAPage^>>>"%ANSWER_FILE%"
ECHO;				^<HideLocalAccountScreen^>true^</HideLocalAccountScreen^>>>"%ANSWER_FILE%"
ECHO;				^<HideOnlineAccountScreens^>true^</HideOnlineAccountScreens^>>>"%ANSWER_FILE%"
ECHO;				^<HideWirelessSetupInOOBE^>true^</HideWirelessSetupInOOBE^>>>"%ANSWER_FILE%"
ECHO;				^<NetworkLocation^>Other^</NetworkLocation^>>>"%ANSWER_FILE%"
ECHO;				^<ProtectYourPC^>3^</ProtectYourPC^>>>"%ANSWER_FILE%"
ECHO;				^<SkipMachineOOBE^>true^</SkipMachineOOBE^>>>"%ANSWER_FILE%"
ECHO;				^<SkipUserOOBE^>true^</SkipUserOOBE^>>>"%ANSWER_FILE%"
ECHO;			^</OOBE^>>>"%ANSWER_FILE%"
ECHO;			^<UserAccounts^>>>"%ANSWER_FILE%"
ECHO;				^<LocalAccounts^>>>"%ANSWER_FILE%"
ECHO;					^<LocalAccount wcm:action="add"^>>>"%ANSWER_FILE%"
ECHO;						^<Group^>Administrators^</Group^>>>"%ANSWER_FILE%"
ECHO;						^<Name^>%NEWUSER2%^</Name^>>>"%ANSWER_FILE%"
ECHO;						^<Password^>>>"%ANSWER_FILE%"
ECHO;							^<PlainText^>true^</PlainText^>>>"%ANSWER_FILE%"
ECHO;							^<Value^>^</Value^>>>"%ANSWER_FILE%"
ECHO;						^</Password^>>>"%ANSWER_FILE%"
ECHO;					^</LocalAccount^>>>"%ANSWER_FILE%"
ECHO;				^</LocalAccounts^>>>"%ANSWER_FILE%"
ECHO;			^</UserAccounts^>>>"%ANSWER_FILE%"
ECHO;		^</component^>>>"%ANSWER_FILE%"
ECHO;	^</settings^>>>"%ANSWER_FILE%"
ECHO;	^<settings pass="specialize"^>>>"%ANSWER_FILE%"
ECHO;		^<component name="Microsoft-Windows-Security-SPP-UX" processorArchitecture="amd64" publicKeyToken="31bf3856ad364e35" language="neutral" versionScope="nonSxS" xmlns:wcm="http://schemas.microsoft.com/WMIConfig/2002/State" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"^>>>"%ANSWER_FILE%"
ECHO;			^<SkipAutoActivation^>true^</SkipAutoActivation^>>>"%ANSWER_FILE%"
ECHO;		^</component^>>>"%ANSWER_FILE%"
ECHO;		^<component name="Microsoft-Windows-Shell-Setup" processorArchitecture="amd64" publicKeyToken="31bf3856ad364e35" language="neutral" versionScope="nonSxS" xmlns:wcm="http://schemas.microsoft.com/WMIConfig/2002/State" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"^>>>"%ANSWER_FILE%"
ECHO;			^<ComputerName^>Computer^</ComputerName^>>>"%ANSWER_FILE%"
ECHO;			^<CopyProfile^>false^</CopyProfile^>>>"%ANSWER_FILE%"
ECHO;			^<ProductKey^>%PRODUCT_KEY%^</ProductKey^>>>"%ANSWER_FILE%"
ECHO;		^</component^>>>"%ANSWER_FILE%"
ECHO;	^</settings^>>>"%ANSWER_FILE%"
ECHO;	^<settings pass="windowsPE"^>>>"%ANSWER_FILE%"
ECHO;		^<component name="Microsoft-Windows-International-Core-WinPE" processorArchitecture="amd64" publicKeyToken="31bf3856ad364e35" language="neutral" versionScope="nonSxS" xmlns:wcm="http://schemas.microsoft.com/WMIConfig/2002/State" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"^>>>"%ANSWER_FILE%"
ECHO;			^<InputLocale^>0409:00000409^</InputLocale^>>>"%ANSWER_FILE%"
ECHO;			^<SystemLocale^>en-US^</SystemLocale^>>>"%ANSWER_FILE%"
ECHO;			^<UILanguage^>en-US^</UILanguage^>>>"%ANSWER_FILE%"
ECHO;			^<UILanguageFallback^>en-US^</UILanguageFallback^>>>"%ANSWER_FILE%"
ECHO;			^<UserLocale^>en-US^</UserLocale^>>>"%ANSWER_FILE%"
ECHO;			^<SetupUILanguage^>>>"%ANSWER_FILE%"
ECHO;				^<UILanguage^>en-US^</UILanguage^>>>"%ANSWER_FILE%"
ECHO;			^</SetupUILanguage^>>>"%ANSWER_FILE%"
ECHO;		^</component^>>>"%ANSWER_FILE%"
ECHO;		^<component name="Microsoft-Windows-Setup" processorArchitecture="amd64" publicKeyToken="31bf3856ad364e35" language="neutral" versionScope="nonSxS" xmlns:wcm="http://schemas.microsoft.com/WMIConfig/2002/State" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"^>>>"%ANSWER_FILE%"
ECHO;			^<Diagnostics^>>>"%ANSWER_FILE%"
ECHO;				^<OptIn^>false^</OptIn^>>>"%ANSWER_FILE%"
ECHO;			^</Diagnostics^>>>"%ANSWER_FILE%"
ECHO;			^<DynamicUpdate^>>>"%ANSWER_FILE%"
ECHO;				^<Enable^>false^</Enable^>>>"%ANSWER_FILE%"
ECHO;				^<WillShowUI^>OnError^</WillShowUI^>>>"%ANSWER_FILE%"
ECHO;			^</DynamicUpdate^>>>"%ANSWER_FILE%"
ECHO;			^<ImageInstall^>>>"%ANSWER_FILE%"
ECHO;				^<OSImage^>>>"%ANSWER_FILE%"
ECHO;					^<Compact^>true^</Compact^>>>"%ANSWER_FILE%"
ECHO;					^<WillShowUI^>OnError^</WillShowUI^>>>"%ANSWER_FILE%"
ECHO;					^<InstallFrom^>>>"%ANSWER_FILE%"
ECHO;						^<MetaData wcm:action="add"^>>>"%ANSWER_FILE%"
ECHO;							^<Key^>/IMAGE/INDEX^</Key^>>>"%ANSWER_FILE%"
ECHO;							^<Value^>1^</Value^>>>"%ANSWER_FILE%"
ECHO;						^</MetaData^>>>"%ANSWER_FILE%"
ECHO;					^</InstallFrom^>>>"%ANSWER_FILE%"
ECHO;				^</OSImage^>>>"%ANSWER_FILE%"
ECHO;			^</ImageInstall^>>>"%ANSWER_FILE%"
ECHO;			^<UserData^>>>"%ANSWER_FILE%"
ECHO;				^<AcceptEula^>true^</AcceptEula^>>>"%ANSWER_FILE%"
ECHO;				^<ProductKey^>>>"%ANSWER_FILE%"
ECHO;					^<Key^>%PRODUCT_KEY%^</Key^>>>"%ANSWER_FILE%"
ECHO;					^<WillShowUI^>OnError^</WillShowUI^>>>"%ANSWER_FILE%"
ECHO;				^</ProductKey^>>>"%ANSWER_FILE%"
ECHO;			^</UserData^>>>"%ANSWER_FILE%"
ECHO;		^</component^>>>"%ANSWER_FILE%"
ECHO;	^</settings^>>>"%ANSWER_FILE%"
ECHO;^</unattend^>>>"%ANSWER_FILE%"
REM DISM /IMAGE:"%APPLYDIR%" /APPLY-UNATTEND:"%ANSWER_FILE%"
EXIT /B
REM BCD_CREATE_BCD_CREATE_BCD_CREATE_BCD_CREATE_BCD_CREATE_BCD_CREATE_BCD_CREATE
REM BCD_CREATE_BCD_CREATE_BCD_CREATE_BCD_CREATE_BCD_CREATE_BCD_CREATE_BCD_CREATE
:BCD_CREATE
REM BCD_CREATE_BCD_CREATE_BCD_CREATE_BCD_CREATE_BCD_CREATE_BCD_CREATE_BCD_CREATE
REM BCD_CREATE_BCD_CREATE_BCD_CREATE_BCD_CREATE_BCD_CREATE_BCD_CREATE_BCD_CREATE
REM CANT FIGURE HOW TO PARSE CERTAIN PARTS OF BCD, THIS WILL HAVE TO DO FOR NOW
SET "BCD_FILE=%TEMP%\0020"
SET "BCD_KEY=BCD00000001"
REG UNLOAD HKLM\%BCD_KEY%>NUL 2>&1
DEL /Q /F "%BCD_FILE%">NUL 2>&1
COPY /Y "%WINDIR%\System32\config\ELAM" "%BCD_FILE%"
REG LOAD HKLM\%BCD_KEY% "%BCD_FILE%">NUL 2>&1
CALL:BCD_GUID_SDI&&CALL:BCD_GUID1&&CALL:BCD_GUID2
CALL:BCD_GUID3&&CALL:BCD_GUID4&&CALL:BCD_GUID5
CALL:BCD_GUID6&&CALL:BCD_GUID7&&CALL:BCD_GUID8
CALL:BCD_GUID9&&CALL:BCD_GUID$&&CALL:BCD_GUID0
REM DO BOOT MANAGER LAST, NEEDS ALL BCD_GUID'S
CALL:BCD_GUID_WBM
REG UNLOAD HKLM\%BCD_KEY%>NUL 2>&1
IF "%CAME_FROM%"=="COMMAND" COPY /Y "%BCD_FILE%" "Q:\EFI\Microsoft\Boot\BCD">NUL 2>&1
IF "%CAME_FROM%"=="$ETUP" COPY /Y "%BCD_FILE%" "Q:\EFI\Microsoft\Boot\BCD">NUL 2>&1
IF "%CAME_FROM%"=="DISKMGR" COPY /Y "%BCD_FILE%" "Q:\EFI\Microsoft\Boot\BCD">NUL 2>&1
DEL /Q /F "%BCD_FILE%">NUL 2>&1
EXIT /B
:BCD_ADD
SET "HEX_INPUT=%BCD_GUID_PATH%"
SET "HEX_OUTPUT=BCD_GUID_PATHHEX"
CALL:HEX_INPUT
IF "%BCD_GUID_TYPE%"=="SDI" CALL:BCD_SDI&&EXIT /B
IF "%BCD_GUID_TYPE%"=="WBM" CALL:BCD_WBM&&EXIT /B
%BCDFILL1%%BCD_GUID%%BCDFILL2% "%BCD_NUM%" /f
IF "%BCD_GUID_TYPE%"=="VHDX" %BCDFILL1%%BCD_GUID%%BCDFILL3% "%BCDFILL15%%BCD_GUID_PATHHEX%0000%BCD_GUID_PATHHEX%0000" /f
IF "%BCD_GUID_TYPE%"=="WIM" %BCDFILL1%%BCD_GUID%%BCDFILL3% "%BCD_FILLER_WIM%%BCD_GUID_PATHHEX%0000" /f
%BCDFILL1%%BCD_GUID%%BCDFILL4% "%WINPTH%%WINLOAD%" /f
%BCDFILL1%%BCD_GUID%%BCDFILL5% "%BCD_GUID_NAME%" /f
%BCDFILL1%%BCD_GUID%%BCDFILL6% "%BCD_LANG%" /f
IF "%BCD_GUID_TYPE%"=="VHDX" %BCDFILL1%%BCD_GUID%%BCDFILL7% "%BCDFILL15%%BCD_GUID_PATHHEX%0000%BCD_GUID_PATHHEX%0000" /f
IF "%BCD_GUID_TYPE%"=="WIM" %BCDFILL1%%BCD_GUID%%BCDFILL7% "%BCD_FILLER_WIM%%BCD_GUID_PATHHEX%0000" /f
%BCDFILL1%%BCD_GUID%%BCDFILL8% "%WINPTH%" /f
%BCDFILL1%%BCD_GUID%%BCDFILL9% "%DETECT_HAL%" /f
IF "%BCD_GUID_TYPE%"=="WIM" %BCDFILL1%%BCD_GUID%%BCDFILL14% "%IS_WINPE%" /f
SET BCD_GUID_NAME=&&SET BCD_GUID_PATH=&&SET BCD_GUID_TYPE=&&SET BCD_NUM=
EXIT /B
:BCD_GUID0
SET "BCD_GUID_TYPE=VHDX"
IF DEFINED BCD_NAME0 SET "BCD_GUID_NAME=%BCD_NAME0%"
IF NOT DEFINED BCD_NAME0 SET "BCD_GUID_NAME=0"
SET "BCD_GUID_PATH=\$\0.VHDX"&&SET "BCD_GUID=58c8c867-269b-435f-ba4c-ad1d519b3ec5"&&SET "BCD_GUID0=%BCD_GUID%"
CALL:BCD_FILL&&CALL:BCD_ADD
EXIT /B
:BCD_GUID1
SET "BCD_GUID_TYPE=VHDX"
IF DEFINED BCD_NAME1 SET "BCD_GUID_NAME=%BCD_NAME1%"
IF NOT DEFINED BCD_NAME1 SET "BCD_GUID_NAME=1"
SET "BCD_GUID_PATH=\$\1.VHDX"&&SET "BCD_GUID=6543c543-d9f8-43b8-bd0a-65722459cb68"&&SET "BCD_GUID1=%BCD_GUID%"
CALL:BCD_FILL&&CALL:BCD_ADD
EXIT /B
:BCD_GUID2
SET "BCD_GUID_TYPE=VHDX"
IF DEFINED BCD_NAME2 SET "BCD_GUID_NAME=%BCD_NAME2%"
IF NOT DEFINED BCD_NAME2 SET "BCD_GUID_NAME=2"
SET "BCD_GUID_PATH=\$\2.VHDX"&&SET "BCD_GUID=bb4616d9-5645-431a-bd2b-d958664b7f43"&&SET "BCD_GUID2=%BCD_GUID%"
CALL:BCD_FILL&&CALL:BCD_ADD
EXIT /B
:BCD_GUID3
SET "BCD_GUID_TYPE=VHDX"
IF DEFINED BCD_NAME3 SET "BCD_GUID_NAME=%BCD_NAME3%"
IF NOT DEFINED BCD_NAME3 SET "BCD_GUID_NAME=3"
SET "BCD_GUID_PATH=\$\3.VHDX"&&SET "BCD_GUID=4d6c61cd-22d0-4f53-ba57-97de04b4c7d7"&&SET "BCD_GUID3=%BCD_GUID%"
CALL:BCD_FILL&&CALL:BCD_ADD
EXIT /B
:BCD_GUID4
SET "BCD_GUID_TYPE=VHDX"
IF DEFINED BCD_NAME4 SET "BCD_GUID_NAME=%BCD_NAME4%"
IF NOT DEFINED BCD_NAME4 SET "BCD_GUID_NAME=4"
SET "BCD_GUID_PATH=\$\4.VHDX"&&SET "BCD_GUID=b5727c45-6352-4ed8-a295-86f35b7e157a"&&SET "BCD_GUID4=%BCD_GUID%"
CALL:BCD_FILL&&CALL:BCD_ADD
EXIT /B
:BCD_GUID5
SET "BCD_GUID_TYPE=VHDX"
IF DEFINED BCD_NAME5 SET "BCD_GUID_NAME=%BCD_NAME5%"
IF NOT DEFINED BCD_NAME5 SET "BCD_GUID_NAME=5"
SET "BCD_GUID_PATH=\$\5.VHDX"&&SET "BCD_GUID=33b58b7c-411d-434c-bfa3-ef30e6498bb4"&&SET "BCD_GUID5=%BCD_GUID%"
CALL:BCD_FILL&&CALL:BCD_ADD
EXIT /B
:BCD_GUID6
SET "BCD_GUID_TYPE=VHDX"
IF DEFINED BCD_NAME6 SET "BCD_GUID_NAME=%BCD_NAME6%"
IF NOT DEFINED BCD_NAME6 SET "BCD_GUID_NAME=6"
SET "BCD_GUID_PATH=\$\6.VHDX"&&SET "BCD_GUID=df9adbea-3895-4114-82e0-b39212b230c9"&&SET "BCD_GUID6=%BCD_GUID%"
CALL:BCD_FILL&&CALL:BCD_ADD
EXIT /B
:BCD_GUID7
SET "BCD_GUID_TYPE=VHDX"
IF DEFINED BCD_NAME7 SET "BCD_GUID_NAME=%BCD_NAME7%"
IF NOT DEFINED BCD_NAME7 SET "BCD_GUID_NAME=7"
SET "BCD_GUID_PATH=\$\7.VHDX"&&SET "BCD_GUID=f5e63b2a-0802-4f9b-b3f4-838a74424fae"&&SET "BCD_GUID7=%BCD_GUID%"
CALL:BCD_FILL&&CALL:BCD_ADD
EXIT /B
:BCD_GUID8
SET "BCD_GUID_TYPE=VHDX"
IF DEFINED BCD_NAME8 SET "BCD_GUID_NAME=%BCD_NAME8%"
IF NOT DEFINED BCD_NAME8 SET "BCD_GUID_NAME=8"
SET "BCD_GUID_PATH=\$\8.VHDX"&&SET "BCD_GUID=b73fe480-3107-4723-9879-78cdb7293c84"&&SET "BCD_GUID8=%BCD_GUID%"
CALL:BCD_FILL&&CALL:BCD_ADD
EXIT /B
:BCD_GUID9
SET "BCD_GUID_TYPE=VHDX"
IF DEFINED BCD_NAME9 SET "BCD_GUID_NAME=%BCD_NAME9%"
IF NOT DEFINED BCD_NAME9 SET "BCD_GUID_NAME=9"
SET "BCD_GUID_PATH=\$\9.VHDX"&&SET "BCD_GUID=fc841074-dc0f-4619-8a9d-905605f2a590"&&SET "BCD_GUID9=%BCD_GUID%"
CALL:BCD_FILL&&CALL:BCD_ADD
EXIT /B
:BCD_GUID$
SET "BCD_GUID_TYPE=WIM"
IF DEFINED BCD_NAME$ SET "BCD_GUID_NAME=%BCD_NAME$%"
IF NOT DEFINED BCD_NAME$ SET "BCD_GUID_NAME=$"
SET "BCD_GUID_PATH=\BOOT.WIM"&&SET "BCD_GUID=fcd0bb6f-25a0-43a9-810c-8f574620ab90"&&SET "BCD_GUID$=%BCD_GUID%"
CALL:BCD_FILL&&CALL:BCD_ADD
EXIT /B
:BCD_GUID_WBM
SET "BCD_GUID_TYPE=WBM"
SET "BCD_GUID_NAME=Windows Boot Manager"
SET "BCD_GUID=9dea862c-5cdd-4e70-acc1-f32b344d4795"
SET "BCD_GUID_WBM=%BCD_GUID%"
CALL:BCD_FILL&&CALL:BCD_ADD
EXIT /B
:BCD_WBM
%BCDFILL1%%BCD_GUID%%BCDFILL2% "%BCD_NUM%" /f
%BCDFILL1%%BCD_GUID%%BCDFILL5% "%BCD_GUID_NAME%" /f
%BCDFILL1%%BCD_GUID%%BCDFILL6% "%BCD_LANG%" /f
%BCDFILL1%%BCD_GUID%%BCDFILL10% "{%BCD_GUID1%}\0{%BCD_GUID2%}\0{%BCD_GUID3%}\0{%BCD_GUID4%}\0{%BCD_GUID5%}\0{%BCD_GUID6%}\0{%BCD_GUID7%}\0{%BCD_GUID8%}\0{%BCD_GUID9%}\0{%BCD_GUID$%}\0{%BCD_GUID0%}" /f
%BCDFILL1%%BCD_GUID%%BCDFILL11% "%BOOT_TIMEOUT%" /f
EXIT /B
:BCD_GUID_SDI
SET "BCD_GUID_TYPE=SDI"
SET "BCD_GUID=ae5534e0-a924-466c-b836-758539a3ee3a"
SET "BCD_GUID_SDI=%BCD_GUID%"
CALL:BCD_FILL&&CALL:BCD_ADD
EXIT /B
:BCD_SDI
%BCDFILL1%%BCD_GUID%%BCDFILL2% "%BCD_NUM%" /f
%BCDFILL1%%BCD_GUID%%BCDFILL12% "%BCD_FILLER_SDI%" /f
%BCDFILL1%%BCD_GUID%%BCDFILL13% "%BCD_SDIPATH%" /f
EXIT /B
:BCD_FILL
Reg.exe add HKLM\%BCD_KEY%\Description /v KeyName /t REG_SZ /d "%BCD_KEY%" /f
Reg.exe add HKLM\%BCD_KEY%\Description /v System /t REG_DWORD /d "1" /f
Reg.exe add HKLM\%BCD_KEY%\Description /v TreatAsSystem /t REG_DWORD /d "1" /f
IF NOT DEFINED BOOT_TIMEOUT SET "BOOT_TIMEOUT=0300000000000000"
REM SET "BCD_KEY=BCD00000001"
IF "%BCD_GUID_TYPE%"=="SDI" SET "BCD_NUM=805306368"
IF "%BCD_GUID_TYPE%"=="WBM" SET "BCD_NUM=269484034"
IF "%BCD_GUID_TYPE%"=="VHDX" SET "BCD_NUM=270532611"
IF "%BCD_GUID_TYPE%"=="WIM" SET "BCD_NUM=270532611"&&SET "IS_WINPE=01"
IF "%BCD_GUID_TYPE%"=="VHDX" SET "WINLOAD=\system32\winload.efi"
IF "%BCD_GUID_TYPE%"=="WIM" SET "WINLOAD=\system32\boot\winload.efi"
SET "BCD_LANG=en-US"&&SET "DETECT_HAL=01"&&SET "WINPTH=\Windows"
SET "BCDFILL1=Reg.exe add HKLM\%BCD_KEY%\Objects\{"
SET "BCDFILL2=}\Description /v Type /t REG_DWORD /d"
SET "BCDFILL3=}\Elements\11000001 /v Element /t REG_BINARY /d"
SET "BCDFILL4=}\Elements\12000002 /v Element /t REG_SZ /d"
SET "BCDFILL5=}\Elements\12000004 /v Element /t REG_SZ /d"
SET "BCDFILL6=}\Elements\12000005 /v Element /t REG_SZ /d"
SET "BCDFILL7=}\Elements\21000001 /v Element /t REG_BINARY /d"
SET "BCDFILL8=}\Elements\22000002 /v Element /t REG_SZ /d"
SET "BCDFILL9=}\Elements\26000010 /v Element /t REG_BINARY /d"
SET "BCDFILL10=}\Elements\24000001 /v Element /t REG_MULTI_SZ /d"
SET "BCDFILL11=}\Elements\25000004 /v Element /t REG_BINARY /d"
SET "BCDFILL12=}\Elements\31000003 /v Element /t REG_BINARY /d"
SET "BCDFILL13=}\Elements\32000004 /v Element /t REG_SZ /d"
SET "BCDFILL14=}\Elements\26000022 /v Element /t REG_BINARY /d"
SET "BCD_SDIPATH=\boot\boot.sdi"&&SET "BCD_FILLER_SDI=00000000000000000000000000000000050000000000000048000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
SET "BCD_FILLER_WIM=e03455ae24a96c46b836758539a3ee3a000000000100000090000000000000000300000000000000000000007c0000000000000000000000010000006800000005000000050000000000000048000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
SET "BCDFILL15=000000000000000000000000000000000800000000000000aa0000000000000000000000020000121e000000000000000000000000008c00000000000000060000000000000000000000000000000000000000000000000000000000000064000000000000000500000001000000500000000500000008000000000000003000000000000000010000000000000000000000"
EXIT /B
:HEX_INPUT
IF NOT DEFINED HEX_INPUT EXIT /B
FOR /F "delims=" %%G in ('CMD.EXE /D /U /C ECHO %HEX_INPUT%^| FIND /V ""') do (CALL SET "HEX_IN=%%G"&&CALL:HEX_OUTPUT)
CALL SET "%HEX_OUTPUT%=%HEX_ACCUM%"&&SET HEX_ACCUM=&&SET HEX_OUTPUT=&&SET HEX_INPUT=
EXIT /B
:HEX_OUTPUT
REM REM_REM_REM_REM_REM_REM_REM_REM_REM_REM_REM_REM
IF "%HEX_IN%"==" " SET HEXED=1&&CALL SET HEX_OUT=20
IF "%HEX_IN%"=="^!" SET HEXED=1&&CALL SET HEX_OUT=21
IF "%HEX_IN%"=="#" SET HEXED=1&&CALL SET HEX_OUT=23
IF "%HEX_IN%"=="$" SET HEXED=1&&CALL SET HEX_OUT=24
IF "%HEX_IN%"=="^%" SET HEXED=1&&CALL SET HEX_OUT=25
IF "%HEX_IN%"=="^&" SET HEXED=1&&CALL SET HEX_OUT=26
IF "%HEX_IN%"=="(" SET HEXED=1&&CALL SET HEX_OUT=28
IF "%HEX_IN%"==")" SET HEXED=1&&CALL SET HEX_OUT=29
IF "%HEX_IN%"=="*" SET HEXED=1&&CALL SET HEX_OUT=2a
IF "%HEX_IN%"=="+" SET HEXED=1&&CALL SET HEX_OUT=2b
IF "%HEX_IN%"=="," SET HEXED=1&&CALL SET HEX_OUT=2c
IF "%HEX_IN%"=="-" SET HEXED=1&&CALL SET HEX_OUT=2d
IF "%HEX_IN%"=="." SET HEXED=1&&CALL SET HEX_OUT=2e
IF "%HEX_IN%"=="/" SET HEXED=1&&CALL SET HEX_OUT=2f
REM REM_REM_REM_REM_REM_REM_REM_REM_REM_REM_REM_REM
IF "%HEX_IN%"=="0" SET HEXED=1&&CALL SET HEX_OUT=30
IF "%HEX_IN%"=="1" SET HEXED=1&&CALL SET HEX_OUT=31
IF "%HEX_IN%"=="2" SET HEXED=1&&CALL SET HEX_OUT=32
IF "%HEX_IN%"=="3" SET HEXED=1&&CALL SET HEX_OUT=33
IF "%HEX_IN%"=="4" SET HEXED=1&&CALL SET HEX_OUT=34
IF "%HEX_IN%"=="5" SET HEXED=1&&CALL SET HEX_OUT=35
IF "%HEX_IN%"=="6" SET HEXED=1&&CALL SET HEX_OUT=36
IF "%HEX_IN%"=="7" SET HEXED=1&&CALL SET HEX_OUT=37
IF "%HEX_IN%"=="8" SET HEXED=1&&CALL SET HEX_OUT=38
IF "%HEX_IN%"=="9" SET HEXED=1&&CALL SET HEX_OUT=39
REM REM_REM_REM_REM_REM_REM_REM_REM_REM_REM_REM_REM
IF "%HEX_IN%"==":" SET HEXED=1&&CALL SET HEX_OUT=3a
IF "%HEX_IN%"==";" SET HEXED=1&&CALL SET HEX_OUT=3b
IF "%HEX_IN%"=="=" SET HEXED=1&&CALL SET HEX_OUT=3d
IF "%HEX_IN%"=="?" SET HEXED=1&&CALL SET HEX_OUT=3f
IF "%HEX_IN%"=="@" SET HEXED=1&&CALL SET HEX_OUT=40
REM REM_REM_REM_REM_REM_REM_REM_REM_REM_REM_REM_REM
IF "%HEX_IN%"=="A" SET HEXED=1&&CALL SET HEX_OUT=41
IF "%HEX_IN%"=="B" SET HEXED=1&&CALL SET HEX_OUT=42
IF "%HEX_IN%"=="C" SET HEXED=1&&CALL SET HEX_OUT=43
IF "%HEX_IN%"=="D" SET HEXED=1&&CALL SET HEX_OUT=44
IF "%HEX_IN%"=="E" SET HEXED=1&&CALL SET HEX_OUT=45
IF "%HEX_IN%"=="F" SET HEXED=1&&CALL SET HEX_OUT=46
IF "%HEX_IN%"=="G" SET HEXED=1&&CALL SET HEX_OUT=47
IF "%HEX_IN%"=="H" SET HEXED=1&&CALL SET HEX_OUT=48
IF "%HEX_IN%"=="I" SET HEXED=1&&CALL SET HEX_OUT=49
IF "%HEX_IN%"=="J" SET HEXED=1&&CALL SET HEX_OUT=4a
IF "%HEX_IN%"=="K" SET HEXED=1&&CALL SET HEX_OUT=4b
IF "%HEX_IN%"=="L" SET HEXED=1&&CALL SET HEX_OUT=4c
IF "%HEX_IN%"=="M" SET HEXED=1&&CALL SET HEX_OUT=4d
IF "%HEX_IN%"=="N" SET HEXED=1&&CALL SET HEX_OUT=4e
IF "%HEX_IN%"=="O" SET HEXED=1&&CALL SET HEX_OUT=4f
IF "%HEX_IN%"=="P" SET HEXED=1&&CALL SET HEX_OUT=50
IF "%HEX_IN%"=="Q" SET HEXED=1&&CALL SET HEX_OUT=51
IF "%HEX_IN%"=="R" SET HEXED=1&&CALL SET HEX_OUT=52
IF "%HEX_IN%"=="S" SET HEXED=1&&CALL SET HEX_OUT=53
IF "%HEX_IN%"=="T" SET HEXED=1&&CALL SET HEX_OUT=54
IF "%HEX_IN%"=="U" SET HEXED=1&&CALL SET HEX_OUT=55
IF "%HEX_IN%"=="V" SET HEXED=1&&CALL SET HEX_OUT=56
IF "%HEX_IN%"=="W" SET HEXED=1&&CALL SET HEX_OUT=57
IF "%HEX_IN%"=="X" SET HEXED=1&&CALL SET HEX_OUT=58
IF "%HEX_IN%"=="Y" SET HEXED=1&&CALL SET HEX_OUT=59
IF "%HEX_IN%"=="Z" SET HEXED=1&&CALL SET HEX_OUT=5a
REM REM_REM_REM_REM_REM_REM_REM_REM_REM_REM_REM_REM
IF "%HEX_IN%"=="[" SET HEXED=1&&CALL SET HEX_OUT=5b
IF "%HEX_IN%"=="\" SET HEXED=1&&CALL SET HEX_OUT=5c
IF "%HEX_IN%"=="]" SET HEXED=1&&CALL SET HEX_OUT=5d
IF "%HEX_IN%"=="_" SET HEXED=1&&CALL SET HEX_OUT=5f
REM REM_REM_REM_REM_REM_REM_REM_REM_REM_REM_REM_REM
IF "%HEX_IN%"=="a" SET HEXED=1&&CALL SET HEX_OUT=61
IF "%HEX_IN%"=="b" SET HEXED=1&&CALL SET HEX_OUT=62
IF "%HEX_IN%"=="c" SET HEXED=1&&CALL SET HEX_OUT=63
IF "%HEX_IN%"=="d" SET HEXED=1&&CALL SET HEX_OUT=64
IF "%HEX_IN%"=="e" SET HEXED=1&&CALL SET HEX_OUT=65
IF "%HEX_IN%"=="f" SET HEXED=1&&CALL SET HEX_OUT=66
IF "%HEX_IN%"=="g" SET HEXED=1&&CALL SET HEX_OUT=67
IF "%HEX_IN%"=="h" SET HEXED=1&&CALL SET HEX_OUT=68
IF "%HEX_IN%"=="i" SET HEXED=1&&CALL SET HEX_OUT=69
IF "%HEX_IN%"=="j" SET HEXED=1&&CALL SET HEX_OUT=6a
IF "%HEX_IN%"=="k" SET HEXED=1&&CALL SET HEX_OUT=6b
IF "%HEX_IN%"=="l" SET HEXED=1&&CALL SET HEX_OUT=6c
IF "%HEX_IN%"=="m" SET HEXED=1&&CALL SET HEX_OUT=6d
IF "%HEX_IN%"=="n" SET HEXED=1&&CALL SET HEX_OUT=6e
IF "%HEX_IN%"=="o" SET HEXED=1&&CALL SET HEX_OUT=6f
IF "%HEX_IN%"=="p" SET HEXED=1&&CALL SET HEX_OUT=70
IF "%HEX_IN%"=="q" SET HEXED=1&&CALL SET HEX_OUT=71
IF "%HEX_IN%"=="r" SET HEXED=1&&CALL SET HEX_OUT=72
IF "%HEX_IN%"=="s" SET HEXED=1&&CALL SET HEX_OUT=73
IF "%HEX_IN%"=="t" SET HEXED=1&&CALL SET HEX_OUT=74
IF "%HEX_IN%"=="u" SET HEXED=1&&CALL SET HEX_OUT=75
IF "%HEX_IN%"=="v" SET HEXED=1&&CALL SET HEX_OUT=76
IF "%HEX_IN%"=="w" SET HEXED=1&&CALL SET HEX_OUT=77
IF "%HEX_IN%"=="x" SET HEXED=1&&CALL SET HEX_OUT=78
IF "%HEX_IN%"=="y" SET HEXED=1&&CALL SET HEX_OUT=79
IF "%HEX_IN%"=="z" SET HEXED=1&&CALL SET HEX_OUT=7a
REM REM_REM_REM_REM_REM_REM_REM_REM_REM_REM_REM_REM
IF "%HEX_IN%"=="{" SET HEXED=1&&CALL SET HEX_OUT=7b
IF "%HEX_IN%"=="}" SET HEXED=1&&CALL SET HEX_OUT=7d
IF "%HEX_IN%"=="~" SET HEXED=1&&CALL SET HEX_OUT=7e
IF "%HEXED%"=="1" CALL SET "HEX_OUT=%HEX_OUT%00"
IF "%HEXED%"=="1" CALL SET "HEX_ACCUM=%HEX_ACCUM%%HEX_OUT%"
SET HEX_IN=&&SET HEXED=&&SET HEX_OUT=
EXIT /B
:CLEAN_EXIT
COLOR 07&&TITLE C:\Windows\system32\CMD.exe&&CD /D "%ORIG_CD%"
IF "%PROG_MODE%"=="RAMDISK" EXIT 0&&EXIT 0